name: Deploy to Production

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 'latest'
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: 'turn2app/pnpm-lock.yaml'
      
      - name: Install dependencies
        working-directory: ./turn2app
        run: pnpm install --frozen-lockfile
      
      - name: Run tests
        working-directory: ./turn2app
        run: pnpm test --run
        env:
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
          SESSION_KEYS: ${{ secrets.STAGING_SESSION_KEYS }}
          ENCRYPTION_KEY: ${{ secrets.STAGING_ENCRYPTION_KEY }}
          SHOPIFY_API_KEY: ${{ secrets.SHOPIFY_API_KEY }}
          SHOPIFY_API_SECRET: ${{ secrets.SHOPIFY_API_SECRET }}
          SENTRY_DSN: ${{ secrets.STAGING_SENTRY_DSN }}
          APP_URL: ${{ secrets.STAGING_APP_URL }}
      
      - name: Build application
        working-directory: ./turn2app
        run: pnpm build
        env:
          NODE_ENV: production
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
          SESSION_KEYS: ${{ secrets.STAGING_SESSION_KEYS }}
          ENCRYPTION_KEY: ${{ secrets.STAGING_ENCRYPTION_KEY }}
          SHOPIFY_API_KEY: ${{ secrets.SHOPIFY_API_KEY }}
          SHOPIFY_API_SECRET: ${{ secrets.SHOPIFY_API_SECRET }}
          SENTRY_DSN: ${{ secrets.STAGING_SENTRY_DSN }}
          SENTRY_ENVIRONMENT: staging
          APP_URL: ${{ secrets.STAGING_APP_URL }}
      
      - name: Deploy to Vercel (Staging)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./turn2app
          vercel-args: '--prod'
          alias-domains: |
            turn2app-staging.vercel.app
      
      - name: Run smoke tests
        working-directory: ./turn2app
        run: pnpm test:smoke
        env:
          BASE_URL: ${{ secrets.STAGING_APP_URL }}
        continue-on-error: true
      
      - name: Notify deployment status
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    environment: production
    needs: deploy-staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 'latest'
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: 'turn2app/pnpm-lock.yaml'
      
      - name: Install dependencies
        working-directory: ./turn2app
        run: pnpm install --frozen-lockfile
      
      - name: Run full test suite
        working-directory: ./turn2app
        run: pnpm test --run --coverage
        env:
          DATABASE_URL: ${{ secrets.PRODUCTION_DATABASE_URL }}
          SESSION_KEYS: ${{ secrets.PRODUCTION_SESSION_KEYS }}
          ENCRYPTION_KEY: ${{ secrets.PRODUCTION_ENCRYPTION_KEY }}
          SHOPIFY_API_KEY: ${{ secrets.SHOPIFY_API_KEY }}
          SHOPIFY_API_SECRET: ${{ secrets.SHOPIFY_API_SECRET }}
          SENTRY_DSN: ${{ secrets.PRODUCTION_SENTRY_DSN }}
          APP_URL: ${{ secrets.PRODUCTION_APP_URL }}
      
      - name: Build application
        working-directory: ./turn2app
        run: pnpm build
        env:
          NODE_ENV: production
          DATABASE_URL: ${{ secrets.PRODUCTION_DATABASE_URL }}
          SESSION_KEYS: ${{ secrets.PRODUCTION_SESSION_KEYS }}
          ENCRYPTION_KEY: ${{ secrets.PRODUCTION_ENCRYPTION_KEY }}
          SHOPIFY_API_KEY: ${{ secrets.SHOPIFY_API_KEY }}
          SHOPIFY_API_SECRET: ${{ secrets.SHOPIFY_API_SECRET }}
          SENTRY_DSN: ${{ secrets.PRODUCTION_SENTRY_DSN }}
          SENTRY_ENVIRONMENT: production
          APP_URL: ${{ secrets.PRODUCTION_APP_URL }}
      
      - name: Database migrations
        working-directory: ./turn2app
        run: pnpm db:migrate
        env:
          DATABASE_URL: ${{ secrets.PRODUCTION_DATABASE_URL }}
      
      - name: Deploy to Vercel (Production)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./turn2app
          vercel-args: '--prod'
          alias-domains: |
            turn2app.vercel.app
            app.turn2app.com
      
      - name: Health check
        run: |
          sleep 30  # Wait for deployment to be ready
          curl -f ${{ secrets.PRODUCTION_APP_URL }}/healthz || exit 1
      
      - name: Run production smoke tests
        working-directory: ./turn2app
        run: pnpm test:smoke
        env:
          BASE_URL: ${{ secrets.PRODUCTION_APP_URL }}
      
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: |
            turn2app/build/**/*
      
      - name: Notify successful deployment
        uses: 8398a7/action-slack@v3
        with:
          status: success
          channel: '#deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
          text: |
            ðŸš€ Successfully deployed to production!
            Version: ${{ github.ref_name }}
            URL: ${{ secrets.PRODUCTION_APP_URL }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}