{
  "version": 3,
  "sources": ["../node_modules/@remix-run/dev/dist/config/defaults/entry.server.node.tsx", "../app/root.tsx", "../app/routes/webhooks.app_uninstalled.tsx", "../app/lib/webhooks.server.ts", "../app/lib/tunnel.server.ts", "../app/lib/admin-api.server.ts", "../app/lib/prisma.server.ts", "../app/lib/crypto.server.ts", "../app/lib/shop.server.ts", "../app/routes/webhooks.products_update.tsx", "../app/routes/api.admin.products.tsx", "../app/lib/session.server.ts", "../app/lib/monitoring.server.ts", "../app/lib/middleware.server.ts", "../app/lib/validation.server.ts", "../app/routes/admin.branding.tsx", "../app/routes/api.admin.shop.tsx", "../app/routes/auth.callback.tsx", "../app/lib/shopify-auth.server.ts", "../app/routes/api.products.tsx", "../app/lib/storefront.server.ts", "../app/routes/api.settings.tsx", "../app/routes/auth.install.tsx", "../app/routes/api.config.tsx", "../app/routes/api.upload.tsx", "../app/routes/test.oauth.tsx", "../app/routes/readiness.tsx", "../app/routes/healthz.tsx", "../app/routes/_index.tsx", "../app/routes/admin.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["import { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport * as isbotModule from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  let prohibitOutOfOrderStreaming =\n    isBotRequest(request.headers.get(\"user-agent\")) || remixContext.isSpaMode;\n\n  return prohibitOutOfOrderStreaming\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\n// We have some Remix apps in the wild already running with isbot@3 so we need\n// to maintain backwards compatibility even though we want new apps to use\n// isbot@4.  That way, we can ship this as a minor Semver update to @remix-run/dev.\nfunction isBotRequest(userAgent: string | null) {\n  if (!userAgent) {\n    return false;\n  }\n\n  // isbot >= 3.8.0, >4\n  if (\"isbot\" in isbotModule && typeof isbotModule.isbot === \"function\") {\n    return isbotModule.isbot(userAgent);\n  }\n\n  // isbot < 3.8.0\n  if (\"default\" in isbotModule && typeof isbotModule.default === \"function\") {\n    return isbotModule.default(userAgent);\n  }\n\n  return false;\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration } from\n\"@remix-run/react\";\nimport type { MetaFunction } from \"@remix-run/node\";\nimport { AppProvider } from \"@shopify/polaris\";\nimport \"@shopify/polaris/build/esm/styles.css?__remix_sideEffect__\";\n\nexport const meta: MetaFunction = () => [\n{ charset: \"utf-8\" },\n{ title: \"TurnApp Admin\" },\n{ name: \"viewport\", content: \"width=device-width,initial-scale=1\" }];\n\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <AppProvider i18n={{}} theme=\"light\">\n          <Outlet />\n        </AppProvider>\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}", "import { json, type ActionFunctionArgs } from \"@remix-run/node\";\nimport { verifyWebhookHmac } from \"~/lib/webhooks.server\";\nimport { prisma } from \"~/lib/prisma.server\";\n\nexport async function action({ request }: ActionFunctionArgs) {\n  if (request.method !== \"POST\") {\n    return json({ error: \"Method not allowed\" }, { status: 405 });\n  }\n\n  const hmacHeader = request.headers.get(\"X-Shopify-Hmac-Sha256\");\n  const shopDomain = request.headers.get(\"X-Shopify-Shop-Domain\");\n  \n  if (!hmacHeader || !shopDomain) {\n    console.error(\"Missing required webhook headers\");\n    return json({ error: \"Missing headers\" }, { status: 400 });\n  }\n\n  // Get raw body for HMAC verification\n  const body = await request.text();\n  \n  // Verify HMAC signature\n  const apiSecret = process.env.SHOPIFY_API_SECRET;\n  if (!apiSecret) {\n    console.error(\"Missing Shopify API secret\");\n    return json({ error: \"Server configuration error\" }, { status: 500 });\n  }\n\n  if (!verifyWebhookHmac(body, hmacHeader, apiSecret)) {\n    console.error(\"Webhook HMAC verification failed for shop:\", shopDomain);\n    return json({ error: \"Invalid signature\" }, { status: 403 });\n  }\n\n  try {\n    // Parse webhook payload\n    const payload = JSON.parse(body);\n    console.log(\"App uninstalled webhook received:\", { \n      shop: shopDomain,\n      domain: payload.domain,\n      timestamp: new Date().toISOString()\n    });\n\n    // Soft delete shop record (set uninstalledAt timestamp)\n    const updatedShop = await prisma.shop.update({\n      where: { shopDomain },\n      data: { \n        uninstalledAt: new Date(),\n        // Keep the record for potential re-installation\n        // accessTokenEnc will be overwritten on re-install\n      }\n    });\n\n    console.log(\"Shop uninstalled successfully:\", { \n      shopDomain,\n      installedAt: updatedShop.installedAt,\n      uninstalledAt: updatedShop.uninstalledAt\n    });\n\n    // Respond quickly to Shopify\n    return json({ status: \"ok\" }, { status: 200 });\n\n  } catch (error) {\n    console.error(\"Error processing app uninstall webhook:\", error);\n    \n    // Still return 200 to prevent retries for malformed payloads\n    if (error instanceof SyntaxError) {\n      return json({ status: \"ok\" }, { status: 200 });\n    }\n    \n    // For database errors, return 500 so Shopify retries\n    return json({ error: \"Internal error\" }, { status: 500 });\n  }\n}", "import { createHmac } from \"node:crypto\";\nimport { buildWebhookUrl } from './tunnel.server.js';\nimport { validateShopAccess } from './admin-api.server.js';\n\nexport function verifyWebhookHmac(\n  body: string | Buffer, \n  hmacHeader: string,\n  secret: string\n): boolean {\n  const bodyString = typeof body === 'string' ? body : body.toString('utf8');\n  const calculatedHmac = createHmac('sha256', secret)\n    .update(bodyString, 'utf8')\n    .digest('base64');\n  \n  const providedHmac = hmacHeader.replace('sha256=', '');\n  \n  // Use timingSafeEqual to prevent timing attacks\n  return timingSafeEqual(\n    Buffer.from(calculatedHmac, 'base64'),\n    Buffer.from(providedHmac, 'base64')\n  );\n}\n\nfunction timingSafeEqual(a: Buffer, b: Buffer): boolean {\n  if (a.length !== b.length) {\n    return false;\n  }\n  \n  let result = 0;\n  for (let i = 0; i < a.length; i++) {\n    result |= a[i] ^ b[i];\n  }\n  \n  return result === 0;\n}\n\nexport interface WebhookRegistration {\n  topic: string;\n  address: string;\n  format: 'json';\n}\n\nexport async function registerWebhooks(\n  shop: string,\n  accessToken: string,\n  baseUrl?: string\n): Promise<void> {\n  // Validate shop access before registering webhooks\n  const isValidShop = await validateShopAccess(shop);\n  if (!isValidShop) {\n    console.error('Shop validation failed, skipping webhook registration:', shop);\n    return;\n  }\n\n  // Use tunnel-aware URL building if baseUrl not provided\n  const getWebhookAddress = (path: string) => {\n    if (baseUrl) {\n      return `${baseUrl}${path}`;\n    }\n    return buildWebhookUrl(path);\n  };\n\n  const webhooks: WebhookRegistration[] = [\n    {\n      topic: 'app/uninstalled',\n      address: getWebhookAddress('/webhooks/app_uninstalled'),\n      format: 'json'\n    },\n    {\n      topic: 'products/update',\n      address: getWebhookAddress('/webhooks/products_update'), \n      format: 'json'\n    }\n  ];\n\n  for (const webhook of webhooks) {\n    try {\n      const response = await fetch(`https://${shop}/admin/api/2024-01/webhooks.json`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Shopify-Access-Token': accessToken,\n        },\n        body: JSON.stringify({ webhook })\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        console.log(`Webhook registered: ${webhook.topic}`, result.webhook?.id);\n      } else {\n        const error = await response.text();\n        console.error(`Failed to register webhook ${webhook.topic}:`, error);\n      }\n    } catch (error) {\n      console.error(`Error registering webhook ${webhook.topic}:`, error);\n    }\n  }\n}\n\nexport async function unregisterWebhooks(\n  shop: string,\n  accessToken: string\n): Promise<void> {\n  try {\n    // Get all webhooks for this app\n    const response = await fetch(`https://${shop}/admin/api/2024-01/webhooks.json`, {\n      headers: {\n        'X-Shopify-Access-Token': accessToken,\n      }\n    });\n\n    if (response.ok) {\n      const data = await response.json();\n      const webhooks = data.webhooks || [];\n      \n      // Delete each webhook\n      for (const webhook of webhooks) {\n        await fetch(`https://${shop}/admin/api/2024-01/webhooks/${webhook.id}.json`, {\n          method: 'DELETE',\n          headers: {\n            'X-Shopify-Access-Token': accessToken,\n          }\n        });\n        console.log(`Webhook unregistered: ${webhook.topic} (${webhook.id})`);\n      }\n    }\n  } catch (error) {\n    console.error('Error unregistering webhooks:', error);\n  }\n}", "/**\n * Tunnel helper utilities for development\n * Handles tunnel detection and URL routing for webhook endpoints\n */\n\n/**\n * Check if tunnel is currently active (development mode)\n */\nexport function isTunnelActive(): boolean {\n  return process.env.TUNNEL_ACTIVE === 'true' && process.env.NODE_ENV === 'development';\n}\n\n/**\n * Get the base URL for webhook endpoints\n * Uses tunnel URL in development, falls back to APP_URL\n */\nexport function getWebhookBaseUrl(): string {\n  if (isTunnelActive() && process.env.WEBHOOK_BASE_URL) {\n    return process.env.WEBHOOK_BASE_URL;\n  }\n  \n  return process.env.APP_URL || 'http://localhost:3000';\n}\n\n/**\n * Get the public app URL\n * Uses tunnel URL in development, falls back to APP_URL\n */\nexport function getPublicAppUrl(): string {\n  if (isTunnelActive() && process.env.SHOPIFY_APP_URL) {\n    return process.env.SHOPIFY_APP_URL;\n  }\n  \n  return process.env.APP_URL || 'http://localhost:3000';\n}\n\n/**\n * Build webhook endpoint URL for a specific webhook type\n */\nexport function buildWebhookUrl(webhookPath: string): string {\n  const baseUrl = getWebhookBaseUrl();\n  const cleanPath = webhookPath.startsWith('/') ? webhookPath : `/${webhookPath}`;\n  \n  return `${baseUrl}${cleanPath}`;\n}\n\n/**\n * Get tunnel configuration info for debugging\n */\nexport function getTunnelInfo() {\n  return {\n    active: isTunnelActive(),\n    webhookBaseUrl: getWebhookBaseUrl(),\n    publicAppUrl: getPublicAppUrl(),\n    nodeEnv: process.env.NODE_ENV,\n    appUrl: process.env.APP_URL,\n    host: process.env.HOST\n  };\n}\n\n/**\n * Validate tunnel configuration\n * Returns array of validation errors, empty if valid\n */\nexport function validateTunnelConfig(): string[] {\n  const errors: string[] = [];\n  \n  if (isTunnelActive()) {\n    if (!process.env.WEBHOOK_BASE_URL) {\n      errors.push('WEBHOOK_BASE_URL is required when tunnel is active');\n    }\n    \n    if (!process.env.SHOPIFY_APP_URL) {\n      errors.push('SHOPIFY_APP_URL is required when tunnel is active');\n    }\n    \n    // Check if URLs are HTTPS (required for Shopify)\n    const webhookUrl = process.env.WEBHOOK_BASE_URL;\n    if (webhookUrl && !webhookUrl.startsWith('https://')) {\n      errors.push('WEBHOOK_BASE_URL must use HTTPS for Shopify compatibility');\n    }\n    \n    const appUrl = process.env.SHOPIFY_APP_URL;\n    if (appUrl && !appUrl.startsWith('https://')) {\n      errors.push('SHOPIFY_APP_URL must use HTTPS for Shopify compatibility');\n    }\n  }\n  \n  return errors;\n}", "/**\n * Shopify Admin API Client\n * \n * Provides GraphQL client for Admin API operations including:\n * - Shop validation and metadata\n * - Product queries and management  \n * - Webhook registration\n * - Rate limit handling\n */\n\nimport { GraphQLClient } from 'graphql-request';\nimport { getShopWithToken } from './shop.server.js';\n\n// Admin API version and endpoint\nconst ADMIN_API_VERSION = '2024-01';\n\n/**\n * Shop information from Admin API\n */\nexport interface ShopInfo {\n  id: string;\n  name: string;\n  domain: string;\n  email: string;\n  myshopifyDomain: string;\n  plan: {\n    displayName: string;\n    partnerDevelopment: boolean;\n  };\n  primaryLocale: string;\n  currencyCode: string;\n  weightUnit: string;\n  timezone: string;\n}\n\n/**\n * Product data from Admin API\n */\nexport interface AdminProduct {\n  id: string;\n  title: string;\n  handle: string;\n  status: 'ACTIVE' | 'ARCHIVED' | 'DRAFT';\n  productType: string;\n  vendor: string;\n  tags: string[];\n  createdAt: string;\n  updatedAt: string;\n  variants: {\n    edges: Array<{\n      node: {\n        id: string;\n        title: string;\n        sku: string;\n        price: string;\n        compareAtPrice: string | null;\n        inventoryQuantity: number;\n        availableForSale: boolean;\n      };\n    }>;\n  };\n  images: {\n    edges: Array<{\n      node: {\n        id: string;\n        url: string;\n        altText: string | null;\n        width: number;\n        height: number;\n      };\n    }>;\n  };\n}\n\n/**\n * Rate limit information from Admin API\n */\nexport interface RateLimitInfo {\n  requestedQueryCost: number;\n  actualQueryCost: number;\n  throttleStatus: {\n    maximumAvailable: number;\n    currentlyAvailable: number;\n    restoreRate: number;\n  };\n}\n\n/**\n * GraphQL queries for Admin API\n */\nconst SHOP_QUERY = `\n  query getShop {\n    shop {\n      id\n      name\n      domain\n      email\n      myshopifyDomain\n      plan {\n        displayName\n        partnerDevelopment\n      }\n      primaryLocale\n      currencyCode\n      weightUnit\n      timezone\n    }\n  }\n`;\n\nconst PRODUCTS_QUERY = `\n  query getProducts($first: Int!, $after: String) {\n    products(first: $first, after: $after) {\n      edges {\n        node {\n          id\n          title\n          handle\n          status\n          productType\n          vendor\n          tags\n          createdAt\n          updatedAt\n          variants(first: 10) {\n            edges {\n              node {\n                id\n                title\n                sku\n                price\n                compareAtPrice\n                inventoryQuantity\n                availableForSale\n              }\n            }\n          }\n          images(first: 5) {\n            edges {\n              node {\n                id\n                url\n                altText\n                width\n                height\n              }\n            }\n          }\n        }\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        endCursor\n        startCursor\n      }\n    }\n  }\n`;\n\nconst PRODUCT_BY_ID_QUERY = `\n  query getProduct($id: ID!) {\n    product(id: $id) {\n      id\n      title\n      handle\n      status\n      productType\n      vendor\n      tags\n      createdAt\n      updatedAt\n      variants(first: 10) {\n        edges {\n          node {\n            id\n            title\n            sku\n            price\n            compareAtPrice\n            inventoryQuantity\n            availableForSale\n          }\n        }\n      }\n      images(first: 5) {\n        edges {\n          node {\n            id\n            url\n            altText\n            width\n            height\n          }\n        }\n      }\n    }\n  }\n`;\n\n/**\n * Create GraphQL client for Admin API\n */\nfunction createAdminClient(shopDomain: string, accessToken: string): GraphQLClient {\n  const endpoint = `https://${shopDomain}/admin/api/${ADMIN_API_VERSION}/graphql.json`;\n  \n  return new GraphQLClient(endpoint, {\n    headers: {\n      'X-Shopify-Access-Token': accessToken,\n      'Content-Type': 'application/json',\n      'Accept': 'application/json'\n    },\n    // Enable rate limit handling\n    errorPolicy: 'all'\n  });\n}\n\n/**\n * Get shop information via Admin API\n */\nexport async function getShopInfo(shopDomain: string): Promise<ShopInfo | null> {\n  try {\n    const shopData = await getShopWithToken(shopDomain);\n    if (!shopData) {\n      console.error('Shop not found or inactive:', shopDomain);\n      return null;\n    }\n\n    const client = createAdminClient(shopDomain, shopData.accessToken);\n    \n    const response = await client.request<{ shop: ShopInfo }>(SHOP_QUERY);\n    \n    if (!response.shop) {\n      console.error('No shop data returned from Admin API');\n      return null;\n    }\n\n    return response.shop;\n\n  } catch (error) {\n    console.error('Failed to get shop info:', error);\n    \n    if (error instanceof Error && error.message.includes('401')) {\n      console.error('Admin API authentication failed for shop:', shopDomain);\n    }\n    \n    return null;\n  }\n}\n\n/**\n * Validate shop access and permissions\n */\nexport async function validateShopAccess(shopDomain: string): Promise<boolean> {\n  try {\n    const shopInfo = await getShopInfo(shopDomain);\n    \n    if (!shopInfo) {\n      return false;\n    }\n\n    // Validate domain match\n    if (shopInfo.myshopifyDomain !== shopDomain) {\n      console.error('Shop domain mismatch:', {\n        expected: shopDomain,\n        actual: shopInfo.myshopifyDomain\n      });\n      return false;\n    }\n\n    console.log('Shop validation successful:', {\n      name: shopInfo.name,\n      domain: shopInfo.domain,\n      plan: shopInfo.plan.displayName\n    });\n\n    return true;\n\n  } catch (error) {\n    console.error('Shop validation failed:', error);\n    return false;\n  }\n}\n\n/**\n * Get products from Admin API with pagination\n */\nexport async function getAdminProducts(\n  shopDomain: string,\n  first: number = 50,\n  after?: string\n): Promise<{ products: AdminProduct[], hasNextPage: boolean, endCursor?: string } | null> {\n  try {\n    const shopData = await getShopWithToken(shopDomain);\n    if (!shopData) {\n      throw new Error('Shop not found or inactive');\n    }\n\n    const client = createAdminClient(shopDomain, shopData.accessToken);\n    \n    const variables = { first, ...(after && { after }) };\n    const response = await client.request<{\n      products: {\n        edges: Array<{ node: AdminProduct }>;\n        pageInfo: {\n          hasNextPage: boolean;\n          endCursor: string;\n        };\n      };\n    }>(PRODUCTS_QUERY, variables);\n\n    const products = response.products.edges.map(edge => edge.node);\n    \n    return {\n      products,\n      hasNextPage: response.products.pageInfo.hasNextPage,\n      endCursor: response.products.pageInfo.endCursor\n    };\n\n  } catch (error) {\n    console.error('Failed to get admin products:', error);\n    \n    if (error instanceof Error) {\n      // Handle specific Shopify API errors\n      if (error.message.includes('401')) {\n        throw new Error('Admin API authentication failed');\n      }\n      \n      if (error.message.includes('402')) {\n        throw new Error('Shop subscription required');\n      }\n      \n      if (error.message.includes('429')) {\n        throw new Error('Admin API rate limit exceeded');\n      }\n    }\n    \n    return null;\n  }\n}\n\n/**\n * Get single product by ID from Admin API\n */\nexport async function getAdminProduct(\n  shopDomain: string,\n  productId: string\n): Promise<AdminProduct | null> {\n  try {\n    const shopData = await getShopWithToken(shopDomain);\n    if (!shopData) {\n      throw new Error('Shop not found or inactive');\n    }\n\n    const client = createAdminClient(shopDomain, shopData.accessToken);\n    \n    const response = await client.request<{ product: AdminProduct | null }>(\n      PRODUCT_BY_ID_QUERY,\n      { id: productId }\n    );\n\n    return response.product;\n\n  } catch (error) {\n    console.error('Failed to get admin product:', error);\n    return null;\n  }\n}\n\n/**\n * Extract rate limit information from GraphQL response\n */\nexport function extractRateLimitInfo(error: any): RateLimitInfo | null {\n  try {\n    if (error?.response?.extensions?.cost) {\n      return {\n        requestedQueryCost: error.response.extensions.cost.requestedQueryCost,\n        actualQueryCost: error.response.extensions.cost.actualQueryCost,\n        throttleStatus: error.response.extensions.cost.throttleStatus\n      };\n    }\n    return null;\n  } catch {\n    return null;\n  }\n}\n\n/**\n * Handle Admin API rate limits with exponential backoff\n */\nexport async function withRateLimit<T>(\n  operation: () => Promise<T>,\n  maxRetries: number = 3\n): Promise<T> {\n  let lastError: Error;\n  \n  for (let attempt = 0; attempt <= maxRetries; attempt++) {\n    try {\n      return await operation();\n    } catch (error) {\n      lastError = error as Error;\n      \n      // Check if it's a rate limit error\n      if (!error || !error.toString().includes('429')) {\n        throw error;\n      }\n      \n      if (attempt === maxRetries) {\n        throw new Error(`Max retries reached: ${lastError.message}`);\n      }\n      \n      // Extract rate limit info for better backoff calculation\n      const rateLimitInfo = extractRateLimitInfo(error);\n      \n      // Calculate backoff delay (exponential with jitter)\n      const baseDelay = Math.pow(2, attempt) * 1000; // 1s, 2s, 4s\n      const jitter = Math.random() * 1000; // 0-1s random jitter\n      const delay = baseDelay + jitter;\n      \n      console.log(`Rate limit hit, retrying in ${Math.round(delay)}ms (attempt ${attempt + 1}/${maxRetries + 1})`);\n      \n      if (rateLimitInfo) {\n        console.log('Rate limit info:', {\n          available: rateLimitInfo.throttleStatus.currentlyAvailable,\n          maximum: rateLimitInfo.throttleStatus.maximumAvailable,\n          restoreRate: rateLimitInfo.throttleStatus.restoreRate\n        });\n      }\n      \n      await new Promise(resolve => setTimeout(resolve, delay));\n    }\n  }\n  \n  throw lastError!;\n}\n\n/**\n * Test Admin API connection and permissions\n */\nexport async function testAdminConnection(shopDomain: string): Promise<{\n  success: boolean;\n  shopInfo?: ShopInfo;\n  error?: string;\n}> {\n  try {\n    const shopInfo = await getShopInfo(shopDomain);\n    \n    if (!shopInfo) {\n      return {\n        success: false,\n        error: 'Failed to retrieve shop information'\n      };\n    }\n\n    return {\n      success: true,\n      shopInfo\n    };\n\n  } catch (error) {\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Unknown error'\n    };\n  }\n}", "import { PrismaClient } from '@prisma/client';\n\ndeclare global {\n  var __db__: PrismaClient;\n}\n\nlet prisma: PrismaClient;\n\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient();\n} else {\n  if (!global.__db__) {\n    global.__db__ = new PrismaClient();\n  }\n  prisma = global.__db__;\n  prisma.$connect();\n}\n\nexport { prisma };", "import { randomBytes, createCipheriv, createDecipheriv, pbkdf2Sync, createHmac } from \"node:crypto\";\n\nconst ALGORITHM = 'aes-256-cbc';\nconst IV_LENGTH = 16; // 128 bit\nconst KEY_LENGTH = 32; // 256 bit\nconst HMAC_LENGTH = 32; // 256 bit\n\n/**\n * Get or derive encryption key from environment\n */\nfunction getEncryptionKey(): Buffer {\n  const envKey = process.env.ENCRYPTION_KEY;\n  \n  if (envKey) {\n    // Production: Use provided key directly or derive from it\n    if (envKey.length === 64) {\n      // Assume it's already a hex-encoded 256-bit key\n      return Buffer.from(envKey, 'hex');\n    } else {\n      // Derive key from passphrase using PBKDF2\n      const salt = Buffer.from('turnapp-static-salt-v1', 'utf8'); // Static salt for deterministic key\n      return pbkdf2Sync(envKey, salt, 100000, KEY_LENGTH, 'sha256');\n    }\n  }\n  \n  // Development: Generate deterministic key from NODE_ENV and app name\n  const fallbackSeed = `${process.env.NODE_ENV || 'development'}-turnapp-dev-key-v1`;\n  const salt = Buffer.from('dev-salt-turnapp', 'utf8');\n  return pbkdf2Sync(fallbackSeed, salt, 10000, KEY_LENGTH, 'sha256');\n}\n\n/**\n * Encrypt sensitive data (like access tokens) for storage\n */\nexport function encryptToken(plaintext: string): string {\n  if (!plaintext || plaintext.length === 0) {\n    throw new Error('Cannot encrypt empty token');\n  }\n  \n  try {\n    const key = getEncryptionKey();\n    const iv = randomBytes(IV_LENGTH);\n    \n    const cipher = createCipheriv(ALGORITHM, key, iv);\n    \n    let encrypted = cipher.update(plaintext, 'utf8', 'hex');\n    encrypted += cipher.final('hex');\n    \n    // Create HMAC for integrity\n    const hmac = createHmac('sha256', key);\n    hmac.update(iv);\n    hmac.update(Buffer.from(encrypted, 'hex'));\n    const authTag = hmac.digest();\n    \n    // Format: iv(32hex) + encrypted(variable) + hmac(64hex)\n    return iv.toString('hex') + encrypted + authTag.toString('hex');\n    \n  } catch (error) {\n    console.error('Encryption failed:', error);\n    throw new Error('Failed to encrypt token');\n  }\n}\n\n/**\n * Decrypt sensitive data from storage\n */\nexport function decryptToken(ciphertext: string): string {\n  try {\n    // Parse components: iv(32hex) + encrypted + hmac(64hex)\n    if (ciphertext.length < IV_LENGTH * 2 + HMAC_LENGTH * 2) {\n      throw new Error('Invalid ciphertext format');\n    }\n    \n    const ivHex = ciphertext.substring(0, IV_LENGTH * 2);\n    const hmacHex = ciphertext.substring(ciphertext.length - HMAC_LENGTH * 2);\n    const encryptedHex = ciphertext.substring(IV_LENGTH * 2, ciphertext.length - HMAC_LENGTH * 2);\n    \n    const iv = Buffer.from(ivHex, 'hex');\n    const providedHmac = Buffer.from(hmacHex, 'hex');\n    const encrypted = Buffer.from(encryptedHex, 'hex');\n    \n    const key = getEncryptionKey();\n    \n    // Verify HMAC\n    const hmac = createHmac('sha256', key);\n    hmac.update(iv);\n    hmac.update(encrypted);\n    const calculatedHmac = hmac.digest();\n    \n    if (!calculatedHmac.equals(providedHmac)) {\n      throw new Error('Token integrity check failed');\n    }\n    \n    const decipher = createDecipheriv(ALGORITHM, key, iv);\n    \n    let decrypted = decipher.update(encryptedHex, 'hex', 'utf8');\n    decrypted += decipher.final('utf8');\n    \n    return decrypted;\n    \n  } catch (error) {\n    console.error('Decryption failed:', error);\n    throw new Error('Failed to decrypt token');\n  }\n}\n\n/**\n * Test encryption/decryption roundtrip\n */\nexport function testCrypto(): boolean {\n  try {\n    const testData = 'test-access-token-12345';\n    const encrypted = encryptToken(testData);\n    const decrypted = decryptToken(encrypted);\n    \n    return testData === decrypted;\n  } catch (error) {\n    console.error('Crypto test failed:', error);\n    return false;\n  }\n}\n\n/**\n * Generate a new encryption key (for production setup)\n */\nexport function generateEncryptionKey(): string {\n  return randomBytes(KEY_LENGTH).toString('hex');\n}", "import { prisma } from \"./prisma.server.js\";\nimport { decryptToken } from \"./crypto.server.js\";\n\nexport interface ShopWithToken {\n  shopDomain: string;\n  accessToken: string;\n  installedAt: Date;\n  uninstalledAt: Date | null;\n  settings: any;\n}\n\n/**\n * Get shop with decrypted access token for API calls\n */\nexport async function getShopWithToken(shopDomain: string): Promise<ShopWithToken | null> {\n  try {\n    const shop = await prisma.shop.findUnique({\n      where: { shopDomain }\n    });\n\n    if (!shop || shop.uninstalledAt) {\n      return null;\n    }\n\n    // Decrypt the access token\n    const accessToken = decryptToken(shop.accessTokenEnc);\n\n    return {\n      shopDomain: shop.shopDomain,\n      accessToken,\n      installedAt: shop.installedAt,\n      uninstalledAt: shop.uninstalledAt,\n      settings: shop.settings ? JSON.parse(shop.settings) : {}\n    };\n  } catch (error) {\n    console.error('Failed to get shop with token:', error);\n    return null;\n  }\n}\n\n/**\n * Check if shop is installed and active\n */\nexport async function isShopActive(shopDomain: string): Promise<boolean> {\n  try {\n    const shop = await prisma.shop.findUnique({\n      where: { shopDomain },\n      select: { uninstalledAt: true }\n    });\n\n    return shop ? !shop.uninstalledAt : false;\n  } catch (error) {\n    console.error('Failed to check shop status:', error);\n    return false;\n  }\n}\n\n/**\n * Get shop settings without decrypting token\n */\nexport async function getShopSettings(shopDomain: string): Promise<any | null> {\n  try {\n    const shop = await prisma.shop.findUnique({\n      where: { shopDomain },\n      select: { settings: true, uninstalledAt: true }\n    });\n\n    if (!shop || shop.uninstalledAt) {\n      return null;\n    }\n\n    return shop.settings ? JSON.parse(shop.settings) : {};\n  } catch (error) {\n    console.error('Failed to get shop settings:', error);\n    return null;\n  }\n}", "import { json, type ActionFunctionArgs } from \"@remix-run/node\";\nimport { verifyWebhookHmac } from \"~/lib/webhooks.server\";\n\nexport async function action({ request }: ActionFunctionArgs) {\n  if (request.method !== \"POST\") {\n    return json({ error: \"Method not allowed\" }, { status: 405 });\n  }\n\n  const hmacHeader = request.headers.get(\"X-Shopify-Hmac-Sha256\");\n  const shopDomain = request.headers.get(\"X-Shopify-Shop-Domain\");\n  \n  if (!hmacHeader || !shopDomain) {\n    console.error(\"Missing required webhook headers\");\n    return json({ error: \"Missing headers\" }, { status: 400 });\n  }\n\n  // Get raw body for HMAC verification\n  const body = await request.text();\n  \n  // Verify HMAC signature\n  const apiSecret = process.env.SHOPIFY_API_SECRET;\n  if (!apiSecret) {\n    console.error(\"Missing Shopify API secret\");\n    return json({ error: \"Server configuration error\" }, { status: 500 });\n  }\n\n  if (!verifyWebhookHmac(body, hmacHeader, apiSecret)) {\n    console.error(\"Webhook HMAC verification failed for shop:\", shopDomain);\n    return json({ error: \"Invalid signature\" }, { status: 403 });\n  }\n\n  try {\n    // Parse webhook payload\n    const payload = JSON.parse(body);\n    console.log(\"Product updated webhook received:\", { \n      shop: shopDomain,\n      productId: payload.id,\n      productTitle: payload.title,\n      updatedAt: payload.updated_at,\n      timestamp: new Date().toISOString()\n    });\n\n    // TODO: Implement cache invalidation\n    // For MVP, we just log the event\n    // In future iterations:\n    // - Invalidate product cache entries\n    // - Trigger mobile app notifications\n    // - Update search indices\n\n    console.log(\"Product cache invalidated for shop:\", shopDomain);\n\n    // Respond quickly to Shopify\n    return json({ status: \"ok\" }, { status: 200 });\n\n  } catch (error) {\n    console.error(\"Error processing products update webhook:\", error);\n    \n    // Still return 200 to prevent retries for malformed payloads\n    if (error instanceof SyntaxError) {\n      return json({ status: \"ok\" }, { status: 200 });\n    }\n    \n    // For future cache errors, return 500 so Shopify retries\n    return json({ error: \"Internal error\" }, { status: 500 });\n  }\n}", "import type { LoaderFunctionArgs } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { requireSession } from '~/lib/middleware.server';\nimport { getAdminProducts, getAdminProduct, withRateLimit } from '~/lib/admin-api.server';\nimport { createErrorResponse, AdminProductsResponseSchema } from '~/lib/validation.server';\n\n/**\n * GET /api/admin/products - Get products from Admin API\n * \n * Query parameters:\n * - first: number of products to fetch (max 50, default 20)\n * - after: cursor for pagination\n * - id: specific product ID to fetch (if provided, returns single product)\n */\nexport async function loader({ request }: LoaderFunctionArgs) {\n  try {\n    // Require authenticated session\n    const context = await requireSession(request);\n\n    const url = new URL(request.url);\n    \n    // Parse query parameters\n    const first = Math.min(parseInt(url.searchParams.get('first') || '20'), 50);\n    const after = url.searchParams.get('after') || undefined;\n    const productId = url.searchParams.get('id');\n\n    // Validate parameters\n    if (first < 1) {\n      return json(createErrorResponse(\n        'Invalid \"first\" parameter. Must be between 1 and 50.',\n        'INVALID_PARAMETER'\n      ), { status: 400 });\n    }\n\n    if (productId) {\n      // Fetch single product by ID\n      const product = await withRateLimit(async () => {\n        return await getAdminProduct(context.shop, productId);\n      });\n\n      if (!product) {\n        return json(createErrorResponse(\n          'Product not found',\n          'PRODUCT_NOT_FOUND'\n        ), { status: 404 });\n      }\n\n      return json(product, {\n        headers: {\n          'Cache-Control': 'private, max-age=300', // 5 minutes cache\n          'Content-Type': 'application/json'\n        }\n      });\n    } else {\n      // Fetch products with pagination\n      const result = await withRateLimit(async () => {\n        return await getAdminProducts(context.shop, first, after);\n      });\n\n      if (!result) {\n        return json(createErrorResponse(\n          'Failed to fetch products',\n          'PRODUCTS_FETCH_ERROR'\n        ), { status: 500 });\n      }\n\n      const response = {\n        products: result.products,\n        hasNextPage: result.hasNextPage,\n        endCursor: result.endCursor,\n        shop: context.shop,\n        total: result.products.length\n      };\n\n      // Validate response schema\n      const validatedResponse = AdminProductsResponseSchema.parse(response);\n\n      return json(validatedResponse, {\n        headers: {\n          'Cache-Control': 'private, max-age=300', // 5 minutes cache\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n\n  } catch (error) {\n    console.error('Admin products API error:', error);\n    \n    if (error instanceof Response) {\n      throw error; // Re-throw middleware responses\n    }\n\n    if (error instanceof Error) {\n      // Handle specific Admin API errors\n      if (error.message.includes('Admin API authentication failed')) {\n        return json(createErrorResponse(\n          'Shop authentication failed',\n          'ADMIN_AUTH_ERROR'\n        ), { status: 401 });\n      }\n\n      if (error.message.includes('Shop subscription required')) {\n        return json(createErrorResponse(\n          'Shop subscription required for Admin API access',\n          'SUBSCRIPTION_ERROR'\n        ), { status: 402 });\n      }\n\n      if (error.message.includes('Admin API rate limit exceeded')) {\n        return json(createErrorResponse(\n          'Admin API rate limit exceeded',\n          'ADMIN_RATE_LIMIT'\n        ), { status: 429 });\n      }\n\n      if (error.message.includes('Max retries reached')) {\n        return json(createErrorResponse(\n          'Admin API temporarily unavailable',\n          'SERVICE_UNAVAILABLE'\n        ), { status: 503 });\n      }\n    }\n\n    return json(createErrorResponse(\n      'Failed to fetch products',\n      'INTERNAL_ERROR'\n    ), { status: 500 });\n  }\n}", "import { createHmac } from \"node:crypto\";\n\nexport interface ShopifySessionToken {\n  iss: string;  // Shop domain\n  dest: string; // Shop domain  \n  aud: string;  // API key\n  sub: string;  // User ID\n  exp: number;  // Expiration\n  nbf: number;  // Not before\n  iat: number;  // Issued at\n  jti: string;  // JWT ID\n  sid: string;  // Session ID\n}\n\n/**\n * Simple JWT decoder (without full verification for MVP)\n */\nfunction decodeJWT(token: string): any {\n  try {\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n      throw new Error('Invalid JWT format');\n    }\n\n    // Decode payload (second part)\n    const payload = parts[1];\n    const decoded = Buffer.from(payload, 'base64url').toString('utf8');\n    return JSON.parse(decoded);\n  } catch (error) {\n    console.error('JWT decode failed:', error);\n    return null;\n  }\n}\n\n/**\n * Verify Shopify session token signature\n */\nfunction verifyJWTSignature(token: string, secret: string): boolean {\n  try {\n    const parts = token.split('.');\n    if (parts.length !== 3) return false;\n\n    const [header, payload, signature] = parts;\n    \n    // Recreate signature\n    const data = `${header}.${payload}`;\n    const expectedSignature = createHmac('sha256', secret)\n      .update(data)\n      .digest('base64url');\n\n    return signature === expectedSignature;\n  } catch (error) {\n    console.error('JWT signature verification failed:', error);\n    return false;\n  }\n}\n\n/**\n * Verify and decode Shopify session token from embedded admin\n */\nexport function verifySessionToken(token: string): ShopifySessionToken | null {\n  try {\n    const apiSecret = process.env.SHOPIFY_API_SECRET;\n    if (!apiSecret) {\n      console.error(\"Missing SHOPIFY_API_SECRET\");\n      return null;\n    }\n\n    // Verify signature\n    if (!verifyJWTSignature(token, apiSecret)) {\n      console.error(\"Session token signature verification failed\");\n      return null;\n    }\n\n    // Decode payload\n    const decoded = decodeJWT(token);\n    if (!decoded) {\n      return null;\n    }\n\n    // Validate required fields\n    if (!decoded.iss || !decoded.dest || !decoded.aud) {\n      console.error(\"Invalid session token: missing required fields\");\n      return null;\n    }\n\n    // Ensure shop domains match\n    if (decoded.iss !== decoded.dest) {\n      console.error(\"Session token: iss and dest don't match\");\n      return null;\n    }\n\n    // Check expiration\n    if (decoded.exp && decoded.exp < Math.floor(Date.now() / 1000)) {\n      console.error(\"Session token expired\");\n      return null;\n    }\n\n    return decoded as ShopifySessionToken;\n\n  } catch (error) {\n    console.error(\"Session token verification failed:\", error);\n    return null;\n  }\n}\n\n/**\n * Extract shop domain from session token\n */\nexport function getShopFromSession(token: string): string | null {\n  const session = verifySessionToken(token);\n  return session ? session.iss : null;\n}\n\n/**\n * Middleware to verify session token and add shop context\n */\nexport function createSessionMiddleware() {\n  return async (request: Request): Promise<{ shop: string; session: ShopifySessionToken } | null> => {\n    const sessionTokenHeader = request.headers.get(\"X-Shopify-Session-Token\");\n    \n    if (!sessionTokenHeader) {\n      return null;\n    }\n\n    const session = verifySessionToken(sessionTokenHeader);\n    if (!session) {\n      return null;\n    }\n\n    return {\n      shop: session.iss,\n      session\n    };\n  };\n}\n\n/**\n * Extract session context from request - for use in loaders/actions\n */\nexport async function requireValidSession(request: Request): Promise<{ shop: string; session: ShopifySessionToken }> {\n  const middleware = createSessionMiddleware();\n  const context = await middleware(request);\n  \n  if (!context) {\n    throw new Response(\"Unauthorized - Invalid or missing session token\", { \n      status: 401,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  return context;\n}\n\n/**\n * Optional session context - returns null if no valid session\n */\nexport async function getOptionalSession(request: Request): Promise<{ shop: string; session: ShopifySessionToken } | null> {\n  const middleware = createSessionMiddleware();\n  return await middleware(request);\n}", "/**\n * Monitoring and Health Check Utilities\n * \n * Provides health checks, request logging, and error tracking\n * infrastructure according to architecture docs\n */\n\nimport { prisma } from './prisma.server.js';\nimport { testCrypto } from './crypto.server.js';\n\n/**\n * Health check status\n */\nexport type HealthStatus = 'healthy' | 'unhealthy';\n\n/**\n * Database health check result\n */\nexport interface DatabaseHealth {\n  connected: boolean;\n  shops: number;\n  latency?: number;\n}\n\n/**\n * Crypto health check result  \n */\nexport interface CryptoHealth {\n  working: boolean;\n}\n\n/**\n * Application health result\n */\nexport interface AppHealth {\n  status: HealthStatus;\n  timestamp: string;\n  database?: DatabaseHealth;\n  crypto?: CryptoHealth;\n  version?: string;\n  error?: string;\n}\n\n/**\n * Request log entry\n */\nexport interface RequestLog {\n  requestId: string;\n  method: string;\n  url: string;\n  userAgent?: string;\n  ip?: string;\n  shopDomain?: string;\n  timestamp: string;\n  duration?: number;\n  statusCode?: number;\n  error?: string;\n}\n\n/**\n * Generate unique request ID\n */\nexport function generateRequestId(): string {\n  return `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n}\n\n/**\n * Check database health\n */\nexport async function checkDatabaseHealth(): Promise<DatabaseHealth> {\n  try {\n    const startTime = Date.now();\n    \n    // Test basic database connectivity\n    const shopCount = await prisma.shop.count();\n    \n    const latency = Date.now() - startTime;\n    \n    return {\n      connected: true,\n      shops: shopCount,\n      latency\n    };\n  } catch (error) {\n    console.error('Database health check failed:', error);\n    return {\n      connected: false,\n      shops: 0\n    };\n  }\n}\n\n/**\n * Check crypto system health\n */\nexport async function checkCryptoHealth(): Promise<CryptoHealth> {\n  try {\n    const isWorking = await testCrypto();\n    return {\n      working: isWorking\n    };\n  } catch (error) {\n    console.error('Crypto health check failed:', error);\n    return {\n      working: false\n    };\n  }\n}\n\n/**\n * Perform comprehensive health check\n */\nexport async function performHealthCheck(includeDetails: boolean = false): Promise<AppHealth> {\n  try {\n    const timestamp = new Date().toISOString();\n    \n    if (!includeDetails) {\n      // Basic health check - just return healthy status\n      return {\n        status: 'healthy',\n        timestamp\n      };\n    }\n\n    // Detailed health check\n    const [databaseHealth, cryptoHealth] = await Promise.allSettled([\n      checkDatabaseHealth(),\n      checkCryptoHealth()\n    ]);\n\n    const dbHealth = databaseHealth.status === 'fulfilled' ? databaseHealth.value : { connected: false, shops: 0 };\n    const cryptoHealthResult = cryptoHealth.status === 'fulfilled' ? cryptoHealth.value : { working: false };\n\n    // Determine overall status\n    const isHealthy = dbHealth.connected && cryptoHealthResult.working;\n    \n    const health: AppHealth = {\n      status: isHealthy ? 'healthy' : 'unhealthy',\n      timestamp,\n      database: dbHealth,\n      crypto: cryptoHealthResult,\n      version: process.env.npm_package_version || '1.0.0'\n    };\n\n    if (!isHealthy) {\n      const issues: string[] = [];\n      if (!dbHealth.connected) issues.push('database connection failed');\n      if (!cryptoHealthResult.working) issues.push('crypto system failed');\n      \n      health.error = `Health check failed: ${issues.join(', ')}`;\n    }\n\n    return health;\n\n  } catch (error) {\n    console.error('Health check failed:', error);\n    \n    return {\n      status: 'unhealthy',\n      timestamp: new Date().toISOString(),\n      error: error instanceof Error ? error.message : 'Unknown health check error'\n    };\n  }\n}\n\n/**\n * Check if application is ready to serve traffic\n */\nexport async function checkReadiness(): Promise<AppHealth> {\n  try {\n    // Readiness requires database and crypto to be working\n    const [databaseHealth, cryptoHealth] = await Promise.all([\n      checkDatabaseHealth(),\n      checkCryptoHealth()\n    ]);\n\n    const isReady = databaseHealth.connected && cryptoHealth.working;\n    \n    return {\n      status: isReady ? 'healthy' : 'unhealthy',\n      timestamp: new Date().toISOString(),\n      database: databaseHealth,\n      crypto: cryptoHealth,\n      error: isReady ? undefined : 'Application not ready'\n    };\n\n  } catch (error) {\n    console.error('Readiness check failed:', error);\n    \n    return {\n      status: 'unhealthy',\n      timestamp: new Date().toISOString(),\n      error: error instanceof Error ? error.message : 'Readiness check failed'\n    };\n  }\n}\n\n/**\n * Log structured request information\n */\nexport function logRequest(\n  request: Request, \n  context?: { shop?: string },\n  options?: { duration?: number; statusCode?: number; error?: string }\n): void {\n  try {\n    const requestId = request.headers.get('x-request-id') || generateRequestId();\n    const url = new URL(request.url);\n    \n    const logEntry: RequestLog = {\n      requestId,\n      method: request.method,\n      url: url.pathname + url.search,\n      userAgent: request.headers.get('user-agent') || undefined,\n      ip: request.headers.get('x-forwarded-for') || request.headers.get('x-real-ip') || undefined,\n      shopDomain: context?.shop,\n      timestamp: new Date().toISOString(),\n      duration: options?.duration,\n      statusCode: options?.statusCode,\n      error: options?.error\n    };\n\n    // Log as JSON for structured logging\n    console.log(JSON.stringify(logEntry, null, 0));\n\n  } catch (error) {\n    console.error('Failed to log request:', error);\n  }\n}\n\n/**\n * Enhanced request logging for middleware integration\n */\nexport function logRequestWithContext(\n  request: Request,\n  context?: { shop?: string; session?: any },\n  options?: { duration?: number; statusCode?: number; error?: string }\n): void {\n  logRequest(request, context, options);\n}\n\n/**\n * Create request logging middleware\n */\nexport function createRequestLogger() {\n  return (request: Request, context?: { shop?: string }) => {\n    const startTime = Date.now();\n    \n    // Log request start\n    logRequest(request, context);\n    \n    // Return function to log request completion\n    return (statusCode: number, error?: string) => {\n      const duration = Date.now() - startTime;\n      logRequest(request, context, { duration, statusCode, error });\n    };\n  };\n}\n\n/**\n * Get application metrics\n */\nexport function getApplicationMetrics() {\n  return {\n    uptime: process.uptime(),\n    memory: process.memoryUsage(),\n    nodeVersion: process.version,\n    platform: process.platform,\n    arch: process.arch,\n    pid: process.pid\n  };\n}\n\n/**\n * Check if environment is production\n */\nexport function isProduction(): boolean {\n  return process.env.NODE_ENV === 'production';\n}\n\n/**\n * Check if monitoring is enabled\n */\nexport function isMonitoringEnabled(): boolean {\n  return process.env.MONITORING_ENABLED !== 'false';\n}", "import { json } from '@remix-run/node';\nimport { requireValidSession, getOptionalSession } from './session.server.js';\nimport { prisma } from './prisma.server.js';\nimport { logRequestWithContext, generateRequestId } from './monitoring.server.js';\n\nexport interface RequestContext {\n  shop: string;\n  session: any;\n  shopRecord?: any;\n}\n\n/**\n * Middleware to enforce session token validation\n * Throws 401 if no valid session token\n */\nexport async function requireSession(request: Request): Promise<RequestContext> {\n  try {\n    const sessionContext = await requireValidSession(request);\n    \n    // Additional validation: check if shop exists in database\n    const shopRecord = await prisma.shop.findUnique({\n      where: { shopDomain: sessionContext.shop }\n    });\n\n    if (!shopRecord) {\n      console.error(`Shop not found in database: ${sessionContext.shop}`);\n      throw new Response(\n        JSON.stringify({ \n          error: \"Shop not registered\", \n          code: \"SHOP_NOT_FOUND\" \n        }), \n        { \n          status: 404,\n          headers: { 'Content-Type': 'application/json' }\n        }\n      );\n    }\n\n    if (shopRecord.uninstalledAt) {\n      console.error(`Shop uninstalled: ${sessionContext.shop}`);\n      throw new Response(\n        JSON.stringify({ \n          error: \"Shop access revoked\", \n          code: \"SHOP_UNINSTALLED\" \n        }), \n        { \n          status: 403,\n          headers: { 'Content-Type': 'application/json' }\n        }\n      );\n    }\n\n    return {\n      shop: sessionContext.shop,\n      session: sessionContext.session,\n      shopRecord\n    };\n\n  } catch (error) {\n    // Re-throw Response objects (they contain proper status codes)\n    if (error instanceof Response) {\n      throw error;\n    }\n\n    console.error('Session middleware error:', error);\n    throw new Response(\n      JSON.stringify({ \n        error: \"Authentication failed\", \n        code: \"AUTH_ERROR\" \n      }), \n      { \n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      }\n    );\n  }\n}\n\n/**\n * Middleware for optional session validation\n * Returns context or null if no valid session\n */\nexport async function optionalSession(request: Request): Promise<RequestContext | null> {\n  try {\n    const sessionContext = await getOptionalSession(request);\n    \n    if (!sessionContext) {\n      return null;\n    }\n\n    // Additional validation: check if shop exists in database\n    const shopRecord = await prisma.shop.findUnique({\n      where: { shopDomain: sessionContext.shop }\n    });\n\n    if (!shopRecord || shopRecord.uninstalledAt) {\n      return null;\n    }\n\n    return {\n      shop: sessionContext.shop,\n      session: sessionContext.session,\n      shopRecord\n    };\n\n  } catch (error) {\n    console.error('Optional session middleware error:', error);\n    return null;\n  }\n}\n\n/**\n * Fallback middleware that accepts either session token or shop parameter\n * For APIs that need to support both embedded admin and mobile/external access\n */\nexport async function flexibleAuth(request: Request): Promise<RequestContext> {\n  try {\n    // Try session token first\n    const sessionContext = await getOptionalSession(request);\n    \n    if (sessionContext) {\n      // Validate shop exists\n      const shopRecord = await prisma.shop.findUnique({\n        where: { shopDomain: sessionContext.shop }\n      });\n\n      if (!shopRecord || shopRecord.uninstalledAt) {\n        throw new Response(\n          JSON.stringify({ \n            error: \"Shop not found or uninstalled\", \n            code: \"SHOP_INVALID\" \n          }), \n          { \n            status: 404,\n            headers: { 'Content-Type': 'application/json' }\n          }\n        );\n      }\n\n      return {\n        shop: sessionContext.shop,\n        session: sessionContext.session,\n        shopRecord\n      };\n    }\n\n    // Fallback to shop parameter (for mobile/API access)\n    const url = new URL(request.url);\n    const shopParam = url.searchParams.get('shop');\n    \n    if (!shopParam) {\n      throw new Response(\n        JSON.stringify({ \n          error: \"Authentication required - provide session token or shop parameter\", \n          code: \"AUTH_REQUIRED\" \n        }), \n        { \n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        }\n      );\n    }\n\n    // Validate shop parameter\n    if (!shopParam.endsWith('.myshopify.com')) {\n      throw new Response(\n        JSON.stringify({ \n          error: \"Invalid shop domain format\", \n          code: \"INVALID_SHOP\" \n        }), \n        { \n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        }\n      );\n    }\n\n    // Check if shop exists in database\n    const shopRecord = await prisma.shop.findUnique({\n      where: { shopDomain: shopParam }\n    });\n\n    if (!shopRecord || shopRecord.uninstalledAt) {\n      throw new Response(\n        JSON.stringify({ \n          error: \"Shop not found or uninstalled\", \n          code: \"SHOP_NOT_FOUND\" \n        }), \n        { \n          status: 404,\n          headers: { 'Content-Type': 'application/json' }\n        }\n      );\n    }\n\n    return {\n      shop: shopParam,\n      session: null, // No session for shop parameter access\n      shopRecord\n    };\n\n  } catch (error) {\n    if (error instanceof Response) {\n      throw error;\n    }\n\n    console.error('Flexible auth middleware error:', error);\n    throw new Response(\n      JSON.stringify({ \n        error: \"Authentication failed\", \n        code: \"AUTH_ERROR\" \n      }), \n      { \n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      }\n    );\n  }\n}\n\n/**\n * Rate limiting helper (basic implementation)\n */\nexport function checkRateLimit(shop: string, endpoint: string): boolean {\n  // TODO: Implement proper rate limiting with Redis/memory store\n  // For MVP, just return true (no rate limiting)\n  return true;\n}\n\n/**\n * Request logging helper with enhanced monitoring\n */\nexport function logRequest(request: Request, context?: RequestContext): void {\n  logRequestWithContext(request, context);\n}\n\n/**\n * Add request ID header if not present\n */\nexport function ensureRequestId(request: Request): Request {\n  if (!request.headers.get('x-request-id')) {\n    const requestId = generateRequestId();\n    const headers = new Headers(request.headers);\n    headers.set('x-request-id', requestId);\n    \n    return new Request(request.url, {\n      method: request.method,\n      headers,\n      body: request.body\n    });\n  }\n  return request;\n}", "import { z } from \"zod\";\n\n// Basic validation schemas\nexport const ShopDomainSchema = z.string()\n  .regex(/^[a-z0-9-]+\\.myshopify\\.com$/, \"Invalid shop domain format\");\n\nexport const HexColorSchema = z.string()\n  .regex(/^#[0-9A-F]{6}$/i, \"Invalid hex color format\");\n\nexport const UrlSchema = z.string()\n  .refine((url) => {\n    if (url === \"\") return true; // Allow empty string\n    try {\n      const parsed = new URL(url);\n      // Reject dangerous protocols\n      return !['javascript:', 'data:', 'vbscript:', 'file:', 'ftp:'].includes(parsed.protocol);\n    } catch {\n      return false; // Invalid URL\n    }\n  }, \"Invalid or unsafe URL\")\n  .optional()\n  .or(z.literal(\"\"));\n\n// Branding settings schema\nexport const BrandingSettingsSchema = z.object({\n  brandName: z.string()\n    .min(1, \"Brand name is required\")\n    .max(50, \"Brand name too long\")\n    .regex(/^[a-zA-Z0-9\\s\\-_]+$/, \"Brand name contains invalid characters\"),\n  primaryColor: HexColorSchema,\n  logoUrl: UrlSchema,\n  tagline: z.string()\n    .max(100, \"Tagline too long\")\n    .optional()\n    .or(z.literal(\"\"))\n});\n\n// Config response schema\nexport const ConfigResponseSchema = z.object({\n  shop: ShopDomainSchema,\n  branding: BrandingSettingsSchema,\n  storefrontEndpoint: z.string().url(\"Invalid storefront endpoint\"),\n  appVersion: z.string().regex(/^\\d+\\.\\d+\\.\\d+$/, \"Invalid version format\")\n});\n\n// Upload request schema\nexport const UploadRequestSchema = z.object({\n  kind: z.enum([\"logo\", \"banner\"], { \n    errorMap: () => ({ message: \"Asset kind must be 'logo' or 'banner'\" })\n  })\n});\n\n// Upload response schema\nexport const UploadResponseSchema = z.object({\n  success: z.boolean(),\n  asset: z.object({\n    id: z.string().uuid(),\n    kind: z.enum([\"logo\", \"banner\"]),\n    url: z.string().url(),\n    filename: z.string()\n  }).optional(),\n  message: z.string().optional(),\n  error: z.string().optional()\n});\n\n// Error response schema\nexport const ErrorResponseSchema = z.object({\n  error: z.string(),\n  code: z.string().optional(),\n  details: z.record(z.string()).optional()\n});\n\n// Settings update request schema\nexport const SettingsUpdateSchema = z.object({\n  brandName: z.string()\n    .min(1, \"Brand name is required\")\n    .max(50, \"Brand name too long\")\n    .optional(),\n  primaryColor: HexColorSchema.optional(),\n  logoUrl: UrlSchema.optional(),\n  tagline: z.string()\n    .max(100, \"Tagline too long\")\n    .optional()\n});\n\n// Health check response schema\nexport const HealthResponseSchema = z.object({\n  status: z.enum([\"healthy\", \"unhealthy\"]),\n  timestamp: z.string(),\n  database: z.object({\n    connected: z.boolean(),\n    shops: z.number().int().nonnegative(),\n    latency: z.number().optional()\n  }).optional(),\n  crypto: z.object({\n    working: z.boolean()\n  }).optional(),\n  version: z.string().optional(),\n  error: z.string().optional()\n});\n\n// Request validation helpers\nexport const validateShopParam = (shop: string | null): string => {\n  if (!shop) {\n    throw new Error(\"Shop parameter is required\");\n  }\n  \n  const result = ShopDomainSchema.safeParse(shop);\n  if (!result.success) {\n    throw new Error(`Invalid shop domain: ${result.error.errors[0].message}`);\n  }\n  \n  return result.data;\n};\n\nexport const validateBrandingData = (data: unknown) => {\n  try {\n    return BrandingSettingsSchema.parse(data);\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      const fieldErrors = error.errors.map(err => \n        `${err.path.join('.')}: ${err.message}`\n      ).join(', ');\n      throw new Error(`Validation failed: ${fieldErrors}`);\n    }\n    throw error;\n  }\n};\n\nexport const createErrorResponse = (message: string, code?: string, details?: Record<string, string>) => {\n  return {\n    error: message,\n    code,\n    details\n  };\n};\n\n// Product API schemas\nexport const ProductSchema = z.object({\n  id: z.string(),\n  title: z.string(),\n  handle: z.string(),\n  description: z.string(),\n  image: z.string().nullable(),\n  images: z.array(z.object({\n    url: z.string().url(),\n    altText: z.string().nullable()\n  })),\n  price: z.object({\n    amount: z.string(),\n    currency: z.string().length(3) // ISO currency code\n  }),\n  variants: z.array(z.object({\n    id: z.string(),\n    title: z.string(),\n    price: z.object({\n      amount: z.string(),\n      currencyCode: z.string().length(3)\n    }),\n    compareAtPrice: z.object({\n      amount: z.string(),\n      currencyCode: z.string().length(3)\n    }).nullable(),\n    available: z.boolean()\n  }))\n});\n\nexport const ProductsResponseSchema = z.object({\n  products: z.array(ProductSchema),\n  pageInfo: z.object({\n    hasNextPage: z.boolean(),\n    hasPreviousPage: z.boolean()\n  }),\n  shop: ShopDomainSchema,\n  total: z.number().int().nonnegative()\n});\n\n// Admin API schemas\nexport const AdminProductVariantSchema = z.object({\n  id: z.string(),\n  title: z.string(),\n  sku: z.string(),\n  price: z.string(),\n  compareAtPrice: z.string().nullable(),\n  inventoryQuantity: z.number().int(),\n  availableForSale: z.boolean()\n});\n\nexport const AdminProductImageSchema = z.object({\n  id: z.string(),\n  url: z.string().url(),\n  altText: z.string().nullable(),\n  width: z.number().int().positive(),\n  height: z.number().int().positive()\n});\n\nexport const AdminProductSchema = z.object({\n  id: z.string(),\n  title: z.string(),\n  handle: z.string(),\n  status: z.enum(['ACTIVE', 'ARCHIVED', 'DRAFT']),\n  productType: z.string(),\n  vendor: z.string(),\n  tags: z.array(z.string()),\n  createdAt: z.string().datetime(),\n  updatedAt: z.string().datetime(),\n  variants: z.object({\n    edges: z.array(z.object({\n      node: AdminProductVariantSchema\n    }))\n  }),\n  images: z.object({\n    edges: z.array(z.object({\n      node: AdminProductImageSchema\n    }))\n  })\n});\n\nexport const ShopInfoSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  domain: z.string(),\n  email: z.string().email(),\n  myshopifyDomain: z.string().regex(/^[a-z0-9-]+\\.myshopify\\.com$/),\n  plan: z.object({\n    displayName: z.string(),\n    partnerDevelopment: z.boolean()\n  }),\n  primaryLocale: z.string(),\n  currencyCode: z.string().length(3), // ISO currency code\n  weightUnit: z.enum(['POUNDS', 'OUNCES', 'KILOGRAMS', 'GRAMS']),\n  timezone: z.string()\n});\n\nexport const AdminProductsResponseSchema = z.object({\n  products: z.array(AdminProductSchema),\n  hasNextPage: z.boolean(),\n  endCursor: z.string().optional(),\n  shop: ShopDomainSchema,\n  total: z.number().int().nonnegative()\n});\n\n// Shop validation response schema\nexport const ShopValidationResponseSchema = z.object({\n  valid: z.boolean(),\n  shop: ShopInfoSchema.optional(),\n  error: z.string().optional()\n});\n\n// Type exports\nexport type BrandingSettings = z.infer<typeof BrandingSettingsSchema>;\nexport type ConfigResponse = z.infer<typeof ConfigResponseSchema>;\nexport type UploadRequest = z.infer<typeof UploadRequestSchema>;\nexport type UploadResponse = z.infer<typeof UploadResponseSchema>;\nexport type ErrorResponse = z.infer<typeof ErrorResponseSchema>;\nexport type SettingsUpdate = z.infer<typeof SettingsUpdateSchema>;\nexport type HealthResponse = z.infer<typeof HealthResponseSchema>;\nexport type Product = z.infer<typeof ProductSchema>;\nexport type ProductsResponse = z.infer<typeof ProductsResponseSchema>;\nexport type AdminProduct = z.infer<typeof AdminProductSchema>;\nexport type AdminProductsResponse = z.infer<typeof AdminProductsResponseSchema>;\nexport type ShopInfo = z.infer<typeof ShopInfoSchema>;\nexport type ShopValidationResponse = z.infer<typeof ShopValidationResponseSchema>;", "import { json, type LoaderFunctionArgs, type ActionFunctionArgs } from \"@remix-run/node\";\nimport { useLoaderData, Form, useActionData, useFetcher } from \"@remix-run/react\";\nimport { flexibleAuth, logRequest } from \"~/lib/middleware.server\";\nimport {\n  Page,\n  Layout,\n  Card,\n  FormLayout,\n  TextField,\n  Button,\n  Banner,\n  Text,\n  Divider,\n  InlineStack,\n  DropZone,\n  Thumbnail,\n  BlockStack,\n  Icon\n} from \"@shopify/polaris\";\nimport { useState, useCallback, useRef } from \"react\";\nimport { ImageIcon } from '@shopify/polaris-icons';\n\ninterface UploadResponse {\n  success?: boolean;\n  error?: string;\n  asset?: {\n    id: string;\n    kind: string;\n    url: string;\n    filename: string;\n  };\n  message?: string;\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  const context = await flexibleAuth(request);\n  logRequest(request, context);\n\n  // Load branding settings from config API\n  try {\n    const configUrl = new URL(\"/api/config\", request.url);\n    configUrl.searchParams.set(\"shop\", context.shop);\n    \n    const configResponse = await fetch(configUrl.toString());\n    const configData = await configResponse.json();\n    \n    if (!configResponse.ok) {\n      throw new Error(configData.error || \"Failed to load config\");\n    }\n\n    return json({\n      shop: context.shop,\n      brandingSettings: configData.branding\n    });\n  } catch (error) {\n    console.error(\"Failed to load branding settings:\", error);\n    \n    // Fallback to defaults\n    const brandingSettings = {\n      brandName: context.shop.split('.')[0],\n      primaryColor: \"#007C3B\",\n      logoUrl: \"\",\n      tagline: \"Your mobile shopping experience\"\n    };\n\n    return json({\n      shop: context.shop,\n      brandingSettings\n    });\n  }\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n  const context = await flexibleAuth(request);\n  logRequest(request, context);\n\n  try {\n    // Forward to settings API\n    const settingsUrl = new URL(\"/api/settings\", request.url);\n    settingsUrl.searchParams.set(\"shop\", context.shop);\n    \n    const formData = await request.formData();\n    \n    const settingsResponse = await fetch(settingsUrl.toString(), {\n      method: \"POST\",\n      body: formData\n    });\n    \n    const settingsData = await settingsResponse.json();\n    \n    if (!settingsResponse.ok) {\n      throw new Error(settingsData.error || \"Failed to save settings\");\n    }\n\n    return json(settingsData);\n    \n  } catch (error) {\n    console.error(\"Failed to save branding settings:\", error);\n    return json({\n      error: error instanceof Error ? error.message : \"Failed to save settings\"\n    }, { status: 500 });\n  }\n}\n\nexport default function AdminBranding() {\n  const { shop, brandingSettings } = useLoaderData<typeof loader>();\n  const actionData = useActionData<typeof action>();\n  const uploadFetcher = useFetcher();\n  \n  const [brandName, setBrandName] = useState(brandingSettings.brandName);\n  const [primaryColor, setPrimaryColor] = useState(brandingSettings.primaryColor);\n  const [logoUrl, setLogoUrl] = useState(brandingSettings.logoUrl);\n  const [tagline, setTagline] = useState(brandingSettings.tagline);\n  const [uploadedFile, setUploadedFile] = useState<File | null>(null);\n\n  const handleBrandNameChange = useCallback((value: string) => setBrandName(value), []);\n  const handleLogoUrlChange = useCallback((value: string) => setLogoUrl(value), []);\n  const handleTaglineChange = useCallback((value: string) => setTagline(value), []);\n  \n  const handleDropZoneDrop = useCallback((files: File[]) => {\n    const file = files[0];\n    if (file) {\n      setUploadedFile(file);\n      \n      // Upload file immediately\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('kind', 'logo');\n      \n      uploadFetcher.submit(formData, {\n        method: 'POST',\n        action: `/api/upload?shop=${shop}`,\n        encType: 'multipart/form-data'\n      });\n    }\n  }, [shop, uploadFetcher]);\n\n  // Update logoUrl when upload completes\n  const uploadData = uploadFetcher.data as UploadResponse;\n  if (uploadData?.success && uploadData.asset?.url && uploadData.asset.url !== logoUrl) {\n    setLogoUrl(uploadData.asset.url);\n  }\n\n  return (\n    <Page \n      title=\"Branding Configuration\"\n      subtitle=\"Customize your mobile app appearance\"\n      backAction={{\n        url: '/admin'\n      }}\n    >\n      <Layout>\n        <Layout.Section>\n          {actionData?.success && (\n            <Banner tone=\"success\" onDismiss={() => {}}>\n              {actionData.message}\n            </Banner>\n          )}\n          {actionData?.error && (\n            <Banner tone=\"critical\" onDismiss={() => {}}>\n              {actionData.error}\n            </Banner>\n          )}\n          \n          <Card>\n            <Form method=\"post\">\n              <FormLayout>\n                <Text variant=\"headingSm\" as=\"h3\">Basic Information</Text>\n                \n                <TextField\n                  label=\"App Name\"\n                  value={brandName}\n                  onChange={handleBrandNameChange}\n                  name=\"brandName\"\n                  helpText=\"This will be the name of your mobile app\"\n                  autoComplete=\"off\"\n                />\n\n                <TextField\n                  label=\"Tagline\"\n                  value={tagline}\n                  onChange={handleTaglineChange}\n                  name=\"tagline\"\n                  helpText=\"A short description for your mobile app\"\n                  autoComplete=\"off\"\n                />\n\n                <Divider />\n\n                <Text variant=\"headingSm\" as=\"h3\">Visual Design</Text>\n\n                <TextField\n                  label=\"Primary Color\"\n                  value={primaryColor}\n                  onChange={setPrimaryColor}\n                  name=\"primaryColor\"\n                  helpText=\"Hex color code for your app's primary color\"\n                  autoComplete=\"off\"\n                  prefix=\"#\"\n                  placeholder=\"007C3B\"\n                />\n\n                <div>\n                  <Text variant=\"bodyMd\" as=\"p\" fontWeight=\"medium\">Logo Upload</Text>\n                  <div style={{ marginTop: '8px' }}>\n                    <DropZone onDrop={handleDropZoneDrop} accept=\"image/*\" type=\"image\">\n                      {uploadedFile ? (\n                        <BlockStack gap=\"200\">\n                          <Thumbnail\n                            source={URL.createObjectURL(uploadedFile)}\n                            alt={uploadedFile.name}\n                            size=\"large\"\n                          />\n                          <Text variant=\"bodyMd\" as=\"p\" alignment=\"center\">\n                            {uploadedFile.name}\n                          </Text>\n                          {uploadFetcher.state === 'submitting' && (\n                            <Text variant=\"bodyMd\" as=\"p\" alignment=\"center\">\n                              Uploading...\n                            </Text>\n                          )}\n                          {(uploadFetcher.data as UploadResponse)?.success && (\n                            <Text variant=\"bodyMd\" as=\"p\" alignment=\"center\" tone=\"success\">\n                              Upload successful!\n                            </Text>\n                          )}\n                        </BlockStack>\n                      ) : logoUrl ? (\n                        <BlockStack gap=\"200\">\n                          <Thumbnail\n                            source={logoUrl}\n                            alt=\"Current logo\"\n                            size=\"large\"\n                          />\n                          <Text variant=\"bodyMd\" as=\"p\" alignment=\"center\">\n                            Current logo\n                          </Text>\n                        </BlockStack>\n                      ) : (\n                        <BlockStack gap=\"200\">\n                          <Icon source={ImageIcon} tone=\"subdued\" />\n                          <Text variant=\"bodyMd\" as=\"p\" alignment=\"center\">\n                            Drop logo here or click to upload\n                          </Text>\n                          <Text variant=\"bodyMd\" as=\"p\" alignment=\"center\" tone=\"subdued\">\n                            Supports JPG, PNG, WebP, SVG (max 2MB)\n                          </Text>\n                        </BlockStack>\n                      )}\n                    </DropZone>\n                  </div>\n                  {(uploadFetcher.data as UploadResponse)?.error && (\n                    <Banner tone=\"critical\" onDismiss={() => {}}>\n                      {(uploadFetcher.data as UploadResponse)?.error || 'Upload error'}\n                    </Banner>\n                  )}\n                </div>\n\n                <TextField\n                  label=\"Logo URL (Alternative)\"\n                  value={logoUrl}\n                  onChange={handleLogoUrlChange}\n                  name=\"logoUrl\"\n                  helpText=\"Or provide a direct URL to your logo\"\n                  autoComplete=\"off\"\n                />\n\n                <InlineStack align=\"end\">\n                  <Button variant=\"primary\" submit>\n                    Save Settings\n                  </Button>\n                </InlineStack>\n              </FormLayout>\n            </Form>\n          </Card>\n        </Layout.Section>\n\n        <Layout.Section variant=\"oneThird\">\n          <Card>\n            <div style={{ padding: '20px' }}>\n              <Text variant=\"headingSm\" as=\"h3\">Preview</Text>\n              <div style={{ marginTop: '16px' }}>\n                <div \n                  style={{\n                    padding: '20px',\n                    backgroundColor: primaryColor,\n                    color: 'white',\n                    borderRadius: '8px',\n                    textAlign: 'center'\n                  }}\n                >\n                  <Text variant=\"headingLg\" as=\"h2\">\n                    {brandName || 'Your App Name'}\n                  </Text>\n                  <Text variant=\"bodyMd\" as=\"p\">\n                    {tagline || 'Your tagline here'}\n                  </Text>\n                </div>\n              </div>\n            </div>\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}", "import type { LoaderFunctionArgs } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { requireSession } from '~/lib/middleware.server';\nimport { getShopInfo, validateShopAccess, testAdminConnection } from '~/lib/admin-api.server';\nimport { createErrorResponse, ShopValidationResponseSchema } from '~/lib/validation.server';\n\n/**\n * GET /api/admin/shop - Get shop information and validate Admin API access\n * \n * Returns shop metadata from Admin API for the authenticated session\n */\nexport async function loader({ request }: LoaderFunctionArgs) {\n  try {\n    // Require authenticated session\n    const context = await requireSession(request);\n\n    const url = new URL(request.url);\n    const validate = url.searchParams.get('validate') === 'true';\n\n    if (validate) {\n      // Perform comprehensive shop validation\n      const isValid = await validateShopAccess(context.shop);\n      \n      if (!isValid) {\n        return json(createErrorResponse(\n          'Shop validation failed',\n          'SHOP_VALIDATION_FAILED'\n        ), { status: 400 });\n      }\n\n      const shopInfo = await getShopInfo(context.shop);\n      \n      const validationResponse = {\n        valid: true,\n        shop: shopInfo\n      };\n\n      // Validate response schema\n      const validatedResponse = ShopValidationResponseSchema.parse(validationResponse);\n\n      return json(validatedResponse, {\n        headers: {\n          'Cache-Control': 'private, max-age=300', // 5 minutes cache\n          'Content-Type': 'application/json'\n        }\n      });\n    } else {\n      // Just get shop information\n      const shopInfo = await getShopInfo(context.shop);\n      \n      if (!shopInfo) {\n        return json(createErrorResponse(\n          'Failed to retrieve shop information',\n          'SHOP_INFO_ERROR'\n        ), { status: 500 });\n      }\n\n      return json(shopInfo, {\n        headers: {\n          'Cache-Control': 'private, max-age=300', // 5 minutes cache\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n\n  } catch (error) {\n    console.error('Admin shop API error:', error);\n    \n    if (error instanceof Response) {\n      throw error; // Re-throw middleware responses\n    }\n\n    if (error instanceof Error) {\n      // Handle specific Admin API errors\n      if (error.message.includes('Admin API authentication failed')) {\n        return json(createErrorResponse(\n          'Shop authentication failed',\n          'ADMIN_AUTH_ERROR'\n        ), { status: 401 });\n      }\n\n      if (error.message.includes('Shop subscription required')) {\n        return json(createErrorResponse(\n          'Shop subscription required for Admin API access',\n          'SUBSCRIPTION_ERROR'\n        ), { status: 402 });\n      }\n\n      if (error.message.includes('rate limit')) {\n        return json(createErrorResponse(\n          'Admin API rate limit exceeded',\n          'ADMIN_RATE_LIMIT'\n        ), { status: 429 });\n      }\n    }\n\n    return json(createErrorResponse(\n      'Failed to retrieve shop information',\n      'INTERNAL_ERROR'\n    ), { status: 500 });\n  }\n}", "import { redirect, type LoaderFunctionArgs } from \"@remix-run/node\";\nimport { \n  verifyShopifyHmac, \n  exchangeCodeForToken \n} from \"~/lib/shopify-auth.server\";\nimport { prisma } from \"~/lib/prisma.server\";\nimport { registerWebhooks } from \"~/lib/webhooks.server\";\nimport { encryptToken } from \"~/lib/crypto.server\";\nimport { getShopWithToken } from \"~/lib/shop.server\";\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  const url = new URL(request.url);\n  const queryParams = Object.fromEntries(url.searchParams.entries());\n  \n  const { shop, code, hmac, state } = queryParams;\n\n  // Validate required parameters\n  if (!shop || !code || !hmac) {\n    throw new Response('Missing required OAuth parameters', { status: 400 });\n  }\n\n  // Validate shop domain\n  const shopDomain = shop.replace(/^https?:\\/\\//, '').replace(/\\/$/, '');\n  if (!/^[a-zA-Z0-9]([a-zA-Z0-9-]*[a-zA-Z0-9])?\\.myshopify\\.com$/.test(shopDomain)) {\n    throw new Response('Invalid shop domain', { status: 400 });\n  }\n\n  // Verify HMAC signature\n  const apiSecret = process.env.SHOPIFY_API_SECRET;\n  if (!apiSecret) {\n    throw new Response('Missing Shopify API secret', { status: 500 });\n  }\n\n  if (!verifyShopifyHmac(url.searchParams, apiSecret)) {\n    console.error('HMAC verification failed for shop:', shopDomain);\n    throw new Response('Invalid HMAC signature', { status: 403 });\n  }\n\n  // Exchange code for access token\n  const apiKey = process.env.SHOPIFY_API_KEY;\n  if (!apiKey) {\n    throw new Response('Missing Shopify API key', { status: 500 });\n  }\n\n  const tokenData = await exchangeCodeForToken(\n    shopDomain,\n    code,\n    apiKey,\n    apiSecret\n  );\n\n  if (!tokenData) {\n    throw new Response('Failed to exchange OAuth code for token', { status: 400 });\n  }\n\n  try {\n    // Encrypt access token before storing\n    const encryptedToken = encryptToken(tokenData.access_token);\n    \n    // Store shop and encrypted token in database\n    await prisma.shop.upsert({\n      where: { shopDomain },\n      update: {\n        accessTokenEnc: encryptedToken,\n        uninstalledAt: null, // Clear uninstall timestamp if re-installing\n        updatedAt: new Date(),\n      },\n      create: {\n        shopDomain,\n        accessTokenEnc: encryptedToken,\n        installedAt: new Date(),\n        settings: JSON.stringify({}),\n      },\n    });\n\n    console.log('Shop installed successfully:', shopDomain);\n\n    // Register webhooks after successful installation\n    const baseUrl = new URL(request.url).origin;\n    const shopWithToken = await getShopWithToken(shopDomain);\n    if (shopWithToken) {\n      await registerWebhooks(shopDomain, shopWithToken.accessToken, baseUrl);\n    }\n    \n    // Redirect to admin dashboard\n    return redirect(`https://${shopDomain}/admin/apps/${apiKey}`);\n    \n  } catch (error) {\n    console.error('Database error during OAuth callback:', error);\n    throw new Response('Internal server error', { status: 500 });\n  }\n}", "import { createHmac, timingSafeEqual } from 'crypto';\n\n/**\n * Verifies HMAC signature from Shopify\n * Used for OAuth callbacks and webhook validation\n */\nexport function verifyShopifyHmac(\n  query: URLSearchParams | Record<string, string>,\n  secret: string\n): boolean {\n  try {\n    const params = query instanceof URLSearchParams ? query : new URLSearchParams(query);\n    const hmac = params.get('hmac');\n    \n    if (!hmac) {\n      return false;\n    }\n\n    // Remove hmac and signature from query params\n    params.delete('hmac');\n    params.delete('signature');\n\n    // Sort parameters and create query string\n    const sortedParams = Array.from(params.entries())\n      .sort(([a], [b]) => a.localeCompare(b))\n      .map(([key, value]) => `${key}=${value}`)\n      .join('&');\n\n    // Calculate expected HMAC\n    const expectedHmac = createHmac('sha256', secret)\n      .update(sortedParams)\n      .digest('hex');\n\n    // Validate HMAC length before comparison\n    if (hmac.length !== expectedHmac.length) {\n      return false;\n    }\n\n    // Timing-safe comparison\n    return timingSafeEqual(\n      Buffer.from(hmac, 'hex'),\n      Buffer.from(expectedHmac, 'hex')\n    );\n  } catch (error) {\n    console.error('HMAC verification error:', error);\n    return false;\n  }\n}\n\n/**\n * Verifies webhook HMAC from X-Shopify-Hmac-Sha256 header\n */\nexport function verifyWebhookHmac(\n  body: string,\n  hmacHeader: string,\n  secret: string\n): boolean {\n  try {\n    const expectedHmac = createHmac('sha256', secret)\n      .update(body, 'utf8')\n      .digest('base64');\n\n    // Validate HMAC length before comparison\n    if (hmacHeader.length !== expectedHmac.length) {\n      return false;\n    }\n\n    return timingSafeEqual(\n      Buffer.from(hmacHeader, 'base64'),\n      Buffer.from(expectedHmac, 'base64')\n    );\n  } catch (error) {\n    console.error('Webhook HMAC verification error:', error);\n    return false;\n  }\n}\n\n/**\n * Creates OAuth authorization URL\n */\nexport function createOAuthUrl(\n  shop: string,\n  apiKey: string,\n  scopes: string,\n  redirectUri: string\n): string {\n  const params = new URLSearchParams({\n    client_id: apiKey,\n    scope: scopes,\n    redirect_uri: redirectUri,\n    state: createNonce(), // CSRF protection\n  });\n\n  return `https://${shop}.myshopify.com/admin/oauth/authorize?${params.toString()}`;\n}\n\n/**\n * Exchanges OAuth code for access token\n */\nexport async function exchangeCodeForToken(\n  shop: string,\n  code: string,\n  apiKey: string,\n  apiSecret: string\n): Promise<{ access_token: string; scope: string } | null> {\n  try {\n    const response = await fetch(`https://${shop}.myshopify.com/admin/oauth/access_token`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        client_id: apiKey,\n        client_secret: apiSecret,\n        code,\n      }),\n    });\n\n    if (!response.ok) {\n      console.error('Token exchange failed:', response.status, response.statusText);\n      return null;\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error('Token exchange error:', error);\n    return null;\n  }\n}\n\n/**\n * Creates a random nonce for CSRF protection\n */\nfunction createNonce(): string {\n  return Math.random().toString(36).substring(2, 15) + \n         Math.random().toString(36).substring(2, 15);\n}", "import type { LoaderFunctionArgs } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { flexibleAuth, logRequest } from '~/lib/middleware.server';\nimport { fetchProducts, transformProductForMobile, checkStorefrontRateLimit } from '~/lib/storefront.server';\nimport { createErrorResponse, ProductsResponseSchema } from '~/lib/validation.server';\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  try {\n    // Use hardened middleware for authentication\n    const context = await flexibleAuth(request);\n    logRequest(request, context);\n\n    const url = new URL(request.url);\n    \n    // Parse query parameters\n    const first = Math.min(parseInt(url.searchParams.get('first') || '10'), 50); // Max 50 products\n    const after = url.searchParams.get('after') || undefined;\n\n    // Validate parameters\n    if (first < 1) {\n      return json(createErrorResponse(\n        'Invalid \"first\" parameter. Must be between 1 and 50.',\n        'INVALID_PARAMETER'\n      ), { status: 400 });\n    }\n\n    // Check rate limiting\n    if (!checkStorefrontRateLimit(context.shop)) {\n      return json(createErrorResponse(\n        'Rate limit exceeded. Please try again later.',\n        'RATE_LIMIT_EXCEEDED'\n      ), { status: 429 });\n    }\n\n    // Fetch products from Storefront API\n    const productsResponse = await fetchProducts(context.shop, first, after);\n\n    // Transform products for mobile consumption\n    const transformedProducts = productsResponse.data.products.edges.map(edge => \n      transformProductForMobile(edge.node)\n    );\n\n    const response = {\n      products: transformedProducts,\n      pageInfo: productsResponse.data.products.pageInfo,\n      shop: context.shop,\n      total: transformedProducts.length\n    };\n\n    // Validate response schema\n    const validatedResponse = ProductsResponseSchema.parse(response);\n\n    return json(validatedResponse, {\n      headers: {\n        'Cache-Control': 'public, max-age=300', // 5 minutes cache\n        'Content-Type': 'application/json'\n      }\n    });\n\n  } catch (error) {\n    console.error('Products API error:', error);\n    \n    if (error instanceof Response) {\n      throw error; // Re-throw middleware responses\n    }\n\n    if (error instanceof Error) {\n      // Handle specific Shopify API errors\n      if (error.message.includes('Storefront API error: 401')) {\n        return json(createErrorResponse(\n          'Shop authentication failed',\n          'AUTH_ERROR'\n        ), { status: 401 });\n      }\n\n      if (error.message.includes('Storefront API error: 402')) {\n        return json(createErrorResponse(\n          'Shop subscription required',\n          'SUBSCRIPTION_ERROR'\n        ), { status: 402 });\n      }\n\n      if (error.message.includes('Rate limit')) {\n        return json(createErrorResponse(\n          'Shopify rate limit exceeded',\n          'SHOPIFY_RATE_LIMIT'\n        ), { status: 429 });\n      }\n    }\n\n    return json(createErrorResponse(\n      'Failed to fetch products',\n      'INTERNAL_ERROR'\n    ), { status: 500 });\n  }\n}", "import { getShopWithToken } from './shop.server.js';\n\n// Storefront API GraphQL endpoint\nconst STOREFRONT_API_VERSION = '2024-01';\n\nexport interface StorefrontProduct {\n  id: string;\n  title: string;\n  handle: string;\n  description: string;\n  images: {\n    edges: Array<{\n      node: {\n        url: string;\n        altText: string | null;\n      };\n    }>;\n  };\n  variants: {\n    edges: Array<{\n      node: {\n        id: string;\n        title: string;\n        price: {\n          amount: string;\n          currencyCode: string;\n        };\n        compareAtPrice: {\n          amount: string;\n          currencyCode: string;\n        } | null;\n        availableForSale: boolean;\n      };\n    }>;\n  };\n  priceRange: {\n    minVariantPrice: {\n      amount: string;\n      currencyCode: string;\n    };\n  };\n}\n\nexport interface StorefrontProductsResponse {\n  data: {\n    products: {\n      edges: Array<{\n        node: StorefrontProduct;\n      }>;\n      pageInfo: {\n        hasNextPage: boolean;\n        hasPreviousPage: boolean;\n      };\n    };\n  };\n  errors?: Array<{\n    message: string;\n    locations: Array<{ line: number; column: number }>;\n  }>;\n}\n\n// GraphQL query for fetching products\nconst PRODUCTS_QUERY = `\n  query getProducts($first: Int!, $after: String) {\n    products(first: $first, after: $after) {\n      edges {\n        node {\n          id\n          title\n          handle\n          description(truncateAt: 250)\n          images(first: 3) {\n            edges {\n              node {\n                url(transform: { maxWidth: 600, maxHeight: 600 })\n                altText\n              }\n            }\n          }\n          variants(first: 3) {\n            edges {\n              node {\n                id\n                title\n                price {\n                  amount\n                  currencyCode\n                }\n                compareAtPrice {\n                  amount\n                  currencyCode\n                }\n                availableForSale\n              }\n            }\n          }\n          priceRange {\n            minVariantPrice {\n              amount\n              currencyCode\n            }\n          }\n        }\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n      }\n    }\n  }\n`;\n\n/**\n * Create Storefront Access Token for a shop\n * This requires Admin API access to create the token\n */\nexport async function createStorefrontAccessToken(shopDomain: string): Promise<string | null> {\n  try {\n    const shopData = await getShopWithToken(shopDomain);\n    if (!shopData) {\n      console.error('Shop not found or inactive:', shopDomain);\n      return null;\n    }\n\n    // Use Admin API to create a Storefront access token\n    const adminUrl = `https://${shopDomain}/admin/api/${STOREFRONT_API_VERSION}/storefront_access_tokens.json`;\n    \n    const response = await fetch(adminUrl, {\n      method: 'POST',\n      headers: {\n        'X-Shopify-Access-Token': shopData.accessToken,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        storefront_access_token: {\n          title: 'TurnApp Mobile Access Token'\n        }\n      })\n    });\n\n    if (!response.ok) {\n      const error = await response.text();\n      console.error('Failed to create Storefront access token:', error);\n      return null;\n    }\n\n    const data = await response.json();\n    return data.storefront_access_token?.access_token || null;\n\n  } catch (error) {\n    console.error('Error creating Storefront access token:', error);\n    return null;\n  }\n}\n\n/**\n * Get or create Storefront access token (cached approach)\n */\nexport async function getStorefrontAccessToken(shopDomain: string): Promise<string | null> {\n  // For MVP, we'll create a new token each time\n  // In production, this should be cached in database\n  return await createStorefrontAccessToken(shopDomain);\n}\n\n/**\n * Make GraphQL request to Shopify Storefront API\n */\nexport async function queryStorefrontAPI(\n  shopDomain: string,\n  query: string,\n  variables: Record<string, any> = {}\n): Promise<any> {\n  try {\n    const accessToken = await getStorefrontAccessToken(shopDomain);\n    if (!accessToken) {\n      throw new Error('Failed to get Storefront access token');\n    }\n\n    const storefrontUrl = `https://${shopDomain}/api/${STOREFRONT_API_VERSION}/graphql.json`;\n\n    const response = await fetch(storefrontUrl, {\n      method: 'POST',\n      headers: {\n        'X-Shopify-Storefront-Access-Token': accessToken,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ query, variables })\n    });\n\n    if (!response.ok) {\n      const error = await response.text();\n      throw new Error(`Storefront API error: ${response.status} ${error}`);\n    }\n\n    const data = await response.json();\n    \n    if (data.errors && data.errors.length > 0) {\n      console.error('GraphQL errors:', data.errors);\n      throw new Error(`GraphQL error: ${data.errors[0].message}`);\n    }\n\n    return data;\n\n  } catch (error) {\n    console.error('Storefront API query failed:', error);\n    throw error;\n  }\n}\n\n/**\n * Fetch products from Storefront API\n */\nexport async function fetchProducts(\n  shopDomain: string,\n  first: number = 10,\n  after?: string\n): Promise<StorefrontProductsResponse> {\n  try {\n    const variables = { first, ...(after && { after }) };\n    const response = await queryStorefrontAPI(shopDomain, PRODUCTS_QUERY, variables);\n    \n    return response as StorefrontProductsResponse;\n\n  } catch (error) {\n    console.error('Failed to fetch products:', error);\n    throw error;\n  }\n}\n\n/**\n * Rate limiting helper for Storefront API\n * Shopify Storefront API has different limits than Admin API\n */\nexport function checkStorefrontRateLimit(shopDomain: string): boolean {\n  // TODO: Implement proper rate limiting\n  // Storefront API allows 100 req/sec per shop\n  // For MVP, we'll just return true\n  return true;\n}\n\n/**\n * Transform Storefront product data for mobile consumption\n */\nexport function transformProductForMobile(product: StorefrontProduct) {\n  return {\n    id: product.id,\n    title: product.title,\n    handle: product.handle,\n    description: product.description,\n    image: product.images.edges[0]?.node.url || null,\n    images: product.images.edges.map(edge => ({\n      url: edge.node.url,\n      altText: edge.node.altText\n    })),\n    price: {\n      amount: product.priceRange.minVariantPrice.amount,\n      currency: product.priceRange.minVariantPrice.currencyCode\n    },\n    variants: product.variants.edges.map(edge => ({\n      id: edge.node.id,\n      title: edge.node.title,\n      price: edge.node.price,\n      compareAtPrice: edge.node.compareAtPrice,\n      available: edge.node.availableForSale\n    }))\n  };\n}", "import { json, type ActionFunctionArgs } from \"@remix-run/node\";\nimport { prisma } from \"~/lib/prisma.server\";\nimport { \n  validateBrandingData, \n  createErrorResponse, \n  ErrorResponseSchema \n} from \"~/lib/validation.server\";\nimport { flexibleAuth, logRequest } from \"~/lib/middleware.server\";\n\nexport async function action({ request }: ActionFunctionArgs) {\n  if (request.method !== \"POST\") {\n    return json(createErrorResponse(\"Method not allowed\", \"METHOD_NOT_ALLOWED\"), { status: 405 });\n  }\n\n  try {\n    // Use hardened middleware for authentication\n    const context = await flexibleAuth(request);\n    logRequest(request, context);\n\n    const formData = await request.formData();\n    \n    // Extract form data\n    const brandingData = {\n      brandName: formData.get(\"brandName\") as string,\n      primaryColor: formData.get(\"primaryColor\") as string,\n      logoUrl: formData.get(\"logoUrl\") as string || \"\",\n      tagline: formData.get(\"tagline\") as string || \"\"\n    };\n\n    // Validate with enhanced Zod validation\n    const validatedBranding = validateBrandingData(brandingData);\n\n    // Shop record already validated by middleware\n    const shopRecord = context.shopRecord;\n\n    // Merge with existing settings\n    const currentSettings = (shopRecord.settings as any) || {};\n    const updatedSettings = {\n      ...currentSettings,\n      ...validatedBranding,\n      updatedAt: new Date().toISOString()\n    };\n\n    // Update shop settings\n    await prisma.shop.update({\n      where: { shopDomain: context.shop },\n      data: { settings: updatedSettings }\n    });\n\n    console.log(`Updated branding settings for shop: ${context.shop}`, validatedBranding);\n\n    return json({\n      success: true,\n      message: \"Branding settings saved successfully!\",\n      branding: validatedBranding\n    });\n\n  } catch (error) {\n    console.error(\"Settings API error:\", error);\n    \n    if (error instanceof Response) {\n      throw error; // Re-throw middleware responses\n    }\n\n    if (error instanceof Error && error.message.includes(\"Validation failed\")) {\n      return json(createErrorResponse(\n        error.message,\n        \"VALIDATION_ERROR\"\n      ), { status: 400 });\n    }\n\n    return json(createErrorResponse(\n      \"Failed to update settings\",\n      \"INTERNAL_ERROR\"\n    ), { status: 500 });\n  }\n}", "import { redirect, type LoaderFunctionArgs } from \"@remix-run/node\";\nimport { createOAuthUrl } from \"~/lib/shopify-auth.server\";\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  const url = new URL(request.url);\n  const shop = url.searchParams.get('shop');\n\n  if (!shop) {\n    throw new Response('Missing shop parameter', { status: 400 });\n  }\n\n  // Validate shop domain format\n  const shopDomain = shop.replace(/^https?:\\/\\//, '').replace(/\\/$/, '');\n  if (!/^[a-zA-Z0-9][a-zA-Z0-9-]*\\.myshopify\\.com$/.test(shopDomain)) {\n    throw new Response('Invalid shop domain', { status: 400 });\n  }\n\n  const apiKey = process.env.SHOPIFY_API_KEY;\n  const scopes = process.env.SCOPES;\n  const redirectUri = `${process.env.APP_URL}/auth/callback`;\n\n  if (!apiKey || !scopes) {\n    throw new Response('Missing Shopify configuration', { status: 500 });\n  }\n\n  const authUrl = createOAuthUrl(shopDomain, apiKey, scopes, redirectUri);\n  \n  return redirect(authUrl);\n}", "import { json, type LoaderFunctionArgs } from \"@remix-run/node\";\nimport { ConfigResponseSchema } from \"~/lib/validation.server\";\nimport { getShopSettings } from \"~/lib/shop.server\";\nimport { flexibleAuth, logRequest } from \"~/lib/middleware.server\";\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  // Use hardened middleware for authentication\n  const context = await flexibleAuth(request);\n  logRequest(request, context);\n\n  try {\n    // Get shop settings (without decrypting token)\n    const settings = await getShopSettings(context.shop);\n\n    if (!settings) {\n      return json({ error: \"Shop not found or not active\" }, { status: 404 });\n    }\n\n    // Parse settings or use defaults\n    const branding = {\n      brandName: settings.brandName || context.shop.split('.')[0],\n      primaryColor: settings.primaryColor || \"#007C3B\",\n      logoUrl: settings.logoUrl || \"\",\n      tagline: settings.tagline || \"Your mobile shopping experience\"\n    };\n\n    const configResponse = {\n      shop: context.shop,\n      branding,\n      storefrontEndpoint: `https://${context.shop}/api/2024-01/graphql.json`,\n      appVersion: \"1.0.0\"\n    };\n\n    // Validate response schema\n    const validatedConfig = ConfigResponseSchema.parse(configResponse);\n\n    return json(validatedConfig, {\n      headers: {\n        \"Cache-Control\": \"public, max-age=300\", // 5 minutes cache\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n  } catch (error) {\n    console.error(\"Config API error:\", error);\n    return json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}", "import type { ActionFunctionArgs } from '@remix-run/node';\nimport { json, unstable_parseMultipartFormData, unstable_createFileUploadHandler } from '@remix-run/node';\nimport { flexibleAuth, logRequest } from '~/lib/middleware.server';\nimport { prisma } from '~/lib/prisma.server';\nimport { \n  UploadRequestSchema, \n  UploadResponseSchema,\n  createErrorResponse \n} from '~/lib/validation.server';\nimport path from 'node:path';\nimport { randomBytes } from 'node:crypto';\n\n// File validation constants\nconst ALLOWED_MIME_TYPES = [\n  'image/jpeg',\n  'image/png', \n  'image/webp',\n  'image/svg+xml'\n];\n\nconst MAX_FILE_SIZE = 2 * 1024 * 1024; // 2MB\n\nexport async function action({ request }: ActionFunctionArgs) {\n  if (request.method !== 'POST') {\n    return json(createErrorResponse('Method not allowed', 'METHOD_NOT_ALLOWED'), { status: 405 });\n  }\n\n  try {\n    // Use hardened middleware for authentication\n    const context = await flexibleAuth(request);\n    logRequest(request, context);\n\n    // Setup file upload handler\n    const uploadHandler = unstable_createFileUploadHandler({\n      directory: path.join(process.cwd(), 'public', 'uploads'),\n      file: ({ filename, contentType }) => {\n        // Validate MIME type\n        if (!ALLOWED_MIME_TYPES.includes(contentType)) {\n          throw new Error(`Invalid file type: ${contentType}`);\n        }\n        \n        // Generate secure filename\n        const ext = path.extname(filename || '');\n        const randomId = randomBytes(8).toString('hex');\n        const timestamp = Date.now();\n        return `${timestamp}-${randomId}${ext}`;\n      },\n      maxPartSize: MAX_FILE_SIZE\n    });\n\n    // Parse multipart form data\n    const formData = await unstable_parseMultipartFormData(request, uploadHandler);\n    \n    const file = formData.get('file') as File;\n    const kindParam = (formData.get('kind') as string) || 'logo';\n\n    if (!file) {\n      return json(createErrorResponse('No file provided', 'FILE_REQUIRED'), { status: 400 });\n    }\n\n    // Validate kind with Zod schema\n    const validationResult = UploadRequestSchema.safeParse({ kind: kindParam });\n    if (!validationResult.success) {\n      return json(createErrorResponse(\n        validationResult.error.errors[0].message,\n        'VALIDATION_ERROR'\n      ), { status: 400 });\n    }\n\n    const { kind } = validationResult.data;\n\n    // Validate file size\n    if (file.size > MAX_FILE_SIZE) {\n      return json(createErrorResponse(\n        `File too large. Maximum size is ${MAX_FILE_SIZE / 1024 / 1024}MB`,\n        'FILE_TOO_LARGE'\n      ), { status: 400 });\n    }\n\n    // Get file URL (file.name contains the generated filename)\n    const fileUrl = `/uploads/${file.name}`;\n\n    // Delete existing asset of same kind\n    const existingAsset = await prisma.asset.findFirst({\n      where: {\n        shopId: context.shopRecord.id,\n        kind: kind\n      }\n    });\n\n    if (existingAsset) {\n      await prisma.asset.delete({\n        where: { id: existingAsset.id }\n      });\n    }\n\n    // Save new asset to database\n    const asset = await prisma.asset.create({\n      data: {\n        shopId: context.shopRecord.id,\n        kind: kind,\n        url: fileUrl\n      }\n    });\n\n    const response = {\n      success: true,\n      asset: {\n        id: asset.id,\n        kind: asset.kind as \"logo\" | \"banner\",\n        url: asset.url,\n        filename: file.name\n      },\n      message: `${kind} uploaded successfully`\n    };\n\n    // Validate response schema\n    const validatedResponse = UploadResponseSchema.parse(response);\n    return json(validatedResponse);\n\n  } catch (error) {\n    console.error('Upload API error:', error);\n    \n    if (error instanceof Response) {\n      throw error; // Re-throw middleware responses\n    }\n\n    return json(createErrorResponse(\n      error instanceof Error ? error.message : 'Upload failed',\n      'UPLOAD_ERROR'\n    ), { status: 500 });\n  }\n}", "import { json } from \"@remix-run/node\";\nimport { useLoaderData, Link } from \"@remix-run/react\";\n\nexport async function loader() {\n  const testShop = \"zeytestshop\"; // From .shopify/project.json\n  const installUrl = `/auth/install?shop=${testShop}.myshopify.com`;\n  \n  return json({\n    testShop,\n    installUrl,\n    apiKey: process.env.SHOPIFY_API_KEY || 'NOT_SET',\n    appUrl: process.env.APP_URL || 'NOT_SET',\n  });\n}\n\nexport default function TestOAuth() {\n  const { testShop, installUrl, apiKey, appUrl } = useLoaderData<typeof loader>();\n\n  return (\n    <div style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.8\", padding: \"20px\" }}>\n      <h1>OAuth Test Page</h1>\n      \n      <div style={{ marginBottom: \"20px\" }}>\n        <h3>Configuration:</h3>\n        <p>Test Shop: {testShop}.myshopify.com</p>\n        <p>API Key: {apiKey}</p>\n        <p>App URL: {appUrl}</p>\n      </div>\n\n      <div style={{ marginBottom: \"20px\" }}>\n        <h3>Test OAuth Flow:</h3>\n        <Link \n          to={installUrl}\n          style={{ \n            padding: \"10px 20px\", \n            backgroundColor: \"#007C3B\", \n            color: \"white\", \n            textDecoration: \"none\",\n            borderRadius: \"4px\" \n          }}\n        >\n          Install App to {testShop}.myshopify.com\n        </Link>\n      </div>\n\n      <div style={{ marginTop: \"20px\", fontSize: \"14px\", color: \"#666\" }}>\n        <p>\u26A0\uFE0F Make sure to:</p>\n        <ul>\n          <li>Set SHOPIFY_API_KEY and SHOPIFY_API_SECRET in .env</li>\n          <li>Update APP_URL with your ngrok URL</li>\n          <li>Add the callback URL to your Shopify Partner Dashboard</li>\n        </ul>\n      </div>\n    </div>\n  );\n}", "import type { LoaderFunctionArgs } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { checkReadiness, logRequest } from '~/lib/monitoring.server';\nimport { HealthResponseSchema } from '~/lib/validation.server';\n\n/**\n * GET /readiness - Readiness probe endpoint\n * \n * Returns detailed health status to determine if the application\n * is ready to serve traffic. Performs comprehensive checks.\n */\nexport async function loader({ request }: LoaderFunctionArgs) {\n  const startTime = Date.now();\n  \n  try {\n    // Log the readiness check request\n    logRequest(request);\n    \n    // Comprehensive readiness check\n    const readiness = await checkReadiness();\n    \n    // Validate response schema\n    const validatedReadiness = HealthResponseSchema.parse(readiness);\n    \n    const duration = Date.now() - startTime;\n    const statusCode = readiness.status === 'healthy' ? 200 : 503;\n    \n    logRequest(request, undefined, { duration, statusCode });\n    \n    return json(validatedReadiness, {\n      status: statusCode,\n      headers: {\n        'Content-Type': 'application/json',\n        'Cache-Control': 'no-cache, no-store, must-revalidate'\n      }\n    });\n\n  } catch (error) {\n    console.error('Readiness check endpoint error:', error);\n    \n    const duration = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Readiness check failed';\n    \n    logRequest(request, undefined, { \n      duration, \n      statusCode: 503, \n      error: errorMessage \n    });\n\n    return json(\n      {\n        status: 'unhealthy',\n        timestamp: new Date().toISOString(),\n        error: errorMessage\n      },\n      { \n        status: 503,\n        headers: {\n          'Content-Type': 'application/json',\n          'Cache-Control': 'no-cache, no-store, must-revalidate'\n        }\n      }\n    );\n  }\n}", "import type { LoaderFunctionArgs } from '@remix-run/node';\nimport { json } from '@remix-run/node';\nimport { performHealthCheck, logRequest } from '~/lib/monitoring.server';\nimport { HealthResponseSchema } from '~/lib/validation.server';\n\n/**\n * GET /healthz - Basic health check endpoint\n * \n * Returns simple health status for load balancers and monitoring systems\n * Does not perform extensive checks to avoid impacting performance\n */\nexport async function loader({ request }: LoaderFunctionArgs) {\n  const startTime = Date.now();\n  \n  try {\n    // Log the health check request\n    logRequest(request);\n    \n    // Basic health check (no deep checks for performance)\n    const health = await performHealthCheck(false);\n    \n    // Validate response schema\n    const validatedHealth = HealthResponseSchema.parse(health);\n    \n    const duration = Date.now() - startTime;\n    logRequest(request, undefined, { duration, statusCode: 200 });\n    \n    return json(validatedHealth, {\n      status: health.status === 'healthy' ? 200 : 503,\n      headers: {\n        'Content-Type': 'application/json',\n        'Cache-Control': 'no-cache, no-store, must-revalidate'\n      }\n    });\n\n  } catch (error) {\n    console.error('Health check endpoint error:', error);\n    \n    const duration = Date.now() - startTime;\n    const errorMessage = error instanceof Error ? error.message : 'Health check failed';\n    \n    logRequest(request, undefined, { \n      duration, \n      statusCode: 503, \n      error: errorMessage \n    });\n\n    return json(\n      {\n        status: 'unhealthy',\n        timestamp: new Date().toISOString(),\n        error: errorMessage\n      },\n      { \n        status: 503,\n        headers: {\n          'Content-Type': 'application/json',\n          'Cache-Control': 'no-cache, no-store, must-revalidate'\n        }\n      }\n    );\n  }\n}", "import { json } from \"@remix-run/node\";\nimport { useLoaderData, Link } from \"@remix-run/react\";\nimport { prisma } from \"~/lib/prisma.server\";\n\nexport async function loader() {\n  // Test DB connection\n  try {\n    await prisma.$queryRaw`SELECT 1`;\n    const shopCount = await prisma.shop.count();\n    const recentShops = await prisma.shop.findMany({\n      take: 5,\n      orderBy: { installedAt: 'desc' },\n      select: {\n        shopDomain: true,\n        installedAt: true,\n        uninstalledAt: true,\n      },\n    });\n    \n    return json({\n      message: \"TurnApp - Shopify App Admin Dashboard\",\n      timestamp: new Date().toISOString(),\n      dbStatus: \"connected\",\n      shopCount,\n      recentShops,\n    });\n  } catch (error) {\n    return json({\n      message: \"TurnApp - Shopify App Admin Dashboard\",\n      timestamp: new Date().toISOString(),\n      dbStatus: \"error\",\n      shopCount: 0,\n      recentShops: [],\n    });\n  }\n}\n\nexport default function Index() {\n  const { message, timestamp, dbStatus, shopCount, recentShops } = useLoaderData<typeof loader>();\n\n  return (\n    <div style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.8\", padding: \"20px\" }}>\n      <h1>{message}</h1>\n      <p>Server Time: {timestamp}</p>\n      <p>Database Status: {dbStatus}</p>\n      <p>Registered Shops: {shopCount}</p>\n      <p>Status: OAuth Flow Implemented \u2705</p>\n      \n      <div style={{ marginTop: \"30px\" }}>\n        <h3>Development Tools:</h3>\n        <Link \n          to=\"/test/oauth\"\n          style={{ \n            padding: \"8px 16px\", \n            backgroundColor: \"#007C3B\", \n            color: \"white\", \n            textDecoration: \"none\",\n            borderRadius: \"4px\",\n            marginRight: \"10px\"\n          }}\n        >\n          Test OAuth Flow\n        </Link>\n      </div>\n\n      {recentShops.length > 0 && (\n        <div style={{ marginTop: \"30px\" }}>\n          <h3>Recent Shop Installations:</h3>\n          <ul>\n            {recentShops.map((shop) => (\n              <li key={shop.shopDomain}>\n                {shop.shopDomain} - \n                Installed: {new Date(shop.installedAt).toLocaleString()}\n                {shop.uninstalledAt && ` (Uninstalled: ${new Date(shop.uninstalledAt).toLocaleString()})`}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}", "import { json, type LoaderFunctionArgs } from \"@remix-run/node\";\nimport { useLoaderData, Outlet, useLocation, Link } from \"@remix-run/react\";\nimport { flexibleAuth, logRequest } from \"~/lib/middleware.server\";\nimport { \n  Frame, \n  TopBar, \n  Navigation, \n  Layout,\n  Page,\n  Text,\n  Card,\n  Button\n} from \"@shopify/polaris\";\nimport { useState, useCallback } from \"react\";\n// import AppBridge from \"@shopify/app-bridge-react\";\n// const { Provider } = AppBridge;\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n  const url = new URL(request.url);\n  \n  // Use hardened middleware for authentication\n  const context = await flexibleAuth(request);\n  logRequest(request, context);\n  \n  return json({\n    shop: context.shop,\n    host: url.searchParams.get(\"host\"),\n    appBridgeConfig: {\n      apiKey: process.env.SHOPIFY_API_KEY || \"\",\n      shop: context.shop,\n      host: url.searchParams.get(\"host\") || \"\",\n    }\n  });\n}\n\nexport default function AdminLayout() {\n  const { shop } = useLoaderData<typeof loader>();\n  const location = useLocation();\n  const [mobileNavigationActive, setMobileNavigationActive] = useState(false);\n\n  const toggleMobileNavigationActive = useCallback(\n    () => setMobileNavigationActive((mobileNavigationActive) => !mobileNavigationActive),\n    []\n  );\n\n  const navigationMarkup = (\n    <Navigation location={location.pathname}>\n      <Navigation.Section\n        items={[\n          {\n            url: '/admin',\n            label: 'Overview',\n            icon: 'HomeIcon' as any,\n            selected: location.pathname === '/admin'\n          },\n          {\n            url: '/admin/branding',\n            label: 'Branding',\n            icon: 'ColorIcon' as any,\n            selected: location.pathname === '/admin/branding'\n          }\n        ]}\n      />\n    </Navigation>\n  );\n\n  const topBarMarkup = (\n    <TopBar\n      showNavigationToggle\n      onNavigationToggle={toggleMobileNavigationActive}\n    />\n  );\n\n  const currentPath = location.pathname;\n  const isOverview = currentPath === '/admin' || currentPath === '/admin/';\n\n  return (\n    <Frame\n      topBar={topBarMarkup}\n      navigation={navigationMarkup}\n      showMobileNavigation={mobileNavigationActive}\n      onNavigationDismiss={toggleMobileNavigationActive}\n    >\n      {isOverview ? (\n        <Page title=\"TurnApp Overview\">\n          <Layout>\n            <Layout.Section>\n              <Card>\n                <div style={{ padding: '20px' }}>\n                  <Text variant=\"headingMd\" as=\"h2\">Welcome to TurnApp</Text>\n                  <Text variant=\"bodyMd\" as=\"p\" tone=\"subdued\">\n                    Transform your Shopify store into a mobile shopping app\n                  </Text>\n                  <div style={{ marginTop: '20px' }}>\n                    <Text variant=\"headingSm\" as=\"h3\">Shop: {shop}</Text>\n                  </div>\n                  <div style={{ marginTop: '20px' }}>\n                    <Link to=\"/admin/branding\">\n                      <Button variant=\"primary\">Configure Branding</Button>\n                    </Link>\n                  </div>\n                </div>\n              </Card>\n            </Layout.Section>\n            \n            <Layout.Section variant=\"oneThird\">\n              <Card>\n                <div style={{ padding: '20px' }}>\n                  <Text variant=\"headingSm\" as=\"h3\">Quick Stats</Text>\n                  <div style={{ marginTop: '12px' }}>\n                    <Text variant=\"bodyMd\" as=\"p\">Status: Active</Text>\n                    <Text variant=\"bodyMd\" as=\"p\">App Version: 1.0.0</Text>\n                  </div>\n                </div>\n              </Card>\n            </Layout.Section>\n          </Layout>\n        </Page>\n      ) : (\n        <Outlet />\n      )}\n    </Frame>\n  );\n}", "export default {'entry':{'module':'/build/entry.client-2V7IEL3J.js','imports':['/build/_shared/chunk-XC6BC2BP.js','/build/_shared/chunk-PMI65YMG.js','/build/_shared/chunk-YLJGUPYX.js','/build/_shared/chunk-56LDNGDG.js','/build/_shared/chunk-2Q7FBYOG.js','/build/_shared/chunk-ALN5UVCC.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-6QLAV7O6.js','imports':['/build/_shared/chunk-RRH55SMP.js'],'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-67LPGKLM.js','imports':['/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/admin':{'id':'routes/admin','parentId':'root','path':'admin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin-N2GQHK5D.js','imports':['/build/_shared/chunk-Q4XQCCJX.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/admin.branding':{'id':'routes/admin.branding','parentId':'routes/admin','path':'branding','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin.branding-Z2RHQV6O.js','imports':['/build/_shared/chunk-RRH55SMP.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.admin.products':{'id':'routes/api.admin.products','parentId':'root','path':'api/admin/products','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.admin.products-O44RSELZ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.admin.shop':{'id':'routes/api.admin.shop','parentId':'root','path':'api/admin/shop','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.admin.shop-HY5KR6PZ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.config':{'id':'routes/api.config','parentId':'root','path':'api/config','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.config-F6QT7IN6.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.products':{'id':'routes/api.products','parentId':'root','path':'api/products','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.products-BMEWO7CE.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.settings':{'id':'routes/api.settings','parentId':'root','path':'api/settings','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.settings-C6JUPEZG.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/api.upload':{'id':'routes/api.upload','parentId':'root','path':'api/upload','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.upload-NKI3ERUQ.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/auth.callback':{'id':'routes/auth.callback','parentId':'root','path':'auth/callback','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth.callback-HTHTBQTT.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/auth.install':{'id':'routes/auth.install','parentId':'root','path':'auth/install','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth.install-GWWDNMQD.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/healthz':{'id':'routes/healthz','parentId':'root','path':'healthz','index':undefined,'caseSensitive':undefined,'module':'/build/routes/healthz-47L4ZWTK.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/readiness':{'id':'routes/readiness','parentId':'root','path':'readiness','index':undefined,'caseSensitive':undefined,'module':'/build/routes/readiness-DLJ74LOW.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/test.oauth':{'id':'routes/test.oauth','parentId':'root','path':'test/oauth','index':undefined,'caseSensitive':undefined,'module':'/build/routes/test.oauth-CVOQWQVM.js','imports':['/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/webhooks.app_uninstalled':{'id':'routes/webhooks.app_uninstalled','parentId':'root','path':'webhooks/app_uninstalled','index':undefined,'caseSensitive':undefined,'module':'/build/routes/webhooks.app_uninstalled-QBHIURQQ.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/webhooks.products_update':{'id':'routes/webhooks.products_update','parentId':'root','path':'webhooks/products_update','index':undefined,'caseSensitive':undefined,'module':'/build/routes/webhooks.products_update-JGCI7S77.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'50c4824b','hmr':{'runtime':'/build/_shared/chunk-ALN5UVCC.js','timestamp':1755843916921},'url':'/build/manifest-50C4824B.js'};", "\nimport * as entryServer from \"/Users/zeynel/Desktop/TurnApp/turnapp/node_modules/@remix-run/dev/dist/config/defaults/entry.server.node.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/webhooks.app_uninstalled.tsx\";\nimport * as route2 from \"./routes/webhooks.products_update.tsx\";\nimport * as route3 from \"./routes/api.admin.products.tsx\";\nimport * as route4 from \"./routes/admin.branding.tsx\";\nimport * as route5 from \"./routes/api.admin.shop.tsx\";\nimport * as route6 from \"./routes/auth.callback.tsx\";\nimport * as route7 from \"./routes/api.products.tsx\";\nimport * as route8 from \"./routes/api.settings.tsx\";\nimport * as route9 from \"./routes/auth.install.tsx\";\nimport * as route10 from \"./routes/api.config.tsx\";\nimport * as route11 from \"./routes/api.upload.tsx\";\nimport * as route12 from \"./routes/test.oauth.tsx\";\nimport * as route13 from \"./routes/readiness.tsx\";\nimport * as route14 from \"./routes/healthz.tsx\";\nimport * as route15 from \"./routes/_index.tsx\";\nimport * as route16 from \"./routes/admin.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false,\"v3_routeConfig\":false,\"v3_singleFetch\":false,\"v3_lazyRouteDiscovery\":false,\"unstable_optimizeDeps\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/webhooks.app_uninstalled\": {\n      id: \"routes/webhooks.app_uninstalled\",\n      parentId: \"root\",\n      path: \"webhooks/app_uninstalled\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/webhooks.products_update\": {\n      id: \"routes/webhooks.products_update\",\n      parentId: \"root\",\n      path: \"webhooks/products_update\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/api.admin.products\": {\n      id: \"routes/api.admin.products\",\n      parentId: \"root\",\n      path: \"api/admin/products\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/admin.branding\": {\n      id: \"routes/admin.branding\",\n      parentId: \"routes/admin\",\n      path: \"branding\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/api.admin.shop\": {\n      id: \"routes/api.admin.shop\",\n      parentId: \"root\",\n      path: \"api/admin/shop\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/auth.callback\": {\n      id: \"routes/auth.callback\",\n      parentId: \"root\",\n      path: \"auth/callback\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/api.products\": {\n      id: \"routes/api.products\",\n      parentId: \"root\",\n      path: \"api/products\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/api.settings\": {\n      id: \"routes/api.settings\",\n      parentId: \"root\",\n      path: \"api/settings\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/auth.install\": {\n      id: \"routes/auth.install\",\n      parentId: \"root\",\n      path: \"auth/install\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/api.config\": {\n      id: \"routes/api.config\",\n      parentId: \"root\",\n      path: \"api/config\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/api.upload\": {\n      id: \"routes/api.upload\",\n      parentId: \"root\",\n      path: \"api/upload\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/test.oauth\": {\n      id: \"routes/test.oauth\",\n      parentId: \"root\",\n      path: \"test/oauth\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/readiness\": {\n      id: \"routes/readiness\",\n      parentId: \"root\",\n      path: \"readiness\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/healthz\": {\n      id: \"routes/healthz\",\n      parentId: \"root\",\n      path: \"healthz\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/admin\": {\n      id: \"routes/admin\",\n      parentId: \"root\",\n      path: \"admin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    }\n  };"],
  "mappings": ";;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,SAAS,mBAAmB;AAG5B,SAAS,wCAAwC;AACjD,SAAS,mBAAmB;AAC5B,YAAY,iBAAiB;AAC7B,SAAS,8BAA8B;AA2DjC;AAzDN,IAAM,cAAc;AAEL,SAAR,cACL,SACA,oBACA,iBACA,cACA,aACA;AAIA,SAFE,aAAa,QAAQ,QAAQ,IAAI,YAAY,CAAC,KAAK,aAAa,YAG9D;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACN;AAKA,SAAS,aAAa,WAA0B;AAC9C,SAAK,YAKD,WAAW,eAAe,OAAmB,qBAAU,aACtC,kBAAM,SAAS,IAIhC,aAAa,eAAe,OAAmB,uBAAY,aAC1C,oBAAQ,SAAS,IAG/B,KAbE;AAcX;AAEA,SAAS,iBACP,SACA,oBACA,iBACA,cACA;AACA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,QAAI,gBAAgB,IACd,EAAE,MAAM,MAAM,IAAI;AAAA,MACtB;AAAA,QAAC;AAAA;AAAA,UACC,SAAS;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,YAAY;AAAA;AAAA,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIA;AAAA,MACA;AAAA,QACE,aAAa;AACX,0BAAgB;AAChB,cAAM,OAAO,IAAI,YAAY,GACvB,SAAS,iCAAiC,IAAI;AAEpD,0BAAgB,IAAI,gBAAgB,WAAW,GAE/C;AAAA,YACE,IAAI,SAAS,QAAQ;AAAA,cACnB,SAAS;AAAA,cACT,QAAQ;AAAA,YACV,CAAC;AAAA,UACH,GAEA,KAAK,IAAI;AAAA,QACX;AAAA,QACA,aAAa,OAAgB;AAC3B,iBAAO,KAAK;AAAA,QACd;AAAA,QACA,QAAQ,OAAgB;AACtB,+BAAqB,KAIjB,iBACF,QAAQ,MAAM,KAAK;AAAA,QAEvB;AAAA,MACF;AAAA,IACF;AAEA,eAAW,OAAO,WAAW;AAAA,EAC/B,CAAC;AACH;AAEA,SAAS,qBACP,SACA,oBACA,iBACA,cACA;AACA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,QAAI,gBAAgB,IACd,EAAE,MAAM,MAAM,IAAI;AAAA,MACtB;AAAA,QAAC;AAAA;AAAA,UACC,SAAS;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,YAAY;AAAA;AAAA,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIA;AAAA,MACA;AAAA,QACE,eAAe;AACb,0BAAgB;AAChB,cAAM,OAAO,IAAI,YAAY,GACvB,SAAS,iCAAiC,IAAI;AAEpD,0BAAgB,IAAI,gBAAgB,WAAW,GAE/C;AAAA,YACE,IAAI,SAAS,QAAQ;AAAA,cACnB,SAAS;AAAA,cACT,QAAQ;AAAA,YACV,CAAC;AAAA,UACH,GAEA,KAAK,IAAI;AAAA,QACX;AAAA,QACA,aAAa,OAAgB;AAC3B,iBAAO,KAAK;AAAA,QACd;AAAA,QACA,QAAQ,OAAgB;AACtB,+BAAqB,KAIjB,iBACF,QAAQ,MAAM,KAAK;AAAA,QAEvB;AAAA,MACF;AAAA,IACF;AAEA,eAAW,OAAO,WAAW;AAAA,EAC/B,CAAC;AACH;;;AC1JA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACF;AAEA,SAAS,mBAAmB;AAapB,mBAAAA,eAAA;AAVD,IAAM,OAAqB,MAAM;AAAA,EACxC,EAAE,SAAS,QAAQ;AAAA,EACnB,EAAE,OAAO,gBAAgB;AAAA,EACzB,EAAE,MAAM,YAAY,SAAS,qCAAqC;AAAC;AAGpD,SAAR,MAAuB;AAC5B,SACE,gBAAAA,QAAC,UAAK,MAAK,MACT;AAAA,oBAAAA,QAAC,UACC;AAAA,sBAAAA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,gBAAAA,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SAFT;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,gBAAAA,QAAC,UACC;AAAA,sBAAAA,QAAC,eAAY,MAAM,CAAC,GAAG,OAAM,SAC3B,0BAAAA,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ,KADV;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,gBAAAA,QAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,gBAAAA,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MACT,gBAAAA,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,aAAY;AAAA,SANd;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,OAZF;AAAA;AAAA;AAAA;AAAA,SAaA;AAEJ;;;ACnCA;AAAA;AAAA;AAAA;AAAA,SAAS,YAAqC;;;ACA9C,SAAS,cAAAC,mBAAkB;;;ACQpB,SAAS,iBAA0B;AACxC,SAAO,QAAQ,IAAI,kBAAkB,UAAU;AACjD;AAMO,SAAS,oBAA4B;AAC1C,SAAI,eAAe,KAAK,QAAQ,IAAI,mBAC3B,QAAQ,IAAI,mBAGd,QAAQ,IAAI,WAAW;AAChC;AAiBO,SAAS,gBAAgB,aAA6B;AAC3D,MAAM,UAAU,kBAAkB,GAC5B,YAAY,YAAY,WAAW,GAAG,IAAI,cAAc,IAAI;AAElE,SAAO,GAAG,UAAU;AACtB;;;AClCA,SAAS,qBAAqB;;;ACV9B,SAAS,oBAAoB;AAM7B,IAAI;AAKG,OAAO,WACV,OAAO,SAAS,IAAI,aAAa,IAEnC,SAAS,OAAO,QAChB,OAAO,SAAS;;;ACflB,SAAS,aAAa,gBAAgB,kBAAkB,YAAY,kBAAkB;AAEtF,IAAM,YAAY,eACZ,YAAY,IACZ,aAAa,IACb,cAAc;AAKpB,SAAS,mBAA2B;AAClC,MAAM,SAAS,QAAQ,IAAI;AAE3B,MAAI,QAAQ;AAEV,QAAI,OAAO,WAAW;AAEpB,aAAO,OAAO,KAAK,QAAQ,KAAK;AAC3B;AAEL,UAAMC,QAAO,OAAO,KAAK,0BAA0B,MAAM;AACzD,aAAO,WAAW,QAAQA,OAAM,KAAQ,YAAY,QAAQ;AAAA;AAAA;AAKhE,MAAM,eAAe,kCACf,OAAO,OAAO,KAAK,oBAAoB,MAAM;AACnD,SAAO,WAAW,cAAc,MAAM,KAAO,YAAY,QAAQ;AACnE;AAKO,SAAS,aAAa,WAA2B;AACtD,MAAI,CAAC,aAAa,UAAU,WAAW;AACrC,UAAM,IAAI,MAAM,4BAA4B;AAG9C,MAAI;AACF,QAAM,MAAM,iBAAiB,GACvB,KAAK,YAAY,SAAS,GAE1B,SAAS,eAAe,WAAW,KAAK,EAAE,GAE5C,YAAY,OAAO,OAAO,WAAW,QAAQ,KAAK;AACtD,iBAAa,OAAO,MAAM,KAAK;AAG/B,QAAM,OAAO,WAAW,UAAU,GAAG;AACrC,SAAK,OAAO,EAAE,GACd,KAAK,OAAO,OAAO,KAAK,WAAW,KAAK,CAAC;AACzC,QAAM,UAAU,KAAK,OAAO;AAG5B,WAAO,GAAG,SAAS,KAAK,IAAI,YAAY,QAAQ,SAAS,KAAK;AAAA,EAEhE,SAAS,OAAP;AACA,kBAAQ,MAAM,sBAAsB,KAAK,GACnC,IAAI,MAAM,yBAAyB;AAAA,EAC3C;AACF;AAKO,SAAS,aAAa,YAA4B;AACvD,MAAI;AAEF,QAAI,WAAW,SAAS,YAAY,IAAI,cAAc;AACpD,YAAM,IAAI,MAAM,2BAA2B;AAG7C,QAAM,QAAQ,WAAW,UAAU,GAAG,YAAY,CAAC,GAC7C,UAAU,WAAW,UAAU,WAAW,SAAS,cAAc,CAAC,GAClE,eAAe,WAAW,UAAU,YAAY,GAAG,WAAW,SAAS,cAAc,CAAC,GAEtF,KAAK,OAAO,KAAK,OAAO,KAAK,GAC7B,eAAe,OAAO,KAAK,SAAS,KAAK,GACzC,YAAY,OAAO,KAAK,cAAc,KAAK,GAE3C,MAAM,iBAAiB,GAGvB,OAAO,WAAW,UAAU,GAAG;AAKrC,QAJA,KAAK,OAAO,EAAE,GACd,KAAK,OAAO,SAAS,GAGjB,CAFmB,KAAK,OAAO,EAEf,OAAO,YAAY;AACrC,YAAM,IAAI,MAAM,8BAA8B;AAGhD,QAAM,WAAW,iBAAiB,WAAW,KAAK,EAAE,GAEhD,YAAY,SAAS,OAAO,cAAc,OAAO,MAAM;AAC3D,wBAAa,SAAS,MAAM,MAAM,GAE3B;AAAA,EAET,SAAS,OAAP;AACA,kBAAQ,MAAM,sBAAsB,KAAK,GACnC,IAAI,MAAM,yBAAyB;AAAA,EAC3C;AACF;AAKO,SAAS,aAAsB;AACpC,MAAI;AACF,QAAM,WAAW,2BACX,YAAY,aAAa,QAAQ,GACjC,YAAY,aAAa,SAAS;AAExC,WAAO,aAAa;AAAA,EACtB,SAAS,OAAP;AACA,mBAAQ,MAAM,uBAAuB,KAAK,GACnC;AAAA,EACT;AACF;;;AC1GA,eAAsB,iBAAiB,YAAmD;AACxF,MAAI;AACF,QAAM,OAAO,MAAM,OAAO,KAAK,WAAW;AAAA,MACxC,OAAO,EAAE,WAAW;AAAA,IACtB,CAAC;AAED,QAAI,CAAC,QAAQ,KAAK;AAChB,aAAO;AAIT,QAAM,cAAc,aAAa,KAAK,cAAc;AAEpD,WAAO;AAAA,MACL,YAAY,KAAK;AAAA,MACjB;AAAA,MACA,aAAa,KAAK;AAAA,MAClB,eAAe,KAAK;AAAA,MACpB,UAAU,KAAK,WAAW,KAAK,MAAM,KAAK,QAAQ,IAAI,CAAC;AAAA,IACzD;AAAA,EACF,SAAS,OAAP;AACA,mBAAQ,MAAM,kCAAkC,KAAK,GAC9C;AAAA,EACT;AACF;AAsBA,eAAsB,gBAAgB,YAAyC;AAC7E,MAAI;AACF,QAAM,OAAO,MAAM,OAAO,KAAK,WAAW;AAAA,MACxC,OAAO,EAAE,WAAW;AAAA,MACpB,QAAQ,EAAE,UAAU,IAAM,eAAe,GAAK;AAAA,IAChD,CAAC;AAED,WAAI,CAAC,QAAQ,KAAK,gBACT,OAGF,KAAK,WAAW,KAAK,MAAM,KAAK,QAAQ,IAAI,CAAC;AAAA,EACtD,SAAS,OAAP;AACA,mBAAQ,MAAM,gCAAgC,KAAK,GAC5C;AAAA,EACT;AACF;;;AH9DA,IAAM,oBAAoB,WA4EpB,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAoBb,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAkDjB,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2C5B,SAAS,kBAAkB,YAAoB,aAAoC;AACjF,MAAM,WAAW,WAAW,wBAAwB;AAEpD,SAAO,IAAI,cAAc,UAAU;AAAA,IACjC,SAAS;AAAA,MACP,0BAA0B;AAAA,MAC1B,gBAAgB;AAAA,MAChB,QAAU;AAAA,IACZ;AAAA;AAAA,IAEA,aAAa;AAAA,EACf,CAAC;AACH;AAKA,eAAsB,YAAY,YAA8C;AAC9E,MAAI;AACF,QAAM,WAAW,MAAM,iBAAiB,UAAU;AAClD,QAAI,CAAC;AACH,qBAAQ,MAAM,+BAA+B,UAAU,GAChD;AAKT,QAAM,WAAW,MAFF,kBAAkB,YAAY,SAAS,WAAW,EAEnC,QAA4B,UAAU;AAEpE,WAAK,SAAS,OAKP,SAAS,QAJd,QAAQ,MAAM,sCAAsC,GAC7C;AAAA,EAKX,SAAS,OAAP;AACA,mBAAQ,MAAM,4BAA4B,KAAK,GAE3C,iBAAiB,SAAS,MAAM,QAAQ,SAAS,KAAK,KACxD,QAAQ,MAAM,6CAA6C,UAAU,GAGhE;AAAA,EACT;AACF;AAKA,eAAsB,mBAAmB,YAAsC;AAC7E,MAAI;AACF,QAAM,WAAW,MAAM,YAAY,UAAU;AAE7C,WAAK,WAKD,SAAS,oBAAoB,cAC/B,QAAQ,MAAM,yBAAyB;AAAA,MACrC,UAAU;AAAA,MACV,QAAQ,SAAS;AAAA,IACnB,CAAC,GACM,OAGT,QAAQ,IAAI,+BAA+B;AAAA,MACzC,MAAM,SAAS;AAAA,MACf,QAAQ,SAAS;AAAA,MACjB,MAAM,SAAS,KAAK;AAAA,IACtB,CAAC,GAEM,MAlBE;AAAA,EAoBX,SAAS,OAAP;AACA,mBAAQ,MAAM,2BAA2B,KAAK,GACvC;AAAA,EACT;AACF;AAKA,eAAsB,iBACpB,YACA,QAAgB,IAChB,OACwF;AACxF,MAAI;AACF,QAAM,WAAW,MAAM,iBAAiB,UAAU;AAClD,QAAI,CAAC;AACH,YAAM,IAAI,MAAM,4BAA4B;AAG9C,QAAM,SAAS,kBAAkB,YAAY,SAAS,WAAW,GAE3D,YAAY,EAAE,OAAO,GAAI,SAAS,EAAE,MAAM,EAAG,GAC7C,WAAW,MAAM,OAAO,QAQ3B,gBAAgB,SAAS;AAI5B,WAAO;AAAA,MACL,UAHe,SAAS,SAAS,MAAM,IAAI,UAAQ,KAAK,IAAI;AAAA,MAI5D,aAAa,SAAS,SAAS,SAAS;AAAA,MACxC,WAAW,SAAS,SAAS,SAAS;AAAA,IACxC;AAAA,EAEF,SAAS,OAAP;AAGA,QAFA,QAAQ,MAAM,iCAAiC,KAAK,GAEhD,iBAAiB,OAAO;AAE1B,UAAI,MAAM,QAAQ,SAAS,KAAK;AAC9B,cAAM,IAAI,MAAM,iCAAiC;AAGnD,UAAI,MAAM,QAAQ,SAAS,KAAK;AAC9B,cAAM,IAAI,MAAM,4BAA4B;AAG9C,UAAI,MAAM,QAAQ,SAAS,KAAK;AAC9B,cAAM,IAAI,MAAM,+BAA+B;AAAA;AAInD,WAAO;AAAA,EACT;AACF;AAKA,eAAsB,gBACpB,YACA,WAC8B;AAC9B,MAAI;AACF,QAAM,WAAW,MAAM,iBAAiB,UAAU;AAClD,QAAI,CAAC;AACH,YAAM,IAAI,MAAM,4BAA4B;AAU9C,YALiB,MAFF,kBAAkB,YAAY,SAAS,WAAW,EAEnC;AAAA,MAC5B;AAAA,MACA,EAAE,IAAI,UAAU;AAAA,IAClB,GAEgB;AAAA,EAElB,SAAS,OAAP;AACA,mBAAQ,MAAM,gCAAgC,KAAK,GAC5C;AAAA,EACT;AACF;AAKO,SAAS,qBAAqB,OAAkC;AACrE,MAAI;AACF,WAAI,OAAO,UAAU,YAAY,OACxB;AAAA,MACL,oBAAoB,MAAM,SAAS,WAAW,KAAK;AAAA,MACnD,iBAAiB,MAAM,SAAS,WAAW,KAAK;AAAA,MAChD,gBAAgB,MAAM,SAAS,WAAW,KAAK;AAAA,IACjD,IAEK;AAAA,EACT,QAAE;AACA,WAAO;AAAA,EACT;AACF;AAKA,eAAsB,cACpB,WACA,aAAqB,GACT;AACZ,MAAI;AAEJ,WAAS,UAAU,GAAG,WAAW,YAAY;AAC3C,QAAI;AACF,aAAO,MAAM,UAAU;AAAA,IACzB,SAAS,OAAP;AAIA,UAHA,YAAY,OAGR,CAAC,SAAS,CAAC,MAAM,SAAS,EAAE,SAAS,KAAK;AAC5C,cAAM;AAGR,UAAI,YAAY;AACd,cAAM,IAAI,MAAM,wBAAwB,UAAU,SAAS;AAI7D,UAAM,gBAAgB,qBAAqB,KAAK,GAG1C,YAAY,KAAK,IAAI,GAAG,OAAO,IAAI,KACnC,SAAS,KAAK,OAAO,IAAI,KACzB,QAAQ,YAAY;AAE1B,cAAQ,IAAI,+BAA+B,KAAK,MAAM,KAAK,gBAAgB,UAAU,KAAK,aAAa,IAAI,GAEvG,iBACF,QAAQ,IAAI,oBAAoB;AAAA,QAC9B,WAAW,cAAc,eAAe;AAAA,QACxC,SAAS,cAAc,eAAe;AAAA,QACtC,aAAa,cAAc,eAAe;AAAA,MAC5C,CAAC,GAGH,MAAM,IAAI,QAAQ,aAAW,WAAW,SAAS,KAAK,CAAC;AAAA,IACzD;AAGF,QAAM;AACR;;;AF9aO,SAAS,kBACd,MACA,YACA,QACS;AACT,MAAM,aAAa,OAAO,QAAS,WAAW,OAAO,KAAK,SAAS,MAAM,GACnE,iBAAiBC,YAAW,UAAU,MAAM,EAC/C,OAAO,YAAY,MAAM,EACzB,OAAO,QAAQ,GAEZ,eAAe,WAAW,QAAQ,WAAW,EAAE;AAGrD,SAAO;AAAA,IACL,OAAO,KAAK,gBAAgB,QAAQ;AAAA,IACpC,OAAO,KAAK,cAAc,QAAQ;AAAA,EACpC;AACF;AAEA,SAAS,gBAAgB,GAAW,GAAoB;AACtD,MAAI,EAAE,WAAW,EAAE;AACjB,WAAO;AAGT,MAAI,SAAS;AACb,WAAS,IAAI,GAAG,IAAI,EAAE,QAAQ;AAC5B,cAAU,EAAE,CAAC,IAAI,EAAE,CAAC;AAGtB,SAAO,WAAW;AACpB;AAQA,eAAsB,iBACpB,MACA,aACA,SACe;AAGf,MAAI,CADgB,MAAM,mBAAmB,IAAI,GAC/B;AAChB,YAAQ,MAAM,0DAA0D,IAAI;AAC5E;AAAA;AAIF,MAAM,oBAAoB,CAACC,UACrB,UACK,GAAG,UAAUA,UAEf,gBAAgBA,KAAI,GAGvB,WAAkC;AAAA,IACtC;AAAA,MACE,OAAO;AAAA,MACP,SAAS,kBAAkB,2BAA2B;AAAA,MACtD,QAAQ;AAAA,IACV;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,SAAS,kBAAkB,2BAA2B;AAAA,MACtD,QAAQ;AAAA,IACV;AAAA,EACF;AAEA,WAAW,WAAW;AACpB,QAAI;AACF,UAAM,WAAW,MAAM,MAAM,WAAW,wCAAwC;AAAA,QAC9E,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,0BAA0B;AAAA,QAC5B;AAAA,QACA,MAAM,KAAK,UAAU,EAAE,QAAQ,CAAC;AAAA,MAClC,CAAC;AAED,UAAI,SAAS,IAAI;AACf,YAAM,SAAS,MAAM,SAAS,KAAK;AACnC,gBAAQ,IAAI,uBAAuB,QAAQ,SAAS,OAAO,SAAS,EAAE;AAAA,aACjE;AACL,YAAM,QAAQ,MAAM,SAAS,KAAK;AAClC,gBAAQ,MAAM,8BAA8B,QAAQ,UAAU,KAAK;AAAA;AAAA,IAEvE,SAAS,OAAP;AACA,cAAQ,MAAM,6BAA6B,QAAQ,UAAU,KAAK;AAAA,IACpE;AAEJ;;;AD7FA,eAAsB,OAAO,EAAE,QAAQ,GAAuB;AAC5D,MAAI,QAAQ,WAAW;AACrB,WAAO,KAAK,EAAE,OAAO,qBAAqB,GAAG,EAAE,QAAQ,IAAI,CAAC;AAG9D,MAAM,aAAa,QAAQ,QAAQ,IAAI,uBAAuB,GACxD,aAAa,QAAQ,QAAQ,IAAI,uBAAuB;AAE9D,MAAI,CAAC,cAAc,CAAC;AAClB,mBAAQ,MAAM,kCAAkC,GACzC,KAAK,EAAE,OAAO,kBAAkB,GAAG,EAAE,QAAQ,IAAI,CAAC;AAI3D,MAAM,OAAO,MAAM,QAAQ,KAAK,GAG1B,YAAY,QAAQ,IAAI;AAC9B,MAAI,CAAC;AACH,mBAAQ,MAAM,4BAA4B,GACnC,KAAK,EAAE,OAAO,6BAA6B,GAAG,EAAE,QAAQ,IAAI,CAAC;AAGtE,MAAI,CAAC,kBAAkB,MAAM,YAAY,SAAS;AAChD,mBAAQ,MAAM,8CAA8C,UAAU,GAC/D,KAAK,EAAE,OAAO,oBAAoB,GAAG,EAAE,QAAQ,IAAI,CAAC;AAG7D,MAAI;AAEF,QAAM,UAAU,KAAK,MAAM,IAAI;AAC/B,YAAQ,IAAI,qCAAqC;AAAA,MAC/C,MAAM;AAAA,MACN,QAAQ,QAAQ;AAAA,MAChB,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,IACpC,CAAC;AAGD,QAAM,cAAc,MAAM,OAAO,KAAK,OAAO;AAAA,MAC3C,OAAO,EAAE,WAAW;AAAA,MACpB,MAAM;AAAA,QACJ,eAAe,oBAAI,KAAK;AAAA;AAAA;AAAA,MAG1B;AAAA,IACF,CAAC;AAED,mBAAQ,IAAI,kCAAkC;AAAA,MAC5C;AAAA,MACA,aAAa,YAAY;AAAA,MACzB,eAAe,YAAY;AAAA,IAC7B,CAAC,GAGM,KAAK,EAAE,QAAQ,KAAK,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,EAE/C,SAAS,OAAP;AAIA,WAHA,QAAQ,MAAM,2CAA2C,KAAK,GAG1D,iBAAiB,cACZ,KAAK,EAAE,QAAQ,KAAK,GAAG,EAAE,QAAQ,IAAI,CAAC,IAIxC,KAAK,EAAE,OAAO,iBAAiB,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,EAC1D;AACF;;;AOvEA;AAAA;AAAA,gBAAAC;AAAA;AAAA,SAAS,QAAAC,aAAqC;AAG9C,eAAsBC,QAAO,EAAE,QAAQ,GAAuB;AAC5D,MAAI,QAAQ,WAAW;AACrB,WAAOC,MAAK,EAAE,OAAO,qBAAqB,GAAG,EAAE,QAAQ,IAAI,CAAC;AAG9D,MAAM,aAAa,QAAQ,QAAQ,IAAI,uBAAuB,GACxD,aAAa,QAAQ,QAAQ,IAAI,uBAAuB;AAE9D,MAAI,CAAC,cAAc,CAAC;AAClB,mBAAQ,MAAM,kCAAkC,GACzCA,MAAK,EAAE,OAAO,kBAAkB,GAAG,EAAE,QAAQ,IAAI,CAAC;AAI3D,MAAM,OAAO,MAAM,QAAQ,KAAK,GAG1B,YAAY,QAAQ,IAAI;AAC9B,MAAI,CAAC;AACH,mBAAQ,MAAM,4BAA4B,GACnCA,MAAK,EAAE,OAAO,6BAA6B,GAAG,EAAE,QAAQ,IAAI,CAAC;AAGtE,MAAI,CAAC,kBAAkB,MAAM,YAAY,SAAS;AAChD,mBAAQ,MAAM,8CAA8C,UAAU,GAC/DA,MAAK,EAAE,OAAO,oBAAoB,GAAG,EAAE,QAAQ,IAAI,CAAC;AAG7D,MAAI;AAEF,QAAM,UAAU,KAAK,MAAM,IAAI;AAC/B,mBAAQ,IAAI,qCAAqC;AAAA,MAC/C,MAAM;AAAA,MACN,WAAW,QAAQ;AAAA,MACnB,cAAc,QAAQ;AAAA,MACtB,WAAW,QAAQ;AAAA,MACnB,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,IACpC,CAAC,GASD,QAAQ,IAAI,uCAAuC,UAAU,GAGtDA,MAAK,EAAE,QAAQ,KAAK,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,EAE/C,SAAS,OAAP;AAIA,WAHA,QAAQ,MAAM,6CAA6C,KAAK,GAG5D,iBAAiB,cACZA,MAAK,EAAE,QAAQ,KAAK,GAAG,EAAE,QAAQ,IAAI,CAAC,IAIxCA,MAAK,EAAE,OAAO,iBAAiB,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,EAC1D;AACF;;;ACjEA;AAAA;AAAA;AAAA;AACA,SAAS,QAAAC,aAAY;;;ACDrB,SAAS,cAAAC,mBAAkB;AAiB3B,SAAS,UAAU,OAAoB;AACrC,MAAI;AACF,QAAM,QAAQ,MAAM,MAAM,GAAG;AAC7B,QAAI,MAAM,WAAW;AACnB,YAAM,IAAI,MAAM,oBAAoB;AAItC,QAAM,UAAU,MAAM,CAAC,GACjB,UAAU,OAAO,KAAK,SAAS,WAAW,EAAE,SAAS,MAAM;AACjE,WAAO,KAAK,MAAM,OAAO;AAAA,EAC3B,SAAS,OAAP;AACA,mBAAQ,MAAM,sBAAsB,KAAK,GAClC;AAAA,EACT;AACF;AAKA,SAAS,mBAAmB,OAAe,QAAyB;AAClE,MAAI;AACF,QAAM,QAAQ,MAAM,MAAM,GAAG;AAC7B,QAAI,MAAM,WAAW;AAAG,aAAO;AAE/B,QAAM,CAAC,QAAQ,SAAS,SAAS,IAAI,OAG/B,OAAO,GAAG,UAAU,WACpB,oBAAoBA,YAAW,UAAU,MAAM,EAClD,OAAO,IAAI,EACX,OAAO,WAAW;AAErB,WAAO,cAAc;AAAA,EACvB,SAAS,OAAP;AACA,mBAAQ,MAAM,sCAAsC,KAAK,GAClD;AAAA,EACT;AACF;AAKO,SAAS,mBAAmB,OAA2C;AAC5E,MAAI;AACF,QAAM,YAAY,QAAQ,IAAI;AAC9B,QAAI,CAAC;AACH,qBAAQ,MAAM,4BAA4B,GACnC;AAIT,QAAI,CAAC,mBAAmB,OAAO,SAAS;AACtC,qBAAQ,MAAM,6CAA6C,GACpD;AAIT,QAAM,UAAU,UAAU,KAAK;AAC/B,WAAK,UAKD,CAAC,QAAQ,OAAO,CAAC,QAAQ,QAAQ,CAAC,QAAQ,OAC5C,QAAQ,MAAM,gDAAgD,GACvD,QAIL,QAAQ,QAAQ,QAAQ,QAC1B,QAAQ,MAAM,yCAAyC,GAChD,QAIL,QAAQ,OAAO,QAAQ,MAAM,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI,KAC3D,QAAQ,MAAM,uBAAuB,GAC9B,QAGF,UArBE;AAAA,EAuBX,SAAS,OAAP;AACA,mBAAQ,MAAM,sCAAsC,KAAK,GAClD;AAAA,EACT;AACF;AAaO,SAAS,0BAA0B;AACxC,SAAO,OAAO,YAAqF;AACjG,QAAM,qBAAqB,QAAQ,QAAQ,IAAI,yBAAyB;AAExE,QAAI,CAAC;AACH,aAAO;AAGT,QAAM,UAAU,mBAAmB,kBAAkB;AACrD,WAAK,UAIE;AAAA,MACL,MAAM,QAAQ;AAAA,MACd;AAAA,IACF,IANS;AAAA,EAOX;AACF;AAKA,eAAsB,oBAAoB,SAA2E;AAEnH,MAAM,UAAU,MADG,wBAAwB,EACV,OAAO;AAExC,MAAI,CAAC;AACH,UAAM,IAAI,SAAS,mDAAmD;AAAA,MACpE,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,MAClB;AAAA,IACF,CAAC;AAGH,SAAO;AACT;AAKA,eAAsB,mBAAmB,SAAkF;AAEzH,SAAO,MADY,wBAAwB,EACnB,OAAO;AACjC;;;ACpGO,SAAS,oBAA4B;AAC1C,SAAO,OAAO,KAAK,IAAI,KAAK,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,OAAO,GAAG,CAAC;AACpE;AAKA,eAAsB,sBAA+C;AACnE,MAAI;AACF,QAAM,YAAY,KAAK,IAAI,GAGrB,YAAY,MAAM,OAAO,KAAK,MAAM,GAEpC,UAAU,KAAK,IAAI,IAAI;AAE7B,WAAO;AAAA,MACL,WAAW;AAAA,MACX,OAAO;AAAA,MACP;AAAA,IACF;AAAA,EACF,SAAS,OAAP;AACA,mBAAQ,MAAM,iCAAiC,KAAK,GAC7C;AAAA,MACL,WAAW;AAAA,MACX,OAAO;AAAA,IACT;AAAA,EACF;AACF;AAKA,eAAsB,oBAA2C;AAC/D,MAAI;AAEF,WAAO;AAAA,MACL,SAFgB,MAAM,WAAW;AAAA,IAGnC;AAAA,EACF,SAAS,OAAP;AACA,mBAAQ,MAAM,+BAA+B,KAAK,GAC3C;AAAA,MACL,SAAS;AAAA,IACX;AAAA,EACF;AACF;AAKA,eAAsB,mBAAmB,iBAA0B,IAA2B;AAC5F,MAAI;AACF,QAAM,aAAY,oBAAI,KAAK,GAAE,YAAY;AAEzC,QAAI,CAAC;AAEH,aAAO;AAAA,QACL,QAAQ;AAAA,QACR;AAAA,MACF;AAIF,QAAM,CAAC,gBAAgB,YAAY,IAAI,MAAM,QAAQ,WAAW;AAAA,MAC9D,oBAAoB;AAAA,MACpB,kBAAkB;AAAA,IACpB,CAAC,GAEK,WAAW,eAAe,WAAW,cAAc,eAAe,QAAQ,EAAE,WAAW,IAAO,OAAO,EAAE,GACvG,qBAAqB,aAAa,WAAW,cAAc,aAAa,QAAQ,EAAE,SAAS,GAAM,GAGjG,YAAY,SAAS,aAAa,mBAAmB,SAErD,SAAoB;AAAA,MACxB,QAAQ,YAAY,YAAY;AAAA,MAChC;AAAA,MACA,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,SAAS,QAAQ,IAAI,uBAAuB;AAAA,IAC9C;AAEA,QAAI,CAAC,WAAW;AACd,UAAM,SAAmB,CAAC;AAC1B,MAAK,SAAS,aAAW,OAAO,KAAK,4BAA4B,GAC5D,mBAAmB,WAAS,OAAO,KAAK,sBAAsB,GAEnE,OAAO,QAAQ,wBAAwB,OAAO,KAAK,IAAI;AAAA;AAGzD,WAAO;AAAA,EAET,SAAS,OAAP;AACA,mBAAQ,MAAM,wBAAwB,KAAK,GAEpC;AAAA,MACL,QAAQ;AAAA,MACR,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,OAAO,iBAAiB,QAAQ,MAAM,UAAU;AAAA,IAClD;AAAA,EACF;AACF;AAKA,eAAsB,iBAAqC;AACzD,MAAI;AAEF,QAAM,CAAC,gBAAgB,YAAY,IAAI,MAAM,QAAQ,IAAI;AAAA,MACvD,oBAAoB;AAAA,MACpB,kBAAkB;AAAA,IACpB,CAAC,GAEK,UAAU,eAAe,aAAa,aAAa;AAEzD,WAAO;AAAA,MACL,QAAQ,UAAU,YAAY;AAAA,MAC9B,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,OAAO,UAAU,SAAY;AAAA,IAC/B;AAAA,EAEF,SAAS,OAAP;AACA,mBAAQ,MAAM,2BAA2B,KAAK,GAEvC;AAAA,MACL,QAAQ;AAAA,MACR,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,OAAO,iBAAiB,QAAQ,MAAM,UAAU;AAAA,IAClD;AAAA,EACF;AACF;AAKO,SAAS,WACd,SACA,SACA,SACM;AACN,MAAI;AACF,QAAM,YAAY,QAAQ,QAAQ,IAAI,cAAc,KAAK,kBAAkB,GACrE,MAAM,IAAI,IAAI,QAAQ,GAAG,GAEzB,WAAuB;AAAA,MAC3B;AAAA,MACA,QAAQ,QAAQ;AAAA,MAChB,KAAK,IAAI,WAAW,IAAI;AAAA,MACxB,WAAW,QAAQ,QAAQ,IAAI,YAAY,KAAK;AAAA,MAChD,IAAI,QAAQ,QAAQ,IAAI,iBAAiB,KAAK,QAAQ,QAAQ,IAAI,WAAW,KAAK;AAAA,MAClF,YAAY,SAAS;AAAA,MACrB,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,UAAU,SAAS;AAAA,MACnB,YAAY,SAAS;AAAA,MACrB,OAAO,SAAS;AAAA,IAClB;AAGA,YAAQ,IAAI,KAAK,UAAU,UAAU,MAAM,CAAC,CAAC;AAAA,EAE/C,SAAS,OAAP;AACA,YAAQ,MAAM,0BAA0B,KAAK;AAAA,EAC/C;AACF;AAKO,SAAS,sBACd,SACA,SACA,SACM;AACN,aAAW,SAAS,SAAS,OAAO;AACtC;;;AChOA,eAAsB,eAAe,SAA2C;AAC9E,MAAI;AACF,QAAM,iBAAiB,MAAM,oBAAoB,OAAO,GAGlD,aAAa,MAAM,OAAO,KAAK,WAAW;AAAA,MAC9C,OAAO,EAAE,YAAY,eAAe,KAAK;AAAA,IAC3C,CAAC;AAED,QAAI,CAAC;AACH,oBAAQ,MAAM,+BAA+B,eAAe,MAAM,GAC5D,IAAI;AAAA,QACR,KAAK,UAAU;AAAA,UACb,OAAO;AAAA,UACP,MAAM;AAAA,QACR,CAAC;AAAA,QACD;AAAA,UACE,QAAQ;AAAA,UACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,QAChD;AAAA,MACF;AAGF,QAAI,WAAW;AACb,oBAAQ,MAAM,qBAAqB,eAAe,MAAM,GAClD,IAAI;AAAA,QACR,KAAK,UAAU;AAAA,UACb,OAAO;AAAA,UACP,MAAM;AAAA,QACR,CAAC;AAAA,QACD;AAAA,UACE,QAAQ;AAAA,UACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,QAChD;AAAA,MACF;AAGF,WAAO;AAAA,MACL,MAAM,eAAe;AAAA,MACrB,SAAS,eAAe;AAAA,MACxB;AAAA,IACF;AAAA,EAEF,SAAS,OAAP;AAEA,UAAI,iBAAiB,WACb,SAGR,QAAQ,MAAM,6BAA6B,KAAK,GAC1C,IAAI;AAAA,MACR,KAAK,UAAU;AAAA,QACb,OAAO;AAAA,QACP,MAAM;AAAA,MACR,CAAC;AAAA,MACD;AAAA,QACE,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAChD;AAAA,IACF;AAAA,EACF;AACF;AAuCA,eAAsB,aAAa,SAA2C;AAC5E,MAAI;AAEF,QAAM,iBAAiB,MAAM,mBAAmB,OAAO;AAEvD,QAAI,gBAAgB;AAElB,UAAMC,cAAa,MAAM,OAAO,KAAK,WAAW;AAAA,QAC9C,OAAO,EAAE,YAAY,eAAe,KAAK;AAAA,MAC3C,CAAC;AAED,UAAI,CAACA,eAAcA,YAAW;AAC5B,cAAM,IAAI;AAAA,UACR,KAAK,UAAU;AAAA,YACb,OAAO;AAAA,YACP,MAAM;AAAA,UACR,CAAC;AAAA,UACD;AAAA,YACE,QAAQ;AAAA,YACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,UAChD;AAAA,QACF;AAGF,aAAO;AAAA,QACL,MAAM,eAAe;AAAA,QACrB,SAAS,eAAe;AAAA,QACxB,YAAAA;AAAA,MACF;AAAA;AAKF,QAAM,YADM,IAAI,IAAI,QAAQ,GAAG,EACT,aAAa,IAAI,MAAM;AAE7C,QAAI,CAAC;AACH,YAAM,IAAI;AAAA,QACR,KAAK,UAAU;AAAA,UACb,OAAO;AAAA,UACP,MAAM;AAAA,QACR,CAAC;AAAA,QACD;AAAA,UACE,QAAQ;AAAA,UACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,QAChD;AAAA,MACF;AAIF,QAAI,CAAC,UAAU,SAAS,gBAAgB;AACtC,YAAM,IAAI;AAAA,QACR,KAAK,UAAU;AAAA,UACb,OAAO;AAAA,UACP,MAAM;AAAA,QACR,CAAC;AAAA,QACD;AAAA,UACE,QAAQ;AAAA,UACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,QAChD;AAAA,MACF;AAIF,QAAM,aAAa,MAAM,OAAO,KAAK,WAAW;AAAA,MAC9C,OAAO,EAAE,YAAY,UAAU;AAAA,IACjC,CAAC;AAED,QAAI,CAAC,cAAc,WAAW;AAC5B,YAAM,IAAI;AAAA,QACR,KAAK,UAAU;AAAA,UACb,OAAO;AAAA,UACP,MAAM;AAAA,QACR,CAAC;AAAA,QACD;AAAA,UACE,QAAQ;AAAA,UACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,QAChD;AAAA,MACF;AAGF,WAAO;AAAA,MACL,MAAM;AAAA,MACN,SAAS;AAAA;AAAA,MACT;AAAA,IACF;AAAA,EAEF,SAAS,OAAP;AACA,UAAI,iBAAiB,WACb,SAGR,QAAQ,MAAM,mCAAmC,KAAK,GAChD,IAAI;AAAA,MACR,KAAK,UAAU;AAAA,QACb,OAAO;AAAA,QACP,MAAM;AAAA,MACR,CAAC;AAAA,MACD;AAAA,QACE,QAAQ;AAAA,QACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,MAChD;AAAA,IACF;AAAA,EACF;AACF;AAcO,SAASC,YAAW,SAAkB,SAAgC;AAC3E,wBAAsB,SAAS,OAAO;AACxC;;;AC1OA,SAAS,SAAS;AAGX,IAAM,mBAAmB,EAAE,OAAO,EACtC,MAAM,gCAAgC,4BAA4B,GAExD,iBAAiB,EAAE,OAAO,EACpC,MAAM,mBAAmB,0BAA0B,GAEzC,YAAY,EAAE,OAAO,EAC/B,OAAO,CAAC,QAAQ;AACf,MAAI,QAAQ;AAAI,WAAO;AACvB,MAAI;AACF,QAAM,SAAS,IAAI,IAAI,GAAG;AAE1B,WAAO,CAAC,CAAC,eAAe,SAAS,aAAa,SAAS,MAAM,EAAE,SAAS,OAAO,QAAQ;AAAA,EACzF,QAAE;AACA,WAAO;AAAA,EACT;AACF,GAAG,uBAAuB,EACzB,SAAS,EACT,GAAG,EAAE,QAAQ,EAAE,CAAC,GAGN,yBAAyB,EAAE,OAAO;AAAA,EAC7C,WAAW,EAAE,OAAO,EACjB,IAAI,GAAG,wBAAwB,EAC/B,IAAI,IAAI,qBAAqB,EAC7B,MAAM,uBAAuB,wCAAwC;AAAA,EACxE,cAAc;AAAA,EACd,SAAS;AAAA,EACT,SAAS,EAAE,OAAO,EACf,IAAI,KAAK,kBAAkB,EAC3B,SAAS,EACT,GAAG,EAAE,QAAQ,EAAE,CAAC;AACrB,CAAC,GAGY,uBAAuB,EAAE,OAAO;AAAA,EAC3C,MAAM;AAAA,EACN,UAAU;AAAA,EACV,oBAAoB,EAAE,OAAO,EAAE,IAAI,6BAA6B;AAAA,EAChE,YAAY,EAAE,OAAO,EAAE,MAAM,mBAAmB,wBAAwB;AAC1E,CAAC,GAGY,sBAAsB,EAAE,OAAO;AAAA,EAC1C,MAAM,EAAE,KAAK,CAAC,QAAQ,QAAQ,GAAG;AAAA,IAC/B,UAAU,OAAO,EAAE,SAAS,wCAAwC;AAAA,EACtE,CAAC;AACH,CAAC,GAGY,uBAAuB,EAAE,OAAO;AAAA,EAC3C,SAAS,EAAE,QAAQ;AAAA,EACnB,OAAO,EAAE,OAAO;AAAA,IACd,IAAI,EAAE,OAAO,EAAE,KAAK;AAAA,IACpB,MAAM,EAAE,KAAK,CAAC,QAAQ,QAAQ,CAAC;AAAA,IAC/B,KAAK,EAAE,OAAO,EAAE,IAAI;AAAA,IACpB,UAAU,EAAE,OAAO;AAAA,EACrB,CAAC,EAAE,SAAS;AAAA,EACZ,SAAS,EAAE,OAAO,EAAE,SAAS;AAAA,EAC7B,OAAO,EAAE,OAAO,EAAE,SAAS;AAC7B,CAAC,GAGY,sBAAsB,EAAE,OAAO;AAAA,EAC1C,OAAO,EAAE,OAAO;AAAA,EAChB,MAAM,EAAE,OAAO,EAAE,SAAS;AAAA,EAC1B,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE,SAAS;AACzC,CAAC,GAGY,uBAAuB,EAAE,OAAO;AAAA,EAC3C,WAAW,EAAE,OAAO,EACjB,IAAI,GAAG,wBAAwB,EAC/B,IAAI,IAAI,qBAAqB,EAC7B,SAAS;AAAA,EACZ,cAAc,eAAe,SAAS;AAAA,EACtC,SAAS,UAAU,SAAS;AAAA,EAC5B,SAAS,EAAE,OAAO,EACf,IAAI,KAAK,kBAAkB,EAC3B,SAAS;AACd,CAAC,GAGY,uBAAuB,EAAE,OAAO;AAAA,EAC3C,QAAQ,EAAE,KAAK,CAAC,WAAW,WAAW,CAAC;AAAA,EACvC,WAAW,EAAE,OAAO;AAAA,EACpB,UAAU,EAAE,OAAO;AAAA,IACjB,WAAW,EAAE,QAAQ;AAAA,IACrB,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY;AAAA,IACpC,SAAS,EAAE,OAAO,EAAE,SAAS;AAAA,EAC/B,CAAC,EAAE,SAAS;AAAA,EACZ,QAAQ,EAAE,OAAO;AAAA,IACf,SAAS,EAAE,QAAQ;AAAA,EACrB,CAAC,EAAE,SAAS;AAAA,EACZ,SAAS,EAAE,OAAO,EAAE,SAAS;AAAA,EAC7B,OAAO,EAAE,OAAO,EAAE,SAAS;AAC7B,CAAC;AAgBM,IAAM,uBAAuB,CAAC,SAAkB;AACrD,MAAI;AACF,WAAO,uBAAuB,MAAM,IAAI;AAAA,EAC1C,SAAS,OAAP;AACA,QAAI,iBAAiB,EAAE,UAAU;AAC/B,UAAM,cAAc,MAAM,OAAO;AAAA,QAAI,SACnC,GAAG,IAAI,KAAK,KAAK,GAAG,MAAM,IAAI;AAAA,MAChC,EAAE,KAAK,IAAI;AACX,YAAM,IAAI,MAAM,sBAAsB,aAAa;AAAA;AAErD,UAAM;AAAA,EACR;AACF,GAEa,sBAAsB,CAAC,SAAiB,MAAe,aAC3D;AAAA,EACL,OAAO;AAAA,EACP;AAAA,EACA;AACF,IAIW,gBAAgB,EAAE,OAAO;AAAA,EACpC,IAAI,EAAE,OAAO;AAAA,EACb,OAAO,EAAE,OAAO;AAAA,EAChB,QAAQ,EAAE,OAAO;AAAA,EACjB,aAAa,EAAE,OAAO;AAAA,EACtB,OAAO,EAAE,OAAO,EAAE,SAAS;AAAA,EAC3B,QAAQ,EAAE,MAAM,EAAE,OAAO;AAAA,IACvB,KAAK,EAAE,OAAO,EAAE,IAAI;AAAA,IACpB,SAAS,EAAE,OAAO,EAAE,SAAS;AAAA,EAC/B,CAAC,CAAC;AAAA,EACF,OAAO,EAAE,OAAO;AAAA,IACd,QAAQ,EAAE,OAAO;AAAA,IACjB,UAAU,EAAE,OAAO,EAAE,OAAO,CAAC;AAAA;AAAA,EAC/B,CAAC;AAAA,EACD,UAAU,EAAE,MAAM,EAAE,OAAO;AAAA,IACzB,IAAI,EAAE,OAAO;AAAA,IACb,OAAO,EAAE,OAAO;AAAA,IAChB,OAAO,EAAE,OAAO;AAAA,MACd,QAAQ,EAAE,OAAO;AAAA,MACjB,cAAc,EAAE,OAAO,EAAE,OAAO,CAAC;AAAA,IACnC,CAAC;AAAA,IACD,gBAAgB,EAAE,OAAO;AAAA,MACvB,QAAQ,EAAE,OAAO;AAAA,MACjB,cAAc,EAAE,OAAO,EAAE,OAAO,CAAC;AAAA,IACnC,CAAC,EAAE,SAAS;AAAA,IACZ,WAAW,EAAE,QAAQ;AAAA,EACvB,CAAC,CAAC;AACJ,CAAC,GAEY,yBAAyB,EAAE,OAAO;AAAA,EAC7C,UAAU,EAAE,MAAM,aAAa;AAAA,EAC/B,UAAU,EAAE,OAAO;AAAA,IACjB,aAAa,EAAE,QAAQ;AAAA,IACvB,iBAAiB,EAAE,QAAQ;AAAA,EAC7B,CAAC;AAAA,EACD,MAAM;AAAA,EACN,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY;AACtC,CAAC,GAGY,4BAA4B,EAAE,OAAO;AAAA,EAChD,IAAI,EAAE,OAAO;AAAA,EACb,OAAO,EAAE,OAAO;AAAA,EAChB,KAAK,EAAE,OAAO;AAAA,EACd,OAAO,EAAE,OAAO;AAAA,EAChB,gBAAgB,EAAE,OAAO,EAAE,SAAS;AAAA,EACpC,mBAAmB,EAAE,OAAO,EAAE,IAAI;AAAA,EAClC,kBAAkB,EAAE,QAAQ;AAC9B,CAAC,GAEY,0BAA0B,EAAE,OAAO;AAAA,EAC9C,IAAI,EAAE,OAAO;AAAA,EACb,KAAK,EAAE,OAAO,EAAE,IAAI;AAAA,EACpB,SAAS,EAAE,OAAO,EAAE,SAAS;AAAA,EAC7B,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,EACjC,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS;AACpC,CAAC,GAEY,qBAAqB,EAAE,OAAO;AAAA,EACzC,IAAI,EAAE,OAAO;AAAA,EACb,OAAO,EAAE,OAAO;AAAA,EAChB,QAAQ,EAAE,OAAO;AAAA,EACjB,QAAQ,EAAE,KAAK,CAAC,UAAU,YAAY,OAAO,CAAC;AAAA,EAC9C,aAAa,EAAE,OAAO;AAAA,EACtB,QAAQ,EAAE,OAAO;AAAA,EACjB,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC;AAAA,EACxB,WAAW,EAAE,OAAO,EAAE,SAAS;AAAA,EAC/B,WAAW,EAAE,OAAO,EAAE,SAAS;AAAA,EAC/B,UAAU,EAAE,OAAO;AAAA,IACjB,OAAO,EAAE,MAAM,EAAE,OAAO;AAAA,MACtB,MAAM;AAAA,IACR,CAAC,CAAC;AAAA,EACJ,CAAC;AAAA,EACD,QAAQ,EAAE,OAAO;AAAA,IACf,OAAO,EAAE,MAAM,EAAE,OAAO;AAAA,MACtB,MAAM;AAAA,IACR,CAAC,CAAC;AAAA,EACJ,CAAC;AACH,CAAC,GAEY,iBAAiB,EAAE,OAAO;AAAA,EACrC,IAAI,EAAE,OAAO;AAAA,EACb,MAAM,EAAE,OAAO;AAAA,EACf,QAAQ,EAAE,OAAO;AAAA,EACjB,OAAO,EAAE,OAAO,EAAE,MAAM;AAAA,EACxB,iBAAiB,EAAE,OAAO,EAAE,MAAM,8BAA8B;AAAA,EAChE,MAAM,EAAE,OAAO;AAAA,IACb,aAAa,EAAE,OAAO;AAAA,IACtB,oBAAoB,EAAE,QAAQ;AAAA,EAChC,CAAC;AAAA,EACD,eAAe,EAAE,OAAO;AAAA,EACxB,cAAc,EAAE,OAAO,EAAE,OAAO,CAAC;AAAA;AAAA,EACjC,YAAY,EAAE,KAAK,CAAC,UAAU,UAAU,aAAa,OAAO,CAAC;AAAA,EAC7D,UAAU,EAAE,OAAO;AACrB,CAAC,GAEY,8BAA8B,EAAE,OAAO;AAAA,EAClD,UAAU,EAAE,MAAM,kBAAkB;AAAA,EACpC,aAAa,EAAE,QAAQ;AAAA,EACvB,WAAW,EAAE,OAAO,EAAE,SAAS;AAAA,EAC/B,MAAM;AAAA,EACN,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,YAAY;AACtC,CAAC,GAGY,+BAA+B,EAAE,OAAO;AAAA,EACnD,OAAO,EAAE,QAAQ;AAAA,EACjB,MAAM,eAAe,SAAS;AAAA,EAC9B,OAAO,EAAE,OAAO,EAAE,SAAS;AAC7B,CAAC;;;AJzOD,eAAsB,OAAO,EAAE,QAAQ,GAAuB;AAC5D,MAAI;AAEF,QAAM,UAAU,MAAM,eAAe,OAAO,GAEtC,MAAM,IAAI,IAAI,QAAQ,GAAG,GAGzB,QAAQ,KAAK,IAAI,SAAS,IAAI,aAAa,IAAI,OAAO,KAAK,IAAI,GAAG,EAAE,GACpE,QAAQ,IAAI,aAAa,IAAI,OAAO,KAAK,QACzC,YAAY,IAAI,aAAa,IAAI,IAAI;AAG3C,QAAI,QAAQ;AACV,aAAOC,MAAK;AAAA,QACV;AAAA,QACA;AAAA,MACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAGpB,QAAI,WAAW;AAEb,UAAM,UAAU,MAAM,cAAc,YAC3B,MAAM,gBAAgB,QAAQ,MAAM,SAAS,CACrD;AAED,aAAK,UAOEA,MAAK,SAAS;AAAA,QACnB,SAAS;AAAA,UACP,iBAAiB;AAAA;AAAA,UACjB,gBAAgB;AAAA,QAClB;AAAA,MACF,CAAC,IAXQA,MAAK;AAAA,QACV;AAAA,QACA;AAAA,MACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,WASf;AAEL,UAAM,SAAS,MAAM,cAAc,YAC1B,MAAM,iBAAiB,QAAQ,MAAM,OAAO,KAAK,CACzD;AAED,UAAI,CAAC;AACH,eAAOA,MAAK;AAAA,UACV;AAAA,UACA;AAAA,QACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAGpB,UAAM,WAAW;AAAA,QACf,UAAU,OAAO;AAAA,QACjB,aAAa,OAAO;AAAA,QACpB,WAAW,OAAO;AAAA,QAClB,MAAM,QAAQ;AAAA,QACd,OAAO,OAAO,SAAS;AAAA,MACzB,GAGM,oBAAoB,4BAA4B,MAAM,QAAQ;AAEpE,aAAOA,MAAK,mBAAmB;AAAA,QAC7B,SAAS;AAAA,UACP,iBAAiB;AAAA;AAAA,UACjB,gBAAgB;AAAA,QAClB;AAAA,MACF,CAAC;AAAA;AAAA,EAGL,SAAS,OAAP;AAGA,QAFA,QAAQ,MAAM,6BAA6B,KAAK,GAE5C,iBAAiB;AACnB,YAAM;AAGR,QAAI,iBAAiB,OAAO;AAE1B,UAAI,MAAM,QAAQ,SAAS,iCAAiC;AAC1D,eAAOA,MAAK;AAAA,UACV;AAAA,UACA;AAAA,QACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAGpB,UAAI,MAAM,QAAQ,SAAS,4BAA4B;AACrD,eAAOA,MAAK;AAAA,UACV;AAAA,UACA;AAAA,QACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAGpB,UAAI,MAAM,QAAQ,SAAS,+BAA+B;AACxD,eAAOA,MAAK;AAAA,UACV;AAAA,UACA;AAAA,QACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAGpB,UAAI,MAAM,QAAQ,SAAS,qBAAqB;AAC9C,eAAOA,MAAK;AAAA,UACV;AAAA,UACA;AAAA,QACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA;AAItB,WAAOA,MAAK;AAAA,MACV;AAAA,MACA;AAAA,IACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,EACpB;AACF;;;AKhIA;AAAA;AAAA,gBAAAC;AAAA,EAAA;AAAA,gBAAAC;AAAA;AAAA,SAAS,QAAAC,aAA8D;AACvE,SAAS,eAAe,MAAM,eAAe,kBAAkB;AAE/D;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACK;AACP,SAAS,UAAU,mBAA2B;AAC9C,SAAS,iBAAiB;AAsId,mBAAAC,eAAA;AAxHZ,eAAsBC,QAAO,EAAE,QAAQ,GAAuB;AAC5D,MAAM,UAAU,MAAM,aAAa,OAAO;AAC1C,EAAAC,YAAW,SAAS,OAAO;AAG3B,MAAI;AACF,QAAM,YAAY,IAAI,IAAI,eAAe,QAAQ,GAAG;AACpD,cAAU,aAAa,IAAI,QAAQ,QAAQ,IAAI;AAE/C,QAAM,iBAAiB,MAAM,MAAM,UAAU,SAAS,CAAC,GACjD,aAAa,MAAM,eAAe,KAAK;AAE7C,QAAI,CAAC,eAAe;AAClB,YAAM,IAAI,MAAM,WAAW,SAAS,uBAAuB;AAG7D,WAAOC,MAAK;AAAA,MACV,MAAM,QAAQ;AAAA,MACd,kBAAkB,WAAW;AAAA,IAC/B,CAAC;AAAA,EACH,SAAS,OAAP;AACA,YAAQ,MAAM,qCAAqC,KAAK;AAGxD,QAAM,mBAAmB;AAAA,MACvB,WAAW,QAAQ,KAAK,MAAM,GAAG,EAAE,CAAC;AAAA,MACpC,cAAc;AAAA,MACd,SAAS;AAAA,MACT,SAAS;AAAA,IACX;AAEA,WAAOA,MAAK;AAAA,MACV,MAAM,QAAQ;AAAA,MACd;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAEA,eAAsBC,QAAO,EAAE,QAAQ,GAAuB;AAC5D,MAAM,UAAU,MAAM,aAAa,OAAO;AAC1C,EAAAF,YAAW,SAAS,OAAO;AAE3B,MAAI;AAEF,QAAM,cAAc,IAAI,IAAI,iBAAiB,QAAQ,GAAG;AACxD,gBAAY,aAAa,IAAI,QAAQ,QAAQ,IAAI;AAEjD,QAAM,WAAW,MAAM,QAAQ,SAAS,GAElC,mBAAmB,MAAM,MAAM,YAAY,SAAS,GAAG;AAAA,MAC3D,QAAQ;AAAA,MACR,MAAM;AAAA,IACR,CAAC,GAEK,eAAe,MAAM,iBAAiB,KAAK;AAEjD,QAAI,CAAC,iBAAiB;AACpB,YAAM,IAAI,MAAM,aAAa,SAAS,yBAAyB;AAGjE,WAAOC,MAAK,YAAY;AAAA,EAE1B,SAAS,OAAP;AACA,mBAAQ,MAAM,qCAAqC,KAAK,GACjDA,MAAK;AAAA,MACV,OAAO,iBAAiB,QAAQ,MAAM,UAAU;AAAA,IAClD,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,EACpB;AACF;AAEe,SAAR,gBAAiC;AACtC,MAAM,EAAE,MAAM,iBAAiB,IAAI,cAA6B,GAC1D,aAAa,cAA6B,GAC1C,gBAAgB,WAAW,GAE3B,CAAC,WAAW,YAAY,IAAI,SAAS,iBAAiB,SAAS,GAC/D,CAAC,cAAc,eAAe,IAAI,SAAS,iBAAiB,YAAY,GACxE,CAAC,SAAS,UAAU,IAAI,SAAS,iBAAiB,OAAO,GACzD,CAAC,SAAS,UAAU,IAAI,SAAS,iBAAiB,OAAO,GACzD,CAAC,cAAc,eAAe,IAAI,SAAsB,IAAI,GAE5D,wBAAwB,YAAY,CAAC,UAAkB,aAAa,KAAK,GAAG,CAAC,CAAC,GAC9E,sBAAsB,YAAY,CAAC,UAAkB,WAAW,KAAK,GAAG,CAAC,CAAC,GAC1E,sBAAsB,YAAY,CAAC,UAAkB,WAAW,KAAK,GAAG,CAAC,CAAC,GAE1E,qBAAqB,YAAY,CAAC,UAAkB;AACxD,QAAM,OAAO,MAAM,CAAC;AACpB,QAAI,MAAM;AACR,sBAAgB,IAAI;AAGpB,UAAM,WAAW,IAAI,SAAS;AAC9B,eAAS,OAAO,QAAQ,IAAI,GAC5B,SAAS,OAAO,QAAQ,MAAM,GAE9B,cAAc,OAAO,UAAU;AAAA,QAC7B,QAAQ;AAAA,QACR,QAAQ,oBAAoB;AAAA,QAC5B,SAAS;AAAA,MACX,CAAC;AAAA;AAAA,EAEL,GAAG,CAAC,MAAM,aAAa,CAAC,GAGlB,aAAa,cAAc;AACjC,SAAI,YAAY,WAAW,WAAW,OAAO,OAAO,WAAW,MAAM,QAAQ,WAC3E,WAAW,WAAW,MAAM,GAAG,GAI/B,gBAAAH;AAAA,IAAC;AAAA;AAAA,MACC,OAAM;AAAA,MACN,UAAS;AAAA,MACT,YAAY;AAAA,QACV,KAAK;AAAA,MACP;AAAA,MAEA,0BAAAA,QAAC,UACC;AAAA,wBAAAA,QAAC,OAAO,SAAP,EACE;AAAA,sBAAY,WACX,gBAAAA,QAAC,UAAO,MAAK,WAAU,WAAW,MAAM;AAAA,UAAC,GACtC,qBAAW,WADd;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UAED,YAAY,SACX,gBAAAA,QAAC,UAAO,MAAK,YAAW,WAAW,MAAM;AAAA,UAAC,GACvC,qBAAW,SADd;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UAGF,gBAAAA,QAAC,QACC,0BAAAA,QAAC,QAAK,QAAO,QACX,0BAAAA,QAAC,cACC;AAAA,4BAAAA,QAAC,QAAK,SAAQ,aAAY,IAAG,MAAK,iCAAlC;AAAA;AAAA;AAAA;AAAA,mBAAmD;AAAA,YAEnD,gBAAAA;AAAA,cAAC;AAAA;AAAA,gBACC,OAAM;AAAA,gBACN,OAAO;AAAA,gBACP,UAAU;AAAA,gBACV,MAAK;AAAA,gBACL,UAAS;AAAA,gBACT,cAAa;AAAA;AAAA,cANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAOA;AAAA,YAEA,gBAAAA;AAAA,cAAC;AAAA;AAAA,gBACC,OAAM;AAAA,gBACN,OAAO;AAAA,gBACP,UAAU;AAAA,gBACV,MAAK;AAAA,gBACL,UAAS;AAAA,gBACT,cAAa;AAAA;AAAA,cANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAOA;AAAA,YAEA,gBAAAA,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,mBAAS;AAAA,YAET,gBAAAA,QAAC,QAAK,SAAQ,aAAY,IAAG,MAAK,6BAAlC;AAAA;AAAA;AAAA;AAAA,mBAA+C;AAAA,YAE/C,gBAAAA;AAAA,cAAC;AAAA;AAAA,gBACC,OAAM;AAAA,gBACN,OAAO;AAAA,gBACP,UAAU;AAAA,gBACV,MAAK;AAAA,gBACL,UAAS;AAAA,gBACT,cAAa;AAAA,gBACb,QAAO;AAAA,gBACP,aAAY;AAAA;AAAA,cARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YASA;AAAA,YAEA,gBAAAA,QAAC,SACC;AAAA,8BAAAA,QAAC,QAAK,SAAQ,UAAS,IAAG,KAAI,YAAW,UAAS,2BAAlD;AAAA;AAAA;AAAA;AAAA,qBAA6D;AAAA,cAC7D,gBAAAA,QAAC,SAAI,OAAO,EAAE,WAAW,MAAM,GAC7B,0BAAAA,QAAC,YAAS,QAAQ,oBAAoB,QAAO,WAAU,MAAK,SACzD,yBACC,gBAAAA,QAAC,cAAW,KAAI,OACd;AAAA,gCAAAA;AAAA,kBAAC;AAAA;AAAA,oBACC,QAAQ,IAAI,gBAAgB,YAAY;AAAA,oBACxC,KAAK,aAAa;AAAA,oBAClB,MAAK;AAAA;AAAA,kBAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAIA;AAAA,gBACA,gBAAAA,QAAC,QAAK,SAAQ,UAAS,IAAG,KAAI,WAAU,UACrC,uBAAa,QADhB;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,gBACC,cAAc,UAAU,gBACvB,gBAAAA,QAAC,QAAK,SAAQ,UAAS,IAAG,KAAI,WAAU,UAAS,4BAAjD;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,gBAEA,cAAc,MAAyB,WACvC,gBAAAA,QAAC,QAAK,SAAQ,UAAS,IAAG,KAAI,WAAU,UAAS,MAAK,WAAU,kCAAhE;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,mBAjBJ;AAAA;AAAA;AAAA;AAAA,qBAmBA,IACE,UACF,gBAAAA,QAAC,cAAW,KAAI,OACd;AAAA,gCAAAA;AAAA,kBAAC;AAAA;AAAA,oBACC,QAAQ;AAAA,oBACR,KAAI;AAAA,oBACJ,MAAK;AAAA;AAAA,kBAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAIA;AAAA,gBACA,gBAAAA,QAAC,QAAK,SAAQ,UAAS,IAAG,KAAI,WAAU,UAAS,4BAAjD;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,mBARF;AAAA;AAAA;AAAA;AAAA,qBASA,IAEA,gBAAAA,QAAC,cAAW,KAAI,OACd;AAAA,gCAAAA,QAAC,QAAK,QAAQ,WAAW,MAAK,aAA9B;AAAA;AAAA;AAAA;AAAA,uBAAwC;AAAA,gBACxC,gBAAAA,QAAC,QAAK,SAAQ,UAAS,IAAG,KAAI,WAAU,UAAS,iDAAjD;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,gBACA,gBAAAA,QAAC,QAAK,SAAQ,UAAS,IAAG,KAAI,WAAU,UAAS,MAAK,WAAU,sDAAhE;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,mBAPF;AAAA;AAAA;AAAA;AAAA,qBAQA,KA1CJ;AAAA;AAAA;AAAA;AAAA,qBA4CA,KA7CF;AAAA;AAAA;AAAA;AAAA,qBA8CA;AAAA,cACE,cAAc,MAAyB,SACvC,gBAAAA,QAAC,UAAO,MAAK,YAAW,WAAW,MAAM;AAAA,cAAC,GACtC,wBAAc,MAAyB,SAAS,kBADpD;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,iBApDJ;AAAA;AAAA;AAAA;AAAA,mBAsDA;AAAA,YAEA,gBAAAA;AAAA,cAAC;AAAA;AAAA,gBACC,OAAM;AAAA,gBACN,OAAO;AAAA,gBACP,UAAU;AAAA,gBACV,MAAK;AAAA,gBACL,UAAS;AAAA,gBACT,cAAa;AAAA;AAAA,cANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAOA;AAAA,YAEA,gBAAAA,QAAC,eAAY,OAAM,OACjB,0BAAAA,QAAC,UAAO,SAAQ,WAAU,QAAM,IAAC,6BAAjC;AAAA;AAAA;AAAA;AAAA,mBAEA,KAHF;AAAA;AAAA;AAAA;AAAA,mBAIA;AAAA,eAzGF;AAAA;AAAA;AAAA;AAAA,iBA0GA,KA3GF;AAAA;AAAA;AAAA;AAAA,iBA4GA,KA7GF;AAAA;AAAA;AAAA;AAAA,iBA8GA;AAAA,aA1HF;AAAA;AAAA;AAAA;AAAA,eA2HA;AAAA,QAEA,gBAAAA,QAAC,OAAO,SAAP,EAAe,SAAQ,YACtB,0BAAAA,QAAC,QACC,0BAAAA,QAAC,SAAI,OAAO,EAAE,SAAS,OAAO,GAC5B;AAAA,0BAAAA,QAAC,QAAK,SAAQ,aAAY,IAAG,MAAK,uBAAlC;AAAA;AAAA;AAAA;AAAA,iBAAyC;AAAA,UACzC,gBAAAA,QAAC,SAAI,OAAO,EAAE,WAAW,OAAO,GAC9B,0BAAAA;AAAA,YAAC;AAAA;AAAA,cACC,OAAO;AAAA,gBACL,SAAS;AAAA,gBACT,iBAAiB;AAAA,gBACjB,OAAO;AAAA,gBACP,cAAc;AAAA,gBACd,WAAW;AAAA,cACb;AAAA,cAEA;AAAA,gCAAAA,QAAC,QAAK,SAAQ,aAAY,IAAG,MAC1B,uBAAa,mBADhB;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,gBACA,gBAAAA,QAAC,QAAK,SAAQ,UAAS,IAAG,KACvB,qBAAW,uBADd;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAeA,KAhBF;AAAA;AAAA;AAAA;AAAA,iBAiBA;AAAA,aAnBF;AAAA;AAAA;AAAA;AAAA,eAoBA,KArBF;AAAA;AAAA;AAAA;AAAA,eAsBA,KAvBF;AAAA;AAAA;AAAA;AAAA,eAwBA;AAAA,WAtJF;AAAA;AAAA;AAAA;AAAA,aAuJA;AAAA;AAAA,IA9JF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA+JA;AAEJ;;;ACjTA;AAAA;AAAA,gBAAAK;AAAA;AACA,SAAS,QAAAC,aAAY;AAUrB,eAAsBC,QAAO,EAAE,QAAQ,GAAuB;AAC5D,MAAI;AAEF,QAAM,UAAU,MAAM,eAAe,OAAO;AAK5C,QAHY,IAAI,IAAI,QAAQ,GAAG,EACV,aAAa,IAAI,UAAU,MAAM,QAExC;AAIZ,UAAI,CAFY,MAAM,mBAAmB,QAAQ,IAAI;AAGnD,eAAOC,MAAK;AAAA,UACV;AAAA,UACA;AAAA,QACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAKpB,UAAM,qBAAqB;AAAA,QACzB,OAAO;AAAA,QACP,MAJe,MAAM,YAAY,QAAQ,IAAI;AAAA,MAK/C,GAGM,oBAAoB,6BAA6B,MAAM,kBAAkB;AAE/E,aAAOA,MAAK,mBAAmB;AAAA,QAC7B,SAAS;AAAA,UACP,iBAAiB;AAAA;AAAA,UACjB,gBAAgB;AAAA,QAClB;AAAA,MACF,CAAC;AAAA,WACI;AAEL,UAAM,WAAW,MAAM,YAAY,QAAQ,IAAI;AAE/C,aAAK,WAOEA,MAAK,UAAU;AAAA,QACpB,SAAS;AAAA,UACP,iBAAiB;AAAA;AAAA,UACjB,gBAAgB;AAAA,QAClB;AAAA,MACF,CAAC,IAXQA,MAAK;AAAA,QACV;AAAA,QACA;AAAA,MACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA;AAAA,EAWxB,SAAS,OAAP;AAGA,QAFA,QAAQ,MAAM,yBAAyB,KAAK,GAExC,iBAAiB;AACnB,YAAM;AAGR,QAAI,iBAAiB,OAAO;AAE1B,UAAI,MAAM,QAAQ,SAAS,iCAAiC;AAC1D,eAAOA,MAAK;AAAA,UACV;AAAA,UACA;AAAA,QACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAGpB,UAAI,MAAM,QAAQ,SAAS,4BAA4B;AACrD,eAAOA,MAAK;AAAA,UACV;AAAA,UACA;AAAA,QACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAGpB,UAAI,MAAM,QAAQ,SAAS,YAAY;AACrC,eAAOA,MAAK;AAAA,UACV;AAAA,UACA;AAAA,QACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA;AAItB,WAAOA,MAAK;AAAA,MACV;AAAA,MACA;AAAA,IACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,EACpB;AACF;;;ACrGA;AAAA;AAAA,gBAAAC;AAAA;AAAA,SAAS,gBAAyC;;;ACAlD,SAAS,cAAAC,aAAY,mBAAAC,wBAAuB;AAMrC,SAAS,kBACd,OACA,QACS;AACT,MAAI;AACF,QAAM,SAAS,iBAAiB,kBAAkB,QAAQ,IAAI,gBAAgB,KAAK,GAC7E,OAAO,OAAO,IAAI,MAAM;AAE9B,QAAI,CAAC;AACH,aAAO;AAIT,WAAO,OAAO,MAAM,GACpB,OAAO,OAAO,WAAW;AAGzB,QAAM,eAAe,MAAM,KAAK,OAAO,QAAQ,CAAC,EAC7C,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC,EACrC,IAAI,CAAC,CAAC,KAAK,KAAK,MAAM,GAAG,OAAO,OAAO,EACvC,KAAK,GAAG,GAGL,eAAeD,YAAW,UAAU,MAAM,EAC7C,OAAO,YAAY,EACnB,OAAO,KAAK;AAGf,WAAI,KAAK,WAAW,aAAa,SACxB,KAIFC;AAAA,MACL,OAAO,KAAK,MAAM,KAAK;AAAA,MACvB,OAAO,KAAK,cAAc,KAAK;AAAA,IACjC;AAAA,EACF,SAAS,OAAP;AACA,mBAAQ,MAAM,4BAA4B,KAAK,GACxC;AAAA,EACT;AACF;AAiCO,SAAS,eACd,MACA,QACA,QACA,aACQ;AACR,MAAM,SAAS,IAAI,gBAAgB;AAAA,IACjC,WAAW;AAAA,IACX,OAAO;AAAA,IACP,cAAc;AAAA,IACd,OAAO,YAAY;AAAA;AAAA,EACrB,CAAC;AAED,SAAO,WAAW,4CAA4C,OAAO,SAAS;AAChF;AAKA,eAAsB,qBACpB,MACA,MACA,QACA,WACyD;AACzD,MAAI;AACF,QAAM,WAAW,MAAM,MAAM,WAAW,+CAA+C;AAAA,MACrF,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,MAClB;AAAA,MACA,MAAM,KAAK,UAAU;AAAA,QACnB,WAAW;AAAA,QACX,eAAe;AAAA,QACf;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAED,WAAK,SAAS,KAKP,MAAM,SAAS,KAAK,KAJzB,QAAQ,MAAM,0BAA0B,SAAS,QAAQ,SAAS,UAAU,GACrE;AAAA,EAIX,SAAS,OAAP;AACA,mBAAQ,MAAM,yBAAyB,KAAK,GACrC;AAAA,EACT;AACF;AAKA,SAAS,cAAsB;AAC7B,SAAO,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU,GAAG,EAAE,IAC1C,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU,GAAG,EAAE;AACnD;;;AD9HA,eAAsBC,QAAO,EAAE,QAAQ,GAAuB;AAC5D,MAAM,MAAM,IAAI,IAAI,QAAQ,GAAG,GACzB,cAAc,OAAO,YAAY,IAAI,aAAa,QAAQ,CAAC,GAE3D,EAAE,MAAM,MAAM,MAAM,MAAM,IAAI;AAGpC,MAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;AACrB,UAAM,IAAI,SAAS,qCAAqC,EAAE,QAAQ,IAAI,CAAC;AAIzE,MAAM,aAAa,KAAK,QAAQ,gBAAgB,EAAE,EAAE,QAAQ,OAAO,EAAE;AACrE,MAAI,CAAC,2DAA2D,KAAK,UAAU;AAC7E,UAAM,IAAI,SAAS,uBAAuB,EAAE,QAAQ,IAAI,CAAC;AAI3D,MAAM,YAAY,QAAQ,IAAI;AAC9B,MAAI,CAAC;AACH,UAAM,IAAI,SAAS,8BAA8B,EAAE,QAAQ,IAAI,CAAC;AAGlE,MAAI,CAAC,kBAAkB,IAAI,cAAc,SAAS;AAChD,kBAAQ,MAAM,sCAAsC,UAAU,GACxD,IAAI,SAAS,0BAA0B,EAAE,QAAQ,IAAI,CAAC;AAI9D,MAAM,SAAS,QAAQ,IAAI;AAC3B,MAAI,CAAC;AACH,UAAM,IAAI,SAAS,2BAA2B,EAAE,QAAQ,IAAI,CAAC;AAG/D,MAAM,YAAY,MAAM;AAAA,IACtB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,MAAI,CAAC;AACH,UAAM,IAAI,SAAS,2CAA2C,EAAE,QAAQ,IAAI,CAAC;AAG/E,MAAI;AAEF,QAAM,iBAAiB,aAAa,UAAU,YAAY;AAG1D,UAAM,OAAO,KAAK,OAAO;AAAA,MACvB,OAAO,EAAE,WAAW;AAAA,MACpB,QAAQ;AAAA,QACN,gBAAgB;AAAA,QAChB,eAAe;AAAA;AAAA,QACf,WAAW,oBAAI,KAAK;AAAA,MACtB;AAAA,MACA,QAAQ;AAAA,QACN;AAAA,QACA,gBAAgB;AAAA,QAChB,aAAa,oBAAI,KAAK;AAAA,QACtB,UAAU,KAAK,UAAU,CAAC,CAAC;AAAA,MAC7B;AAAA,IACF,CAAC,GAED,QAAQ,IAAI,gCAAgC,UAAU;AAGtD,QAAM,UAAU,IAAI,IAAI,QAAQ,GAAG,EAAE,QAC/B,gBAAgB,MAAM,iBAAiB,UAAU;AACvD,WAAI,iBACF,MAAM,iBAAiB,YAAY,cAAc,aAAa,OAAO,GAIhE,SAAS,WAAW,yBAAyB,QAAQ;AAAA,EAE9D,SAAS,OAAP;AACA,kBAAQ,MAAM,yCAAyC,KAAK,GACtD,IAAI,SAAS,yBAAyB,EAAE,QAAQ,IAAI,CAAC;AAAA,EAC7D;AACF;;;AE3FA;AAAA;AAAA,gBAAAC;AAAA;AACA,SAAS,QAAAC,aAAY;;;ACErB,IAAM,yBAAyB,WA2DzBC,kBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsDvB,eAAsB,4BAA4B,YAA4C;AAC5F,MAAI;AACF,QAAM,WAAW,MAAM,iBAAiB,UAAU;AAClD,QAAI,CAAC;AACH,qBAAQ,MAAM,+BAA+B,UAAU,GAChD;AAIT,QAAM,WAAW,WAAW,wBAAwB,wDAE9C,WAAW,MAAM,MAAM,UAAU;AAAA,MACrC,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,0BAA0B,SAAS;AAAA,QACnC,gBAAgB;AAAA,MAClB;AAAA,MACA,MAAM,KAAK,UAAU;AAAA,QACnB,yBAAyB;AAAA,UACvB,OAAO;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAED,QAAI,CAAC,SAAS,IAAI;AAChB,UAAM,QAAQ,MAAM,SAAS,KAAK;AAClC,qBAAQ,MAAM,6CAA6C,KAAK,GACzD;AAAA;AAIT,YADa,MAAM,SAAS,KAAK,GACrB,yBAAyB,gBAAgB;AAAA,EAEvD,SAAS,OAAP;AACA,mBAAQ,MAAM,2CAA2C,KAAK,GACvD;AAAA,EACT;AACF;AAKA,eAAsB,yBAAyB,YAA4C;AAGzF,SAAO,MAAM,4BAA4B,UAAU;AACrD;AAKA,eAAsB,mBACpB,YACA,OACA,YAAiC,CAAC,GACpB;AACd,MAAI;AACF,QAAM,cAAc,MAAM,yBAAyB,UAAU;AAC7D,QAAI,CAAC;AACH,YAAM,IAAI,MAAM,uCAAuC;AAGzD,QAAM,gBAAgB,WAAW,kBAAkB,uCAE7C,WAAW,MAAM,MAAM,eAAe;AAAA,MAC1C,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,qCAAqC;AAAA,QACrC,gBAAgB;AAAA,MAClB;AAAA,MACA,MAAM,KAAK,UAAU,EAAE,OAAO,UAAU,CAAC;AAAA,IAC3C,CAAC;AAED,QAAI,CAAC,SAAS,IAAI;AAChB,UAAM,QAAQ,MAAM,SAAS,KAAK;AAClC,YAAM,IAAI,MAAM,yBAAyB,SAAS,UAAU,OAAO;AAAA;AAGrE,QAAM,OAAO,MAAM,SAAS,KAAK;AAEjC,QAAI,KAAK,UAAU,KAAK,OAAO,SAAS;AACtC,oBAAQ,MAAM,mBAAmB,KAAK,MAAM,GACtC,IAAI,MAAM,kBAAkB,KAAK,OAAO,CAAC,EAAE,SAAS;AAG5D,WAAO;AAAA,EAET,SAAS,OAAP;AACA,kBAAQ,MAAM,gCAAgC,KAAK,GAC7C;AAAA,EACR;AACF;AAKA,eAAsB,cACpB,YACA,QAAgB,IAChB,OACqC;AACrC,MAAI;AACF,QAAM,YAAY,EAAE,OAAO,GAAI,SAAS,EAAE,MAAM,EAAG;AAGnD,WAFiB,MAAM,mBAAmB,YAAYA,iBAAgB,SAAS;AAAA,EAIjF,SAAS,OAAP;AACA,kBAAQ,MAAM,6BAA6B,KAAK,GAC1C;AAAA,EACR;AACF;AAMO,SAAS,yBAAyB,YAA6B;AAIpE,SAAO;AACT;AAKO,SAAS,0BAA0B,SAA4B;AACpE,SAAO;AAAA,IACL,IAAI,QAAQ;AAAA,IACZ,OAAO,QAAQ;AAAA,IACf,QAAQ,QAAQ;AAAA,IAChB,aAAa,QAAQ;AAAA,IACrB,OAAO,QAAQ,OAAO,MAAM,CAAC,GAAG,KAAK,OAAO;AAAA,IAC5C,QAAQ,QAAQ,OAAO,MAAM,IAAI,WAAS;AAAA,MACxC,KAAK,KAAK,KAAK;AAAA,MACf,SAAS,KAAK,KAAK;AAAA,IACrB,EAAE;AAAA,IACF,OAAO;AAAA,MACL,QAAQ,QAAQ,WAAW,gBAAgB;AAAA,MAC3C,UAAU,QAAQ,WAAW,gBAAgB;AAAA,IAC/C;AAAA,IACA,UAAU,QAAQ,SAAS,MAAM,IAAI,WAAS;AAAA,MAC5C,IAAI,KAAK,KAAK;AAAA,MACd,OAAO,KAAK,KAAK;AAAA,MACjB,OAAO,KAAK,KAAK;AAAA,MACjB,gBAAgB,KAAK,KAAK;AAAA,MAC1B,WAAW,KAAK,KAAK;AAAA,IACvB,EAAE;AAAA,EACJ;AACF;;;ADpQA,eAAsBC,QAAO,EAAE,QAAQ,GAAuB;AAC5D,MAAI;AAEF,QAAM,UAAU,MAAM,aAAa,OAAO;AAC1C,IAAAC,YAAW,SAAS,OAAO;AAE3B,QAAM,MAAM,IAAI,IAAI,QAAQ,GAAG,GAGzB,QAAQ,KAAK,IAAI,SAAS,IAAI,aAAa,IAAI,OAAO,KAAK,IAAI,GAAG,EAAE,GACpE,QAAQ,IAAI,aAAa,IAAI,OAAO,KAAK;AAG/C,QAAI,QAAQ;AACV,aAAOC,MAAK;AAAA,QACV;AAAA,QACA;AAAA,MACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAIpB,QAAI,CAAC,yBAAyB,QAAQ,IAAI;AACxC,aAAOA,MAAK;AAAA,QACV;AAAA,QACA;AAAA,MACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAIpB,QAAM,mBAAmB,MAAM,cAAc,QAAQ,MAAM,OAAO,KAAK,GAGjE,sBAAsB,iBAAiB,KAAK,SAAS,MAAM;AAAA,MAAI,UACnE,0BAA0B,KAAK,IAAI;AAAA,IACrC,GAEM,WAAW;AAAA,MACf,UAAU;AAAA,MACV,UAAU,iBAAiB,KAAK,SAAS;AAAA,MACzC,MAAM,QAAQ;AAAA,MACd,OAAO,oBAAoB;AAAA,IAC7B,GAGM,oBAAoB,uBAAuB,MAAM,QAAQ;AAE/D,WAAOA,MAAK,mBAAmB;AAAA,MAC7B,SAAS;AAAA,QACP,iBAAiB;AAAA;AAAA,QACjB,gBAAgB;AAAA,MAClB;AAAA,IACF,CAAC;AAAA,EAEH,SAAS,OAAP;AAGA,QAFA,QAAQ,MAAM,uBAAuB,KAAK,GAEtC,iBAAiB;AACnB,YAAM;AAGR,QAAI,iBAAiB,OAAO;AAE1B,UAAI,MAAM,QAAQ,SAAS,2BAA2B;AACpD,eAAOA,MAAK;AAAA,UACV;AAAA,UACA;AAAA,QACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAGpB,UAAI,MAAM,QAAQ,SAAS,2BAA2B;AACpD,eAAOA,MAAK;AAAA,UACV;AAAA,UACA;AAAA,QACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAGpB,UAAI,MAAM,QAAQ,SAAS,YAAY;AACrC,eAAOA,MAAK;AAAA,UACV;AAAA,UACA;AAAA,QACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA;AAItB,WAAOA,MAAK;AAAA,MACV;AAAA,MACA;AAAA,IACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,EACpB;AACF;;;AE/FA;AAAA;AAAA,gBAAAC;AAAA;AAAA,SAAS,QAAAC,aAAqC;AAS9C,eAAsBC,QAAO,EAAE,QAAQ,GAAuB;AAC5D,MAAI,QAAQ,WAAW;AACrB,WAAOC,MAAK,oBAAoB,sBAAsB,oBAAoB,GAAG,EAAE,QAAQ,IAAI,CAAC;AAG9F,MAAI;AAEF,QAAM,UAAU,MAAM,aAAa,OAAO;AAC1C,IAAAC,YAAW,SAAS,OAAO;AAE3B,QAAM,WAAW,MAAM,QAAQ,SAAS,GAGlC,eAAe;AAAA,MACnB,WAAW,SAAS,IAAI,WAAW;AAAA,MACnC,cAAc,SAAS,IAAI,cAAc;AAAA,MACzC,SAAS,SAAS,IAAI,SAAS,KAAe;AAAA,MAC9C,SAAS,SAAS,IAAI,SAAS,KAAe;AAAA,IAChD,GAGM,oBAAoB,qBAAqB,YAAY,GAOrD,kBAAkB;AAAA,MACtB,GALiB,QAAQ,WAGS,YAAoB,CAAC;AAAA,MAGvD,GAAG;AAAA,MACH,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,IACpC;AAGA,iBAAM,OAAO,KAAK,OAAO;AAAA,MACvB,OAAO,EAAE,YAAY,QAAQ,KAAK;AAAA,MAClC,MAAM,EAAE,UAAU,gBAAgB;AAAA,IACpC,CAAC,GAED,QAAQ,IAAI,uCAAuC,QAAQ,QAAQ,iBAAiB,GAE7ED,MAAK;AAAA,MACV,SAAS;AAAA,MACT,SAAS;AAAA,MACT,UAAU;AAAA,IACZ,CAAC;AAAA,EAEH,SAAS,OAAP;AAGA,QAFA,QAAQ,MAAM,uBAAuB,KAAK,GAEtC,iBAAiB;AACnB,YAAM;AAGR,WAAI,iBAAiB,SAAS,MAAM,QAAQ,SAAS,mBAAmB,IAC/DA,MAAK;AAAA,MACV,MAAM;AAAA,MACN;AAAA,IACF,GAAG,EAAE,QAAQ,IAAI,CAAC,IAGbA,MAAK;AAAA,MACV;AAAA,MACA;AAAA,IACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,EACpB;AACF;;;AC5EA;AAAA;AAAA,gBAAAE;AAAA;AAAA,SAAS,YAAAC,iBAAyC;AAGlD,eAAsBC,QAAO,EAAE,QAAQ,GAAuB;AAE5D,MAAM,OADM,IAAI,IAAI,QAAQ,GAAG,EACd,aAAa,IAAI,MAAM;AAExC,MAAI,CAAC;AACH,UAAM,IAAI,SAAS,0BAA0B,EAAE,QAAQ,IAAI,CAAC;AAI9D,MAAM,aAAa,KAAK,QAAQ,gBAAgB,EAAE,EAAE,QAAQ,OAAO,EAAE;AACrE,MAAI,CAAC,6CAA6C,KAAK,UAAU;AAC/D,UAAM,IAAI,SAAS,uBAAuB,EAAE,QAAQ,IAAI,CAAC;AAG3D,MAAM,SAAS,QAAQ,IAAI,iBACrB,SAAS,QAAQ,IAAI,QACrB,cAAc,GAAG,QAAQ,IAAI;AAEnC,MAAI,CAAC,UAAU,CAAC;AACd,UAAM,IAAI,SAAS,iCAAiC,EAAE,QAAQ,IAAI,CAAC;AAGrE,MAAM,UAAU,eAAe,YAAY,QAAQ,QAAQ,WAAW;AAEtE,SAAOC,UAAS,OAAO;AACzB;;;AC5BA;AAAA;AAAA,gBAAAC;AAAA;AAAA,SAAS,QAAAC,aAAqC;AAK9C,eAAsBC,QAAO,EAAE,QAAQ,GAAuB;AAE5D,MAAM,UAAU,MAAM,aAAa,OAAO;AAC1C,EAAAC,YAAW,SAAS,OAAO;AAE3B,MAAI;AAEF,QAAM,WAAW,MAAM,gBAAgB,QAAQ,IAAI;AAEnD,QAAI,CAAC;AACH,aAAOC,MAAK,EAAE,OAAO,+BAA+B,GAAG,EAAE,QAAQ,IAAI,CAAC;AAIxE,QAAM,WAAW;AAAA,MACf,WAAW,SAAS,aAAa,QAAQ,KAAK,MAAM,GAAG,EAAE,CAAC;AAAA,MAC1D,cAAc,SAAS,gBAAgB;AAAA,MACvC,SAAS,SAAS,WAAW;AAAA,MAC7B,SAAS,SAAS,WAAW;AAAA,IAC/B,GAEM,iBAAiB;AAAA,MACrB,MAAM,QAAQ;AAAA,MACd;AAAA,MACA,oBAAoB,WAAW,QAAQ;AAAA,MACvC,YAAY;AAAA,IACd,GAGM,kBAAkB,qBAAqB,MAAM,cAAc;AAEjE,WAAOA,MAAK,iBAAiB;AAAA,MAC3B,SAAS;AAAA,QACP,iBAAiB;AAAA;AAAA,QACjB,gBAAgB;AAAA,MAClB;AAAA,IACF,CAAC;AAAA,EAEH,SAAS,OAAP;AACA,mBAAQ,MAAM,qBAAqB,KAAK,GACjCA,MAAK,EAAE,OAAO,wBAAwB,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,EACjE;AACF;;;AC/CA;AAAA;AAAA,gBAAAC;AAAA;AACA,SAAS,QAAAC,OAAM,iCAAiC,wCAAwC;AAQxF,OAAO,UAAU;AACjB,SAAS,eAAAC,oBAAmB;AAG5B,IAAM,qBAAqB;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAEM,gBAAgB,IAAI,OAAO;AAEjC,eAAsBC,QAAO,EAAE,QAAQ,GAAuB;AAC5D,MAAI,QAAQ,WAAW;AACrB,WAAOC,MAAK,oBAAoB,sBAAsB,oBAAoB,GAAG,EAAE,QAAQ,IAAI,CAAC;AAG9F,MAAI;AAEF,QAAM,UAAU,MAAM,aAAa,OAAO;AAC1C,IAAAC,YAAW,SAAS,OAAO;AAG3B,QAAM,gBAAgB,iCAAiC;AAAA,MACrD,WAAW,KAAK,KAAK,QAAQ,IAAI,GAAG,UAAU,SAAS;AAAA,MACvD,MAAM,CAAC,EAAE,UAAU,YAAY,MAAM;AAEnC,YAAI,CAAC,mBAAmB,SAAS,WAAW;AAC1C,gBAAM,IAAI,MAAM,sBAAsB,aAAa;AAIrD,YAAM,MAAM,KAAK,QAAQ,YAAY,EAAE,GACjC,WAAWH,aAAY,CAAC,EAAE,SAAS,KAAK;AAE9C,eAAO,GADW,KAAK,IAAI,KACJ,WAAW;AAAA,MACpC;AAAA,MACA,aAAa;AAAA,IACf,CAAC,GAGK,WAAW,MAAM,gCAAgC,SAAS,aAAa,GAEvE,OAAO,SAAS,IAAI,MAAM,GAC1B,YAAa,SAAS,IAAI,MAAM,KAAgB;AAEtD,QAAI,CAAC;AACH,aAAOE,MAAK,oBAAoB,oBAAoB,eAAe,GAAG,EAAE,QAAQ,IAAI,CAAC;AAIvF,QAAM,mBAAmB,oBAAoB,UAAU,EAAE,MAAM,UAAU,CAAC;AAC1E,QAAI,CAAC,iBAAiB;AACpB,aAAOA,MAAK;AAAA,QACV,iBAAiB,MAAM,OAAO,CAAC,EAAE;AAAA,QACjC;AAAA,MACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAGpB,QAAM,EAAE,KAAK,IAAI,iBAAiB;AAGlC,QAAI,KAAK,OAAO;AACd,aAAOA,MAAK;AAAA,QACV,mCAAmC,gBAAgB,OAAO;AAAA,QAC1D;AAAA,MACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAIpB,QAAM,UAAU,YAAY,KAAK,QAG3B,gBAAgB,MAAM,OAAO,MAAM,UAAU;AAAA,MACjD,OAAO;AAAA,QACL,QAAQ,QAAQ,WAAW;AAAA,QAC3B;AAAA,MACF;AAAA,IACF,CAAC;AAED,IAAI,iBACF,MAAM,OAAO,MAAM,OAAO;AAAA,MACxB,OAAO,EAAE,IAAI,cAAc,GAAG;AAAA,IAChC,CAAC;AAIH,QAAM,QAAQ,MAAM,OAAO,MAAM,OAAO;AAAA,MACtC,MAAM;AAAA,QACJ,QAAQ,QAAQ,WAAW;AAAA,QAC3B;AAAA,QACA,KAAK;AAAA,MACP;AAAA,IACF,CAAC,GAEK,WAAW;AAAA,MACf,SAAS;AAAA,MACT,OAAO;AAAA,QACL,IAAI,MAAM;AAAA,QACV,MAAM,MAAM;AAAA,QACZ,KAAK,MAAM;AAAA,QACX,UAAU,KAAK;AAAA,MACjB;AAAA,MACA,SAAS,GAAG;AAAA,IACd,GAGM,oBAAoB,qBAAqB,MAAM,QAAQ;AAC7D,WAAOA,MAAK,iBAAiB;AAAA,EAE/B,SAAS,OAAP;AAGA,QAFA,QAAQ,MAAM,qBAAqB,KAAK,GAEpC,iBAAiB;AACnB,YAAM;AAGR,WAAOA,MAAK;AAAA,MACV,iBAAiB,QAAQ,MAAM,UAAU;AAAA,MACzC;AAAA,IACF,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,EACpB;AACF;;;ACpIA;AAAA;AAAA;AAAA,gBAAAE;AAAA;AAAA,SAAS,QAAAC,cAAY;AACrB,SAAS,iBAAAC,gBAAe,YAAY;AAmB9B,mBAAAC,eAAA;AAjBN,eAAsBH,UAAS;AAC7B,MAAM,WAAW,eACX,aAAa,sBAAsB;AAEzC,SAAOC,OAAK;AAAA,IACV;AAAA,IACA;AAAA,IACA,QAAQ,QAAQ,IAAI,mBAAmB;AAAA,IACvC,QAAQ,QAAQ,IAAI,WAAW;AAAA,EACjC,CAAC;AACH;AAEe,SAAR,YAA6B;AAClC,MAAM,EAAE,UAAU,YAAY,QAAQ,OAAO,IAAIC,eAA6B;AAE9E,SACE,gBAAAC,QAAC,SAAI,OAAO,EAAE,YAAY,yBAAyB,YAAY,OAAO,SAAS,OAAO,GACpF;AAAA,oBAAAA,QAAC,QAAG,+BAAJ;AAAA;AAAA;AAAA;AAAA,WAAmB;AAAA,IAEnB,gBAAAA,QAAC,SAAI,OAAO,EAAE,cAAc,OAAO,GACjC;AAAA,sBAAAA,QAAC,QAAG,8BAAJ;AAAA;AAAA;AAAA;AAAA,aAAkB;AAAA,MAClB,gBAAAA,QAAC,OAAE;AAAA;AAAA,QAAY;AAAA,QAAS;AAAA,WAAxB;AAAA;AAAA;AAAA;AAAA,aAAsC;AAAA,MACtC,gBAAAA,QAAC,OAAE;AAAA;AAAA,QAAU;AAAA,WAAb;AAAA;AAAA;AAAA;AAAA,aAAoB;AAAA,MACpB,gBAAAA,QAAC,OAAE;AAAA;AAAA,QAAU;AAAA,WAAb;AAAA;AAAA;AAAA;AAAA,aAAoB;AAAA,SAJtB;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IAEA,gBAAAA,QAAC,SAAI,OAAO,EAAE,cAAc,OAAO,GACjC;AAAA,sBAAAA,QAAC,QAAG,gCAAJ;AAAA;AAAA;AAAA;AAAA,aAAoB;AAAA,MACpB,gBAAAA;AAAA,QAAC;AAAA;AAAA,UACC,IAAI;AAAA,UACJ,OAAO;AAAA,YACL,SAAS;AAAA,YACT,iBAAiB;AAAA,YACjB,OAAO;AAAA,YACP,gBAAgB;AAAA,YAChB,cAAc;AAAA,UAChB;AAAA,UACD;AAAA;AAAA,YACiB;AAAA,YAAS;AAAA;AAAA;AAAA,QAV3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWA;AAAA,SAbF;AAAA;AAAA;AAAA;AAAA,WAcA;AAAA,IAEA,gBAAAA,QAAC,SAAI,OAAO,EAAE,WAAW,QAAQ,UAAU,QAAQ,OAAO,OAAO,GAC/D;AAAA,sBAAAA,QAAC,OAAE,0CAAH;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,gBAAAA,QAAC,QACC;AAAA,wBAAAA,QAAC,QAAG,kEAAJ;AAAA;AAAA;AAAA;AAAA,eAAsD;AAAA,QACtD,gBAAAA,QAAC,QAAG,kDAAJ;AAAA;AAAA;AAAA;AAAA,eAAsC;AAAA,QACtC,gBAAAA,QAAC,QAAG,sEAAJ;AAAA;AAAA;AAAA;AAAA,eAA0D;AAAA,WAH5D;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,SANF;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,OAjCF;AAAA;AAAA;AAAA;AAAA,SAkCA;AAEJ;;;ACvDA;AAAA;AAAA,gBAAAC;AAAA;AACA,SAAS,QAAAC,cAAY;AAUrB,eAAsBC,QAAO,EAAE,QAAQ,GAAuB;AAC5D,MAAM,YAAY,KAAK,IAAI;AAE3B,MAAI;AAEF,eAAW,OAAO;AAGlB,QAAM,YAAY,MAAM,eAAe,GAGjC,qBAAqB,qBAAqB,MAAM,SAAS,GAEzD,WAAW,KAAK,IAAI,IAAI,WACxB,aAAa,UAAU,WAAW,YAAY,MAAM;AAE1D,sBAAW,SAAS,QAAW,EAAE,UAAU,WAAW,CAAC,GAEhDC,OAAK,oBAAoB;AAAA,MAC9B,QAAQ;AAAA,MACR,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,iBAAiB;AAAA,MACnB;AAAA,IACF,CAAC;AAAA,EAEH,SAAS,OAAP;AACA,YAAQ,MAAM,mCAAmC,KAAK;AAEtD,QAAM,WAAW,KAAK,IAAI,IAAI,WACxB,eAAe,iBAAiB,QAAQ,MAAM,UAAU;AAE9D,sBAAW,SAAS,QAAW;AAAA,MAC7B;AAAA,MACA,YAAY;AAAA,MACZ,OAAO;AAAA,IACT,CAAC,GAEMA;AAAA,MACL;AAAA,QACE,QAAQ;AAAA,QACR,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,iBAAiB;AAAA,QACnB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;;;AChEA;AAAA;AAAA,gBAAAC;AAAA;AACA,SAAS,QAAAC,cAAY;AAUrB,eAAsBC,SAAO,EAAE,QAAQ,GAAuB;AAC5D,MAAM,YAAY,KAAK,IAAI;AAE3B,MAAI;AAEF,eAAW,OAAO;AAGlB,QAAM,SAAS,MAAM,mBAAmB,EAAK,GAGvC,kBAAkB,qBAAqB,MAAM,MAAM,GAEnD,WAAW,KAAK,IAAI,IAAI;AAC9B,sBAAW,SAAS,QAAW,EAAE,UAAU,YAAY,IAAI,CAAC,GAErDC,OAAK,iBAAiB;AAAA,MAC3B,QAAQ,OAAO,WAAW,YAAY,MAAM;AAAA,MAC5C,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,iBAAiB;AAAA,MACnB;AAAA,IACF,CAAC;AAAA,EAEH,SAAS,OAAP;AACA,YAAQ,MAAM,gCAAgC,KAAK;AAEnD,QAAM,WAAW,KAAK,IAAI,IAAI,WACxB,eAAe,iBAAiB,QAAQ,MAAM,UAAU;AAE9D,sBAAW,SAAS,QAAW;AAAA,MAC7B;AAAA,MACA,YAAY;AAAA,MACZ,OAAO;AAAA,IACT,CAAC,GAEMA;AAAA,MACL;AAAA,QACE,QAAQ;AAAA,QACR,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,gBAAgB;AAAA,UAChB,iBAAiB;AAAA,QACnB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;;;AC9DA;AAAA;AAAA;AAAA,gBAAAC;AAAA;AAAA,SAAS,QAAAC,cAAY;AACrB,SAAS,iBAAAC,gBAAe,QAAAC,aAAY;AAyC9B,mBAAAC,eAAA;AAtCN,eAAsBC,WAAS;AAE7B,MAAI;AACF,UAAM,OAAO;AACb,QAAM,YAAY,MAAM,OAAO,KAAK,MAAM,GACpC,cAAc,MAAM,OAAO,KAAK,SAAS;AAAA,MAC7C,MAAM;AAAA,MACN,SAAS,EAAE,aAAa,OAAO;AAAA,MAC/B,QAAQ;AAAA,QACN,YAAY;AAAA,QACZ,aAAa;AAAA,QACb,eAAe;AAAA,MACjB;AAAA,IACF,CAAC;AAED,WAAOC,OAAK;AAAA,MACV,SAAS;AAAA,MACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,UAAU;AAAA,MACV;AAAA,MACA;AAAA,IACF,CAAC;AAAA,EACH,QAAE;AACA,WAAOA,OAAK;AAAA,MACV,SAAS;AAAA,MACT,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,UAAU;AAAA,MACV,WAAW;AAAA,MACX,aAAa,CAAC;AAAA,IAChB,CAAC;AAAA,EACH;AACF;AAEe,SAAR,QAAyB;AAC9B,MAAM,EAAE,SAAS,WAAW,UAAU,WAAW,YAAY,IAAIC,eAA6B;AAE9F,SACE,gBAAAH,QAAC,SAAI,OAAO,EAAE,YAAY,yBAAyB,YAAY,OAAO,SAAS,OAAO,GACpF;AAAA,oBAAAA,QAAC,QAAI,qBAAL;AAAA;AAAA;AAAA;AAAA,WAAa;AAAA,IACb,gBAAAA,QAAC,OAAE;AAAA;AAAA,MAAc;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA,WAA2B;AAAA,IAC3B,gBAAAA,QAAC,OAAE;AAAA;AAAA,MAAkB;AAAA,SAArB;AAAA;AAAA;AAAA;AAAA,WAA8B;AAAA,IAC9B,gBAAAA,QAAC,OAAE;AAAA;AAAA,MAAmB;AAAA,SAAtB;AAAA;AAAA;AAAA;AAAA,WAAgC;AAAA,IAChC,gBAAAA,QAAC,OAAE,qDAAH;AAAA;AAAA;AAAA;AAAA,WAAmC;AAAA,IAEnC,gBAAAA,QAAC,SAAI,OAAO,EAAE,WAAW,OAAO,GAC9B;AAAA,sBAAAA,QAAC,QAAG,kCAAJ;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAA,MACtB,gBAAAA;AAAA,QAACI;AAAA,QAAA;AAAA,UACC,IAAG;AAAA,UACH,OAAO;AAAA,YACL,SAAS;AAAA,YACT,iBAAiB;AAAA,YACjB,OAAO;AAAA,YACP,gBAAgB;AAAA,YAChB,cAAc;AAAA,YACd,aAAa;AAAA,UACf;AAAA,UACD;AAAA;AAAA,QAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYA;AAAA,SAdF;AAAA;AAAA;AAAA;AAAA,WAeA;AAAA,IAEC,YAAY,SAAS,KACpB,gBAAAJ,QAAC,SAAI,OAAO,EAAE,WAAW,OAAO,GAC9B;AAAA,sBAAAA,QAAC,QAAG,0CAAJ;AAAA;AAAA;AAAA;AAAA,aAA8B;AAAA,MAC9B,gBAAAA,QAAC,QACE,sBAAY,IAAI,CAAC,SAChB,gBAAAA,QAAC,QACE;AAAA,aAAK;AAAA,QAAW;AAAA,QACL,IAAI,KAAK,KAAK,WAAW,EAAE,eAAe;AAAA,QACrD,KAAK,iBAAiB,kBAAkB,IAAI,KAAK,KAAK,aAAa,EAAE,eAAe;AAAA,WAH9E,KAAK,YAAd;AAAA;AAAA;AAAA;AAAA,aAIA,CACD,KAPH;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,SAVF;AAAA;AAAA;AAAA;AAAA,WAWA;AAAA,OApCJ;AAAA;AAAA;AAAA;AAAA,SAsCA;AAEJ;;;ACjFA;AAAA;AAAA;AAAA,gBAAAK;AAAA;AAAA,SAAS,QAAAC,cAAqC;AAC9C,SAAS,iBAAAC,gBAAe,UAAAC,SAAQ,aAAa,QAAAC,aAAY;AAEzD;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA,UAAAC;AAAA,EACA,QAAAC;AAAA,EACA,QAAAC;AAAA,EACA,QAAAC;AAAA,EACA,UAAAC;AAAA,OACK;AACP,SAAS,YAAAC,WAAU,eAAAC,oBAAmB;AAkChC,mBAAAC,eAAA;AA9BN,eAAsBC,SAAO,EAAE,QAAQ,GAAuB;AAC5D,MAAM,MAAM,IAAI,IAAI,QAAQ,GAAG,GAGzB,UAAU,MAAM,aAAa,OAAO;AAC1C,SAAAC,YAAW,SAAS,OAAO,GAEpBC,OAAK;AAAA,IACV,MAAM,QAAQ;AAAA,IACd,MAAM,IAAI,aAAa,IAAI,MAAM;AAAA,IACjC,iBAAiB;AAAA,MACf,QAAQ,QAAQ,IAAI,mBAAmB;AAAA,MACvC,MAAM,QAAQ;AAAA,MACd,MAAM,IAAI,aAAa,IAAI,MAAM,KAAK;AAAA,IACxC;AAAA,EACF,CAAC;AACH;AAEe,SAAR,cAA+B;AACpC,MAAM,EAAE,KAAK,IAAIC,eAA6B,GACxC,WAAW,YAAY,GACvB,CAAC,wBAAwB,yBAAyB,IAAIN,UAAS,EAAK,GAEpE,+BAA+BC;AAAA,IACnC,MAAM,0BAA0B,CAACM,4BAA2B,CAACA,uBAAsB;AAAA,IACnF,CAAC;AAAA,EACH,GAEM,mBACJ,gBAAAL,QAAC,cAAW,UAAU,SAAS,UAC7B,0BAAAA;AAAA,IAAC,WAAW;AAAA,IAAX;AAAA,MACC,OAAO;AAAA,QACL;AAAA,UACE,KAAK;AAAA,UACL,OAAO;AAAA,UACP,MAAM;AAAA,UACN,UAAU,SAAS,aAAa;AAAA,QAClC;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,OAAO;AAAA,UACP,MAAM;AAAA,UACN,UAAU,SAAS,aAAa;AAAA,QAClC;AAAA,MACF;AAAA;AAAA,IAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeA,KAhBF;AAAA;AAAA;AAAA;AAAA,SAiBA,GAGI,eACJ,gBAAAA;AAAA,IAAC;AAAA;AAAA,MACC,sBAAoB;AAAA,MACpB,oBAAoB;AAAA;AAAA,IAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAGA,GAGI,cAAc,SAAS;AAG7B,SACE,gBAAAA;AAAA,IAAC;AAAA;AAAA,MACC,QAAQ;AAAA,MACR,YAAY;AAAA,MACZ,sBAAsB;AAAA,MACtB,qBAAqB;AAAA,MAEpB,UATc,gBAAgB,YAAY,gBAAgB,YAUzD,gBAAAA,QAACN,OAAA,EAAK,OAAM,oBACV,0BAAAM,QAACP,SAAA,EACC;AAAA,wBAAAO,QAACP,QAAO,SAAP,EACC,0BAAAO,QAACJ,OAAA,EACC,0BAAAI,QAAC,SAAI,OAAO,EAAE,SAAS,OAAO,GAC5B;AAAA,0BAAAA,QAACL,OAAA,EAAK,SAAQ,aAAY,IAAG,MAAK,kCAAlC;AAAA;AAAA;AAAA;AAAA,iBAAoD;AAAA,UACpD,gBAAAK,QAACL,OAAA,EAAK,SAAQ,UAAS,IAAG,KAAI,MAAK,WAAU,uEAA7C;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,gBAAAK,QAAC,SAAI,OAAO,EAAE,WAAW,OAAO,GAC9B,0BAAAA,QAACL,OAAA,EAAK,SAAQ,aAAY,IAAG,MAAK;AAAA;AAAA,YAAO;AAAA,eAAzC;AAAA;AAAA;AAAA;AAAA,iBAA8C,KADhD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,gBAAAK,QAAC,SAAI,OAAO,EAAE,WAAW,OAAO,GAC9B,0BAAAA,QAACM,OAAA,EAAK,IAAG,mBACP,0BAAAN,QAACH,SAAA,EAAO,SAAQ,WAAU,kCAA1B;AAAA;AAAA;AAAA;AAAA,iBAA4C,KAD9C;AAAA;AAAA;AAAA;AAAA,iBAEA,KAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,aAZF;AAAA;AAAA;AAAA;AAAA,eAaA,KAdF;AAAA;AAAA;AAAA;AAAA,eAeA,KAhBF;AAAA;AAAA;AAAA;AAAA,eAiBA;AAAA,QAEA,gBAAAG,QAACP,QAAO,SAAP,EAAe,SAAQ,YACtB,0BAAAO,QAACJ,OAAA,EACC,0BAAAI,QAAC,SAAI,OAAO,EAAE,SAAS,OAAO,GAC5B;AAAA,0BAAAA,QAACL,OAAA,EAAK,SAAQ,aAAY,IAAG,MAAK,2BAAlC;AAAA;AAAA;AAAA;AAAA,iBAA6C;AAAA,UAC7C,gBAAAK,QAAC,SAAI,OAAO,EAAE,WAAW,OAAO,GAC9B;AAAA,4BAAAA,QAACL,OAAA,EAAK,SAAQ,UAAS,IAAG,KAAI,8BAA9B;AAAA;AAAA;AAAA;AAAA,mBAA4C;AAAA,YAC5C,gBAAAK,QAACL,OAAA,EAAK,SAAQ,UAAS,IAAG,KAAI,kCAA9B;AAAA;AAAA;AAAA;AAAA,mBAAgD;AAAA,eAFlD;AAAA;AAAA;AAAA;AAAA,iBAGA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA,eAMA,KAPF;AAAA;AAAA;AAAA;AAAA,eAQA,KATF;AAAA;AAAA;AAAA;AAAA,eAUA;AAAA,WA9BF;AAAA;AAAA;AAAA;AAAA,aA+BA,KAhCF;AAAA;AAAA;AAAA;AAAA,aAiCA,IAEA,gBAAAK,QAACO,SAAA,IAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA;AAAA,IA1CZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA4CA;AAEJ;;;AC3HA,IAAO,0BAAQ,EAAC,OAAQ,EAAC,QAAS,mCAAkC,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,EAAC,GAAE,QAAS,EAAC,MAAO,EAAC,IAAK,QAAO,UAAW,QAAU,MAAO,IAAG,OAAQ,QAAU,eAAgB,QAAU,QAAS,2BAA0B,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAM,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,iBAAgB,EAAC,IAAK,iBAAgB,UAAW,QAAO,MAAO,QAAU,OAAQ,IAAK,eAAgB,QAAU,QAAS,oCAAmC,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAK,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,gBAAe,EAAC,IAAK,gBAAe,UAAW,QAAO,MAAO,SAAQ,OAAQ,QAAU,eAAgB,QAAU,QAAS,mCAAkC,SAAU,CAAC,oCAAmC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAK,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,yBAAwB,EAAC,IAAK,yBAAwB,UAAW,gBAAe,MAAO,YAAW,OAAQ,QAAU,eAAgB,QAAU,QAAS,4CAA2C,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAK,WAAY,IAAK,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,6BAA4B,EAAC,IAAK,6BAA4B,UAAW,QAAO,MAAO,sBAAqB,OAAQ,QAAU,eAAgB,QAAU,QAAS,gDAA+C,SAAU,QAAU,WAAY,IAAM,WAAY,IAAK,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,yBAAwB,EAAC,IAAK,yBAAwB,UAAW,QAAO,MAAO,kBAAiB,OAAQ,QAAU,eAAgB,QAAU,QAAS,4CAA2C,SAAU,QAAU,WAAY,IAAM,WAAY,IAAK,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,qBAAoB,EAAC,IAAK,qBAAoB,UAAW,QAAO,MAAO,cAAa,OAAQ,QAAU,eAAgB,QAAU,QAAS,wCAAuC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAK,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,uBAAsB,EAAC,IAAK,uBAAsB,UAAW,QAAO,MAAO,gBAAe,OAAQ,QAAU,eAAgB,QAAU,QAAS,0CAAyC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAK,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,uBAAsB,EAAC,IAAK,uBAAsB,UAAW,QAAO,MAAO,gBAAe,OAAQ,QAAU,eAAgB,QAAU,QAAS,0CAAyC,SAAU,QAAU,WAAY,IAAK,WAAY,IAAM,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,qBAAoB,EAAC,IAAK,qBAAoB,UAAW,QAAO,MAAO,cAAa,OAAQ,QAAU,eAAgB,QAAU,QAAS,wCAAuC,SAAU,QAAU,WAAY,IAAK,WAAY,IAAM,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,wBAAuB,EAAC,IAAK,wBAAuB,UAAW,QAAO,MAAO,iBAAgB,OAAQ,QAAU,eAAgB,QAAU,QAAS,2CAA0C,SAAU,QAAU,WAAY,IAAM,WAAY,IAAK,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,uBAAsB,EAAC,IAAK,uBAAsB,UAAW,QAAO,MAAO,gBAAe,OAAQ,QAAU,eAAgB,QAAU,QAAS,0CAAyC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAK,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,kBAAiB,EAAC,IAAK,kBAAiB,UAAW,QAAO,MAAO,WAAU,OAAQ,QAAU,eAAgB,QAAU,QAAS,qCAAoC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAK,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,oBAAmB,EAAC,IAAK,oBAAmB,UAAW,QAAO,MAAO,aAAY,OAAQ,QAAU,eAAgB,QAAU,QAAS,uCAAsC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAK,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,qBAAoB,EAAC,IAAK,qBAAoB,UAAW,QAAO,MAAO,cAAa,OAAQ,QAAU,eAAgB,QAAU,QAAS,wCAAuC,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAK,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,mCAAkC,EAAC,IAAK,mCAAkC,UAAW,QAAO,MAAO,4BAA2B,OAAQ,QAAU,eAAgB,QAAU,QAAS,sDAAqD,SAAU,QAAU,WAAY,IAAK,WAAY,IAAM,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,mCAAkC,EAAC,IAAK,mCAAkC,UAAW,QAAO,MAAO,4BAA2B,OAAQ,QAAU,eAAgB,QAAU,QAAS,sDAAqD,SAAU,QAAU,WAAY,IAAK,WAAY,IAAM,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,EAAC,GAAE,SAAU,YAAW,KAAM,EAAC,SAAU,oCAAmC,WAAY,cAAa,GAAE,KAAM,8BAA6B;;;ACmB70L,IAAM,OAAO,eAEP,uBAAuB,gBACvB,SAAS,EAAC,mBAAoB,IAAM,sBAAuB,IAAM,qBAAsB,IAAM,gBAAiB,IAAM,gBAAiB,IAAM,uBAAwB,IAAM,uBAAwB,GAAK,GACtM,aAAa,WACb,QAAQ,EAAE,QAAQ,0BAAY,GAC9B,SAAS;AAAA,EACpB,MAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,mCAAmC;AAAA,IAC/B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,mCAAmC;AAAA,IAC/B,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,6BAA6B;AAAA,IACzB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,yBAAyB;AAAA,IACrB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,yBAAyB;AAAA,IACrB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,wBAAwB;AAAA,IACpB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,uBAAuB;AAAA,IACnB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,uBAAuB;AAAA,IACnB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,uBAAuB;AAAA,IACnB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,qBAAqB;AAAA,IACjB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,qBAAqB;AAAA,IACjB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,qBAAqB;AAAA,IACjB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,oBAAoB;AAAA,IAChB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,kBAAkB;AAAA,IACd,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,iBAAiB;AAAA,IACb,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AACF;",
  "names": ["jsxDEV", "createHmac", "salt", "createHmac", "path", "action", "json", "action", "json", "json", "createHmac", "shopRecord", "logRequest", "json", "action", "loader", "json", "jsxDEV", "loader", "logRequest", "json", "action", "loader", "json", "loader", "json", "loader", "createHmac", "timingSafeEqual", "loader", "loader", "json", "PRODUCTS_QUERY", "loader", "logRequest", "json", "action", "json", "action", "json", "logRequest", "loader", "redirect", "loader", "redirect", "loader", "json", "loader", "logRequest", "json", "action", "json", "randomBytes", "action", "json", "logRequest", "loader", "json", "useLoaderData", "jsxDEV", "loader", "json", "loader", "json", "loader", "json", "loader", "json", "loader", "json", "useLoaderData", "Link", "jsxDEV", "loader", "json", "useLoaderData", "Link", "loader", "json", "useLoaderData", "Outlet", "Link", "Layout", "Page", "Text", "Card", "Button", "useState", "useCallback", "jsxDEV", "loader", "logRequest", "json", "useLoaderData", "mobileNavigationActive", "Link", "Outlet"]
}
