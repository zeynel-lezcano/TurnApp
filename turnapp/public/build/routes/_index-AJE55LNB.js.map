{
  "version": 3,
  "sources": ["empty-module:~/lib/prisma.server", "../../../app/routes/_index.tsx"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_index.tsx\");\n  import.meta.hot.lastModified = \"1755715513329.0107\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData, Link } from \"@remix-run/react\";\nimport { prisma } from \"~/lib/prisma.server\";\nexport async function loader() {\n  // Test DB connection\n  try {\n    await prisma.$queryRaw`SELECT 1`;\n    const shopCount = await prisma.shop.count();\n    const recentShops = await prisma.shop.findMany({\n      take: 5,\n      orderBy: {\n        installedAt: 'desc'\n      },\n      select: {\n        shopDomain: true,\n        installedAt: true,\n        uninstalledAt: true\n      }\n    });\n    return json({\n      message: \"TurnApp - Shopify App Admin Dashboard\",\n      timestamp: new Date().toISOString(),\n      dbStatus: \"connected\",\n      shopCount,\n      recentShops\n    });\n  } catch (error) {\n    return json({\n      message: \"TurnApp - Shopify App Admin Dashboard\",\n      timestamp: new Date().toISOString(),\n      dbStatus: \"error\",\n      shopCount: 0,\n      recentShops: []\n    });\n  }\n}\nexport default function Index() {\n  _s();\n  const {\n    message,\n    timestamp,\n    dbStatus,\n    shopCount,\n    recentShops\n  } = useLoaderData();\n  return <div style={{\n    fontFamily: \"system-ui, sans-serif\",\n    lineHeight: \"1.8\",\n    padding: \"20px\"\n  }}>\n      <h1>{message}</h1>\n      <p>Server Time: {timestamp}</p>\n      <p>Database Status: {dbStatus}</p>\n      <p>Registered Shops: {shopCount}</p>\n      <p>Status: OAuth Flow Implemented \u2705</p>\n      \n      <div style={{\n      marginTop: \"30px\"\n    }}>\n        <h3>Development Tools:</h3>\n        <Link to=\"/test/oauth\" style={{\n        padding: \"8px 16px\",\n        backgroundColor: \"#007C3B\",\n        color: \"white\",\n        textDecoration: \"none\",\n        borderRadius: \"4px\",\n        marginRight: \"10px\"\n      }}>\n          Test OAuth Flow\n        </Link>\n      </div>\n\n      {recentShops.length > 0 && <div style={{\n      marginTop: \"30px\"\n    }}>\n          <h3>Recent Shop Installations:</h3>\n          <ul>\n            {recentShops.map(shop => <li key={shop.shopDomain}>\n                {shop.shopDomain} - \n                Installed: {new Date(shop.installedAt).toLocaleString()}\n                {shop.uninstalledAt && ` (Uninstalled: ${new Date(shop.uninstalledAt).toLocaleString()})`}\n              </li>)}\n          </ul>\n        </div>}\n    </div>;\n}\n_s(Index, \"lEtFoZN/aQs7RFk56r7Edmgnfgc=\", false, function () {\n  return [useLoaderData];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACqBlB,kBAAqB;AAErB,oBAAuB;AAgDjB;AAtEN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,4BAA8B,EAAE;AAAA,EACzE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAuB;AACvB,cAAY,IAAI,eAAe;AACjC;AAuCe,SAAR,QAAyB;AAC9B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,mDAAC,SAAI,OAAO;AAAA,IACjB,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,SAAS;AAAA,EACX,GACI;AAAA,uDAAC,QAAI,qBAAL;AAAA;AAAA;AAAA;AAAA,WAAa;AAAA,IACb,mDAAC,OAAE;AAAA;AAAA,MAAc;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA,WAA2B;AAAA,IAC3B,mDAAC,OAAE;AAAA;AAAA,MAAkB;AAAA,SAArB;AAAA;AAAA;AAAA;AAAA,WAA8B;AAAA,IAC9B,mDAAC,OAAE;AAAA;AAAA,MAAmB;AAAA,SAAtB;AAAA;AAAA;AAAA;AAAA,WAAgC;AAAA,IAChC,mDAAC,OAAE,qDAAH;AAAA;AAAA;AAAA;AAAA,WAAmC;AAAA,IAEnC,mDAAC,SAAI,OAAO;AAAA,MACZ,WAAW;AAAA,IACb,GACI;AAAA,yDAAC,QAAG,kCAAJ;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAA,MACtB,mDAAC,QAAK,IAAG,eAAc,OAAO;AAAA,QAC9B,SAAS;AAAA,QACT,iBAAiB;AAAA,QACjB,OAAO;AAAA,QACP,gBAAgB;AAAA,QAChB,cAAc;AAAA,QACd,aAAa;AAAA,MACf,GAAG,+BAPD;AAAA;AAAA;AAAA;AAAA,aASA;AAAA,SAbF;AAAA;AAAA;AAAA;AAAA,WAcA;AAAA,IAEC,YAAY,SAAS,KAAK,mDAAC,SAAI,OAAO;AAAA,MACvC,WAAW;AAAA,IACb,GACM;AAAA,yDAAC,QAAG,0CAAJ;AAAA;AAAA;AAAA;AAAA,aAA8B;AAAA,MAC9B,mDAAC,QACE,sBAAY,IAAI,UAAQ,mDAAC,QACrB;AAAA,aAAK;AAAA,QAAW;AAAA,QACL,IAAI,KAAK,KAAK,WAAW,EAAE,eAAe;AAAA,QACrD,KAAK,iBAAiB,kBAAkB,IAAI,KAAK,KAAK,aAAa,EAAE,eAAe;AAAA,WAHvD,KAAK,YAAd;AAAA;AAAA;AAAA;AAAA,aAIvB,CAAK,KALT;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,SAVuB;AAAA;AAAA;AAAA;AAAA,WAWzB;AAAA,OAtCC;AAAA;AAAA;AAAA;AAAA,SAuCL;AACJ;AACA,GAAG,OAAO,gCAAgC,OAAO,WAAY;AAC3D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
